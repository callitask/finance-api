# ===================================================================
# SPRING BOOT PRODUCTION SETTINGS (application-prod.properties)
# ===================================================================
# This file contains the configuration for the PRODUCTION environment.
# To activate this profile, run the application with the flag: --spring.profiles.active=prod
#
# IMPORTANT: All sensitive values (passwords, secret keys, API keys)
# are loaded from environment variables. They are NOT stored in this file.
# You must set these variables in your production server environment.
# ===================================================================

# --- Server Settings ---
# The port the application will run on in production.
server.port=8080

# ===================================================================
# DATABASE CONFIGURATION (PRODUCTION)
# ===================================================================
# JDBC URL for the production MySQL/MariaDB database.
# Example format: jdbc:mariadb://<your-db-host>:<port>/<your-db-name>
# SET THIS ENVIRONMENT VARIABLE: PROD_DB_URL
spring.datasource.url=${PROD_DB_URL}

# Username for the production database.
# SET THIS ENVIRONMENT VARIABLE: PROD_DB_USERNAME
spring.datasource.username=${PROD_DB_USERNAME}

# Password for the production database.
# SET THIS ENVIRONMENT VARIABLE: PROD_DB_PASSWORD
spring.datasource.password=${PROD_DB_PASSWORD}

# *** FIXED ***
# Specify the MariaDB driver, which is compatible with MySQL.
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver

# ===================================================================
# JPA & HIBERNATE (PRODUCTION SAFETY SETTINGS)
# ===================================================================
# CRITICAL: 'validate' checks if the DB schema matches your code.
# This PREVENTS accidental changes to your production database.
spring.jpa.hibernate.ddl-auto=validate

# *** FIXED ***
# Specify the Hibernate dialect for MySQL for better performance.
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# Disable showing SQL queries in production logs for performance and security.
spring.jpa.show-sql=false

# ===================================================================
# SECURITY & JWT
# ===================================================================
# Secret key for signing JWTs. This MUST be a long, random, and secure string.
# SET THIS ENVIRONMENT VARIABLE: JWT_SECRET_KEY
jwt.secret=${JWT_SECRET_KEY}

# JWT token expiration time in milliseconds (86400000 = 24 hours).
jwt.expiration.ms=86400000

# Secret for securing internal, non-user-facing API endpoints.
# SET THIS ENVIRONMENT VARIABLE: INTERNAL_API_SECRET_KEY
app.security.internal-secret=${INTERNAL_API_SECRET_KEY}

# ===================================================================
# LOGGING
# ===================================================================
# Set the root logging level to INFO for production.
logging.level.root=INFO
logging.level.com.treishvaam.finance=INFO

# ===================================================================
# CORS (Cross-Origin Resource Sharing)
# ===================================================================
# The URL of the production frontend application.
cors.allowed-origins=https://treishfin.treishvaamgroup.com

# ===================================================================
# EXTERNAL APIS & SERVICES
# ===================================================================
# API Key for the market data provider.
# SET THIS ENVIRONMENT VARIABLE: MARKET_DATA_API_KEY
fmp.api.key=${MARKET_DATA_API_KEY}

# ===================================================================
# FILE STORAGE
# ===================================================================
# A dedicated, absolute path on the production server for file uploads.
# Ensure this directory exists and the application has write permissions.
storage.upload-dir=C:/treishvaam-uploads-prod