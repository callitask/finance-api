{"version":3,"file":"static/js/279.ebcab29f.chunk.js","mappings":"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","sources":["components/ResponsiveAuthImage.js","components/ShareButtons.js","components/TableOfContents.js","pages/SinglePostPage.js"],"sourcesContent":["import React from 'react';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport 'react-lazy-load-image-component/src/effects/blur.css';\r\nimport { API_URL } from '../apiConfig';\r\n\r\nconst ResponsiveAuthImage = ({ baseName, alt, className, sizes, onLoad }) => {\r\n    // Render a simple placeholder if baseName is invalid.\r\n    if (!baseName || typeof baseName !== 'string') {\r\n        return <div className={`bg-gray-200 ${className}`} />;\r\n    }\r\n\r\n    const uuidRegex = /([a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})/;\r\n    const match = baseName.match(uuidRegex);\r\n\r\n    if (!match) {\r\n        console.warn(`ResponsiveAuthImage: Could not extract a valid image ID from baseName: \"${baseName}\"`);\r\n        return <div className={`bg-gray-200 ${className}`} />;\r\n    }\r\n\r\n    const cleanedBaseName = match[0];\r\n\r\n    // Construct image URLs\r\n    const src = `${API_URL}/api/uploads/${cleanedBaseName}-small.webp`;\r\n    const placeholderSrc = `${API_URL}/api/uploads/${cleanedBaseName}-tiny.webp`; // New tiny version for the blur effect\r\n    const srcSet = [\r\n        `${API_URL}/api/uploads/${cleanedBaseName}-small.webp 300w`,\r\n        `${API_URL}/api/uploads/${cleanedBaseName}-medium.webp 600w`,\r\n        `${API_URL}/api/uploads/${cleanedBaseName}.webp 1200w`\r\n    ].join(', ');\r\n\r\n    return (\r\n        <LazyLoadImage\r\n            alt={alt}\r\n            src={src}\r\n            srcSet={srcSet}\r\n            sizes={sizes}\r\n            placeholderSrc={placeholderSrc}\r\n            effect=\"blur\"\r\n            className={className}\r\n            afterLoad={onLoad} // Use afterLoad for the library's load event\r\n        />\r\n    );\r\n};\r\n\r\nexport default ResponsiveAuthImage;","import React from 'react';\r\nimport {\r\n    FacebookShareButton,\r\n    LinkedinShareButton,\r\n    WhatsappShareButton,\r\n    TelegramShareButton,\r\n    TwitterShareButton, // Reverted to TwitterShareButton\r\n} from 'react-share';\r\nimport {\r\n    FacebookIcon,\r\n    LinkedinIcon,\r\n    WhatsappIcon,\r\n    TelegramIcon,\r\n    TwitterIcon, // Reverted to TwitterIcon\r\n} from 'react-share';\r\nimport { FaCopy } from 'react-icons/fa';\r\n\r\nconst ShareButtons = ({ url, title, summary }) => {\r\n    const handleCopy = () => {\r\n        navigator.clipboard.writeText(url);\r\n        alert('Link copied to clipboard!');\r\n    };\r\n\r\n    return (\r\n        <div className=\"flex flex-wrap items-center gap-4 mt-8\">\r\n            <span className=\"font-bold text-gray-700 text-lg mr-2\">Share this article:</span>\r\n            <div className=\"flex items-center gap-3\">\r\n                <TwitterShareButton url={url} title={title}>\r\n                    <TwitterIcon size={40} round />\r\n                </TwitterShareButton>\r\n\r\n                <FacebookShareButton url={url} quote={summary}>\r\n                    <FacebookIcon size={40} round />\r\n                </FacebookShareButton>\r\n\r\n                <LinkedinShareButton url={url} title={title} summary={summary}>\r\n                    <LinkedinIcon size={40} round />\r\n                </LinkedinShareButton>\r\n\r\n                <WhatsappShareButton url={url} title={title} separator=\":: \">\r\n                    <WhatsappIcon size={40} round />\r\n                </WhatsappShareButton>\r\n\r\n                <TelegramShareButton url={url} title={title}>\r\n                    <TelegramIcon size={40} round />\r\n                </TelegramShareButton>\r\n\r\n                <button\r\n                    onClick={handleCopy}\r\n                    className=\"flex items-center justify-center w-10 h-10 bg-gray-200 rounded-full hover:bg-gray-300 transition\"\r\n                    aria-label=\"Copy link\"\r\n                    title=\"Copy Link\"\r\n                >\r\n                    <FaCopy className=\"text-gray-600\" />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ShareButtons;","// src/components/TableOfContents.js\r\nimport React, { useState } from 'react';\r\n\r\nconst TableOfContents = ({ headings, activeId, progress }) => {\r\n  const [isExpanded, setIsExpanded] = useState(true);\r\n  if (!headings || headings.length === 0) return null;\r\n\r\n  const handleLinkClick = (e, id) => {\r\n    e.preventDefault();\r\n    const element = document.getElementById(id);\r\n    if (element) {\r\n        // Adjust for sticky main navbar height (approx 80px-100px)\r\n        const yOffset = -90; \r\n        const y = element.getBoundingClientRect().top + window.pageYOffset + yOffset;\r\n        window.scrollTo({top: y, behavior: 'smooth'});\r\n    }\r\n  };\r\n\r\n  return (\r\n    // UPDATED: Added relative positioning for the progress bar\r\n    <div className=\"toc-container\">\r\n      {/* NEW: Vertical Progress Bar */}\r\n      <div className=\"toc-progress-track\">\r\n        <div className=\"toc-progress-fill\" style={{ height: `${progress}%` }}></div>\r\n      </div>\r\n\r\n      {/* UPDATED: Added left padding to avoid overlapping the progress bar */}\r\n      <div className=\"pl-5\">\r\n        <button onClick={() => setIsExpanded(!isExpanded)} className=\"toc-header\">\r\n          <span>On this page</span>\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={`toc-chevron ${isExpanded ? '' : '-rotate-90'}`}>\r\n            <path fillRule=\"evenodd\" d=\"M5.23 7.21a.75.75 0 011.06.02L10 11.168l3.71-3.938a.75.75 0 111.08 1.04l-4.25 4.5a.75.75 0 01-1.08 0l-4.25-4.5a.75.75 0 01.02-1.06z\" clipRule=\"evenodd\" />\r\n          </svg>\r\n        </button>\r\n        {isExpanded && (\r\n          <nav className=\"toc-body\">\r\n            <ul>\r\n              {headings.map((heading) => (\r\n                <li key={heading.id} className=\"toc-list-item\">\r\n                  <a href={`#${heading.id}`} \r\n                     onClick={(e) => handleLinkClick(e, heading.id)}\r\n                     className={`toc-link ${activeId === heading.id ? 'active' : ''}`}\r\n                     style={{ paddingLeft: `${(heading.level - 2) * 0.75 + 0.5}rem` }}>\r\n                    {heading.text}\r\n                  </a>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </nav>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableOfContents;","import React, { useState, useEffect, useRef, useMemo } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getPostByUrlId, API_URL } from '../apiConfig';\r\nimport DOMPurify from 'dompurify';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport ResponsiveAuthImage from '../components/ResponsiveAuthImage';\r\nimport ShareButtons from '../components/ShareButtons';\r\nimport throttle from 'lodash/throttle';\r\nimport TableOfContents from '../components/TableOfContents';\r\n\r\nconst formatDate = (dateString) => {\r\n    if (!dateString) return 'N/A';\r\n    return new Date(dateString).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' });\r\n};\r\n\r\nconst createSnippet = (html, length = 155) => {\r\n    if (!html) return '';\r\n    const plainText = DOMPurify.sanitize(html, { ALLOWED_TAGS: [] });\r\n    if (plainText.length <= length) return plainText;\r\n    const trimmed = plainText.substring(0, length);\r\n    return trimmed.substring(0, Math.min(trimmed.length, trimmed.lastIndexOf(' '))) + '...';\r\n};\r\n\r\nconst SinglePostPage = () => {\r\n    const { urlArticleId } = useParams();\r\n    const [post, setPost] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [headings, setHeadings] = useState([]);\r\n    const [activeId, setActiveId] = useState('');\r\n    const [progress, setProgress] = useState(0);\r\n    const articleRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const fetchPost = async () => {\r\n            try {\r\n                const response = await getPostByUrlId(urlArticleId);\r\n                setPost(response.data);\r\n            } catch (err) {\r\n                setError('Failed to fetch post.');\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n        fetchPost();\r\n        window.scrollTo(0, 0);\r\n    }, [urlArticleId]);\r\n\r\n    useEffect(() => {\r\n        if (!post?.content) return;\r\n        const tempDiv = document.createElement('div');\r\n        tempDiv.innerHTML = DOMPurify.sanitize(post.content, { USE_PROFILES: { html: true }, ADD_ATTR: ['id'] });\r\n        \r\n        const headingElements = tempDiv.querySelectorAll('h2, h3, h4');\r\n        const extractedHeadings = Array.from(headingElements).map((el, index) => {\r\n            const id = `heading-${index}-${el.tagName}`;\r\n            el.id = id;\r\n            return { id, text: el.innerText, level: parseInt(el.tagName.substring(1), 10) };\r\n        });\r\n\r\n        setHeadings(extractedHeadings);\r\n        setPost(currentPost => ({ ...currentPost, contentWithIds: tempDiv.innerHTML }));\r\n    }, [post?.content]);\r\n    \r\n    const handleScroll = useMemo(() => throttle(() => {\r\n        const contentElement = articleRef.current;\r\n        if (!contentElement) return;\r\n\r\n        const articleTop = contentElement.getBoundingClientRect().top + window.scrollY;\r\n        const contentHeight = contentElement.scrollHeight;\r\n        const viewportHeight = window.innerHeight;\r\n\r\n        const scrollableDistance = contentHeight - viewportHeight;\r\n        const scrolledFromTop = window.scrollY - articleTop;\r\n        \r\n        if (scrolledFromTop > 0 && scrollableDistance > 0) {\r\n            const scrollPercent = (scrolledFromTop / scrollableDistance) * 100;\r\n            setProgress(Math.min(100, Math.max(0, scrollPercent)));\r\n        } else {\r\n            setProgress(0);\r\n        }\r\n\r\n        let currentActiveId = '';\r\n        for (let i = headings.length - 1; i >= 0; i--) {\r\n            const element = document.getElementById(headings[i].id);\r\n            if (element && element.getBoundingClientRect().top < 200) {\r\n                currentActiveId = headings[i].id;\r\n                break;\r\n            }\r\n        }\r\n        setActiveId(currentActiveId);\r\n    }, 150), [headings]);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('scroll', handleScroll);\r\n        return () => {\r\n            handleScroll.cancel();\r\n            window.removeEventListener('scroll', handleScroll);\r\n        };\r\n    }, [handleScroll]);\r\n\r\n    if (loading) return <div className=\"text-center py-20\">Loading post...</div>;\r\n    if (error) return <div className=\"text-center py-20 text-red-500\">{error}</div>;\r\n    if (!post) return <div className=\"text-center py-20\">Post not found.</div>;\r\n\r\n    const createMarkup = (htmlContent) => ({ __html: htmlContent });\r\n\r\n    // UPDATED URL\r\n    const pageUrl = `https://treishfin.treishvaamgroup.com/category/${post.category?.slug}/${post.userFriendlySlug}/${post.urlArticleId}`;\r\n    const pageTitle = `Treishvaam Finance · ${post.title}`;\r\n    const seoDescription = post.metaDescription || post.customSnippet || createSnippet(post.content, 155);\r\n    const imageUrl = post.coverImageUrl ? `${API_URL}/api/uploads/${post.coverImageUrl}.webp` : `${window.location.origin}/logo512.png`;\r\n    const homeUrl = window.location.origin;\r\n\r\n    const schema = {\r\n        \"@context\": \"https://schema.org\",\r\n        \"@type\": \"Article\",\r\n        \"headline\": post.title,\r\n        \"image\": imageUrl,\r\n        \"author\": {\r\n            \"@type\": \"Organization\",\r\n            \"name\": \"Treishvaam Finance\",\r\n            \"url\": homeUrl\r\n        },\r\n        \"publisher\": {\r\n            \"@type\": \"Organization\",\r\n            \"name\": \"Treishvaam Finance\",\r\n            \"logo\": {\r\n                \"@type\": \"ImageObject\",\r\n                \"url\": `${homeUrl}/logo512.png`\r\n            }\r\n        },\r\n        \"datePublished\": post.createdAt,\r\n        \"dateModified\": post.updatedAt,\r\n        \"mainEntityOfPage\": {\r\n            \"@type\": \"WebPage\",\r\n            \"@id\": pageUrl\r\n        },\r\n        \"description\": seoDescription,\r\n        \"keywords\": post.keywords || post.tags?.join(', ')\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>{pageTitle}</title>\r\n                <meta name=\"description\" content={seoDescription} />\r\n                {post.keywords && <meta name=\"keywords\" content={post.keywords} />}\r\n                <link rel=\"canonical\" href={pageUrl} />\r\n                <meta property=\"og:type\" content=\"article\" />\r\n                <meta property=\"og:url\" content={pageUrl} />\r\n                <meta property=\"og:title\" content={post.title} />\r\n                <meta property=\"og:description\" content={seoDescription} />\r\n                <meta property=\"og:image\" content={imageUrl} />\r\n                <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n                <meta name=\"twitter:url\" content={pageUrl} />\r\n                <meta name=\"twitter:title\" content={post.title} />\r\n                <meta name=\"twitter:description\" content={seoDescription} />\r\n                <meta name=\"twitter:image\" content={imageUrl} />\r\n                <script type=\"application/ld+json\">\r\n                    {JSON.stringify(schema)}\r\n                </script>\r\n            </Helmet>\r\n\r\n            <div className=\"max-w-screen-xl mx-auto lg:grid lg:grid-cols-12 lg:gap-x-12 px-4 sm:px-6 lg:px-8\">\r\n                <div className=\"lg:col-span-8 xl:col-span-9 py-8\">\r\n                    <header className=\"mb-8\">\r\n                        <h1 className=\"text-3xl md:text-5xl font-extrabold text-gray-900 leading-tight\">\r\n                            {post.title}\r\n                        </h1>\r\n                        <div className=\"flex items-center text-sm text-gray-500 mt-4 mb-6\">\r\n                            <span>By {post.author || 'Treishvaam Team'}</span>\r\n                            <span className=\"mx-2\">·</span>\r\n                            <time dateTime={post.createdAt}>{formatDate(post.createdAt)}</time>\r\n                        </div>\r\n                        \r\n                        {post.coverImageUrl && (\r\n                            <div className=\"mb-8 rounded-lg overflow-hidden shadow-lg\">\r\n                                <ResponsiveAuthImage baseName={post.coverImageUrl} alt={post.coverImageAltText || post.title} className=\"w-full h-auto object-cover\"/>\r\n                            </div>\r\n                        )}\r\n                    </header>\r\n                    \r\n                    <main ref={articleRef}>\r\n                        <article className=\"prose prose-lg max-w-none\" dangerouslySetInnerHTML={createMarkup(post.contentWithIds || post.content)} />\r\n                        \r\n                        <div className=\"mt-16 pt-8 border-t\">\r\n                            <ShareButtons url={pageUrl} title={post.title} />\r\n                        </div>\r\n                    </main>\r\n                </div>\r\n\r\n                <aside className=\"lg:col-span-4 xl:col-span-3 py-8 hidden lg:block\">\r\n                    <div className=\"sticky top-24\">\r\n                         <TableOfContents \r\n                            headings={headings} \r\n                            activeId={activeId} \r\n                            progress={progress} \r\n                         />\r\n                    </div>\r\n                </aside>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SinglePostPage;"],"names":["_ref","baseName","alt","className","sizes","onLoad","_jsx","concat","match","console","warn","cleanedBaseName","src","API_URL","placeholderSrc","srcSet","join","LazyLoadImage","effect","afterLoad","url","title","summary","_jsxs","children","TwitterShareButton","TwitterIcon","size","round","FacebookShareButton","quote","FacebookIcon","LinkedinShareButton","LinkedinIcon","WhatsappShareButton","separator","WhatsappIcon","TelegramShareButton","TelegramIcon","onClick","handleCopy","navigator","clipboard","writeText","alert","FaCopy","headings","activeId","progress","isExpanded","setIsExpanded","useState","length","style","height","xmlns","viewBox","fill","fillRule","d","clipRule","map","heading","href","id","e","handleLinkClick","preventDefault","element","document","getElementById","yOffset","y","getBoundingClientRect","top","window","pageYOffset","scrollTo","behavior","paddingLeft","level","text","SinglePostPage","_post$category","_post$tags","urlArticleId","useParams","post","setPost","loading","setLoading","error","setError","setHeadings","setActiveId","setProgress","articleRef","useRef","useEffect","async","response","getPostByUrlId","data","err","fetchPost","content","tempDiv","createElement","innerHTML","DOMPurify","sanitize","USE_PROFILES","html","ADD_ATTR","headingElements","querySelectorAll","extractedHeadings","Array","from","el","index","tagName","innerText","parseInt","substring","currentPost","_objectSpread","contentWithIds","handleScroll","useMemo","throttle","contentElement","current","articleTop","scrollY","scrollableDistance","scrollHeight","innerHeight","scrolledFromTop","scrollPercent","Math","min","max","currentActiveId","i","addEventListener","cancel","removeEventListener","pageUrl","category","slug","userFriendlySlug","pageTitle","seoDescription","metaDescription","customSnippet","arguments","undefined","plainText","ALLOWED_TAGS","trimmed","lastIndexOf","createSnippet","imageUrl","coverImageUrl","location","origin","homeUrl","schema","createdAt","updatedAt","keywords","tags","_Fragment","Helmet","name","rel","property","type","JSON","stringify","author","dateTime","dateString","Date","toLocaleDateString","year","month","day","ResponsiveAuthImage","coverImageAltText","ref","dangerouslySetInnerHTML","htmlContent","__html","ShareButtons","TableOfContents"],"sourceRoot":""}