{"version":3,"file":"static/js/212.26179c2f.chunk.js","mappings":"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","sources":["../node_modules/suneditor/src/lang|C:/Users/7303150607/OneDrive/Desktop/PrOJEct/treishvaam-finance-frontend/node_modules/suneditor/src/lang|sync|/^/.*/.js$","pages/BlogEditorPage.js"],"sourcesContent":["var map = {\n\t\"./ckb.js\": 3743,\n\t\"./cs.js\": 7333,\n\t\"./da.js\": 1664,\n\t\"./de.js\": 844,\n\t\"./en.js\": 5460,\n\t\"./es.js\": 6151,\n\t\"./fa.js\": 6062,\n\t\"./fr.js\": 7755,\n\t\"./he.js\": 3296,\n\t\"./hu.js\": 3776,\n\t\"./index.js\": 559,\n\t\"./it.js\": 4762,\n\t\"./ja.js\": 74,\n\t\"./km.js\": 7671,\n\t\"./ko.js\": 665,\n\t\"./lv.js\": 749,\n\t\"./nl.js\": 6449,\n\t\"./pl.js\": 8599,\n\t\"./pt_br.js\": 8366,\n\t\"./ro.js\": 3100,\n\t\"./ru.js\": 4638,\n\t\"./se.js\": 5111,\n\t\"./tr.js\": 57,\n\t\"./ua.js\": 9657,\n\t\"./ur.js\": 4640,\n\t\"./zh_cn.js\": 5277\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 2224;","import React, { useState, useRef, useEffect, Suspense, useCallback } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport imageCompression from 'browser-image-compression';\r\nimport { DndProvider, useDrag, useDrop } from 'react-dnd';\r\nimport { HTML5Backend } from 'react-dnd-html5-backend';\r\nimport 'suneditor/dist/css/suneditor.min.css';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport ReactCrop from 'react-image-crop';\r\nimport { getPost, createPost, updatePost, uploadFile, getCategories, addCategory, API_URL, createDraft, updateDraft } from '../apiConfig';\r\nimport { buttonList } from 'suneditor-react';\r\n\r\nconst SunEditor = React.lazy(() => import('suneditor-react'));\r\n\r\n// HELPER COMPONENTS (Unchanged)\r\nconst TagsInput = ({ tags, setTags }) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n    const addTag = () => {\r\n        const newTag = inputValue.trim().replace(/,/g, '');\r\n        if (newTag && !tags.includes(newTag)) setTags([...tags, newTag]);\r\n        setInputValue('');\r\n    };\r\n    const handleKeyDown = (e) => {\r\n        if (e.key === 'Enter' || e.key === ',') {\r\n            e.preventDefault();\r\n            addTag();\r\n        }\r\n    };\r\n    const removeTag = (tagToRemove) => setTags(tags.filter(tag => tag !== tagToRemove));\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"flex flex-wrap gap-2 mb-2\">\r\n                {tags.map(tag => (\r\n                    <div key={tag} className=\"bg-sky-100 text-sky-800 text-sm font-semibold px-2 py-1 rounded-full flex items-center\">\r\n                        <span>{tag}</span>\r\n                        <button type=\"button\" onClick={() => removeTag(tag)} className=\"ml-2 text-sky-600 hover:text-sky-900\">&times;</button>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <div className=\"flex items-center gap-2\">\r\n                <input type=\"text\" value={inputValue} onChange={(e) => setInputValue(e.target.value)} onKeyDown={handleKeyDown} placeholder=\"Add a tag\" className=\"w-full p-2 border border-gray-300 rounded focus:ring-2 focus:ring-sky-200\" />\r\n                <button type=\"button\" onClick={addTag} className=\"px-4 py-2 bg-sky-600 text-white rounded hover:bg-sky-700\">Add</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nconst canvasToBlob = (canvas) => new Promise(resolve => canvas.toBlob(blob => resolve(blob), 'image/webp', 0.9));\r\nfunction canvasPreview(image, canvas, crop) {\r\n    const ctx = canvas.getContext('2d');\r\n    if (!ctx || !crop.width || !crop.height) return;\r\n    const scaleX = image.naturalWidth / image.width;\r\n    const scaleY = image.naturalHeight / image.height;\r\n    const pixelRatio = window.devicePixelRatio || 1;\r\n    canvas.width = Math.floor(crop.width * scaleX * pixelRatio);\r\n    canvas.height = Math.floor(crop.height * scaleY * pixelRatio);\r\n    ctx.scale(pixelRatio, pixelRatio);\r\n    ctx.imageSmoothingQuality = 'high';\r\n    const cropX = crop.x * scaleX;\r\n    const cropY = crop.y * scaleY;\r\n    ctx.drawImage(image, cropX, cropY, crop.width * scaleX, crop.height * scaleY, 0, 0, crop.width * scaleX, crop.height * scaleY);\r\n}\r\nconst CropModal = ({ src, type, onClose, onSave, aspect }) => {\r\n    const imgRef = useRef(null);\r\n    const canvasRef = useRef(null);\r\n    const [crop, setCrop] = useState();\r\n    const [completedCrop, setCompletedCrop] = useState();\r\n    useEffect(() => {\r\n        if (completedCrop?.width && imgRef.current && canvasRef.current) {\r\n            canvasPreview(imgRef.current, canvasRef.current, completedCrop);\r\n        }\r\n    }, [completedCrop]);\r\n    const handleSave = () => {\r\n        if (!completedCrop || !canvasRef.current) return;\r\n        onSave(canvasRef.current, completedCrop);\r\n    };\r\n    return (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\">\r\n            <div className=\"bg-white p-6 rounded-lg shadow-xl max-w-2xl w-full\">\r\n                <h3 className=\"text-xl font-bold mb-4\">Crop Image</h3>\r\n                <div style={{ maxHeight: '60vh', overflowY: 'auto' }}>\r\n                    <ReactCrop crop={crop} onChange={c => setCrop(c)} onComplete={c => setCompletedCrop(c)} aspect={aspect}>\r\n                        <img ref={imgRef} alt=\"Crop\" src={src} />\r\n                    </ReactCrop>\r\n                </div>\r\n                <canvas ref={canvasRef} className=\"hidden\" />\r\n                <div className=\"flex justify-end gap-4 mt-4\">\r\n                    <button onClick={onClose} className=\"px-4 py-2 rounded bg-gray-200 hover:bg-gray-300\">Cancel</button>\r\n                    <button onClick={handleSave} className=\"px-4 py-2 rounded bg-sky-600 text-white hover:bg-sky-700\">Save</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nconst LockChoiceModal = ({ isOpen, onChoice }) => {\r\n    if (!isOpen) return null;\r\n    return (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\">\r\n            <div className=\"bg-white p-6 rounded-lg shadow-xl max-w-sm w-full text-center\">\r\n                <h3 className=\"text-xl font-bold mb-4\">Square Image Detected</h3>\r\n                <p className=\"text-gray-600 mb-6\">For subsequent images in this story, how should they be cropped?</p>\r\n                <div className=\"flex justify-center gap-4 mt-4\">\r\n                    <button onClick={() => onChoice('landscape')} className=\"px-4 py-2 rounded bg-sky-600 text-white hover:bg-sky-700\">Lock Height (Landscape Style)</button>\r\n                    <button onClick={() => onChoice('portrait')} className=\"px-4 py-2 rounded bg-sky-600 text-white hover:bg-sky-700\">Lock Width (Portrait Style)</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst AddFromPostModal = ({ images, isOpen, onClose, onSelect }) => {\r\n    const [selectedImages, setSelectedImages] = useState([]);\r\n    if (!isOpen) return null;\r\n    const toggleSelection = (url) => setSelectedImages(prev => prev.includes(url) ? prev.filter(u => u !== url) : [...prev, url]);\r\n    return (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\">\r\n            <div className=\"bg-white p-6 rounded-lg shadow-xl max-w-4xl w-full\">\r\n                <h3 className=\"text-xl font-bold mb-4\">Select Images from Post</h3>\r\n                <div className=\"grid grid-cols-3 sm:grid-cols-4 md:grid-cols-6 gap-4 max-h-96 overflow-y-auto p-2\">\r\n                    {images.map((url, index) => (\r\n                        <div key={index} onClick={() => toggleSelection(url)} className={`relative rounded-lg overflow-hidden cursor-pointer border-4 ${selectedImages.includes(url) ? 'border-sky-500' : 'border-transparent'}`}>\r\n                            <img src={url} alt={`Post content ${index + 1}`} className=\"w-full h-full object-cover\" />\r\n                            {selectedImages.includes(url) && (<div className=\"absolute inset-0 bg-sky-500 bg-opacity-50 flex items-center justify-center text-white text-2xl\">✓</div>)}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <div className=\"flex justify-end gap-4 mt-4\">\r\n                    <button onClick={onClose} className=\"px-4 py-2 rounded bg-gray-200 hover:bg-gray-300\">Cancel</button>\r\n                    <button onClick={() => {onSelect(selectedImages); setSelectedImages([]);}} className=\"px-4 py-2 rounded bg-sky-600 text-white hover:bg-sky-700\">Add Selected</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nconst DraggableThumbnail = ({ id, thumbnail, index, moveThumbnail, onRemove, onAltTextChange }) => {\r\n    const ref = useRef(null);\r\n    const [, drop] = useDrop({\r\n        accept: 'thumbnail',\r\n        hover(item) {\r\n            if (!ref.current || item.index === index) return;\r\n            moveThumbnail(item.index, index);\r\n            item.index = index;\r\n        },\r\n    });\r\n    const [{ isDragging }, drag] = useDrag({\r\n        type: 'thumbnail',\r\n        item: { type: 'thumbnail', id, index },\r\n        collect: (monitor) => ({ isDragging: monitor.isDragging() }),\r\n    });\r\n    drag(drop(ref));\r\n    return (\r\n        <div ref={ref} style={{ opacity: isDragging ? 0.5 : 1 }} className=\"p-2 border rounded-lg bg-white flex items-start gap-3\">\r\n             <img src={thumbnail.preview} alt=\"preview\" className=\"w-24 h-24 object-cover rounded-md flex-shrink-0\" />\r\n             <div className=\"flex-grow\">\r\n                 <input type=\"text\" value={thumbnail.altText || ''} onChange={(e) => onAltTextChange(index, e.target.value)} placeholder=\"Alt text\" className=\"w-full p-2 text-sm border border-gray-300 rounded mb-2\" />\r\n                 <button type=\"button\" onClick={() => onRemove(index)} className=\"text-xs text-red-600 hover:underline\">Remove</button>\r\n             </div>\r\n        </div>\r\n    );\r\n};\r\nconst StoryThumbnailManager = ({ thumbnails, setThumbnails, onUploadClick, onAddFromPostClick }) => {\r\n    const moveThumbnail = useCallback((dragIndex, hoverIndex) => {\r\n        setThumbnails(prev => {\r\n            const newThumbnails = [...prev];\r\n            const [draggedItem] = newThumbnails.splice(dragIndex, 1);\r\n            newThumbnails.splice(hoverIndex, 0, draggedItem);\r\n            return newThumbnails;\r\n        });\r\n    }, [setThumbnails]);\r\n    const removeThumbnail = (index) => setThumbnails(prev => prev.filter((_, i) => i !== index));\r\n    const handleAltTextChange = (index, text) => {\r\n        setThumbnails(prev => {\r\n            const newThumbnails = [...prev];\r\n            newThumbnails[index].altText = text;\r\n            return newThumbnails;\r\n        });\r\n    };\r\n    return (\r\n        <DndProvider backend={HTML5Backend}>\r\n            <div className=\"p-4 border rounded-lg space-y-4 bg-gray-50\">\r\n                <div className=\"space-y-3 max-h-64 overflow-y-auto pr-2\">\r\n                    {thumbnails.length > 0 ? thumbnails.map((thumb, index) => (\r\n                        <DraggableThumbnail key={thumb.id || index} index={index} id={thumb.id || index} thumbnail={thumb} moveThumbnail={moveThumbnail} onRemove={removeThumbnail} onAltTextChange={handleAltTextChange} />\r\n                    )) : (<p className=\"text-center text-gray-500 text-sm py-4\">No story thumbnails yet.</p>)}\r\n                </div>\r\n                <div className=\"flex flex-col sm:flex-row gap-2\">\r\n                    <button type=\"button\" onClick={onUploadClick} className=\"flex-1 flex items-center justify-center gap-2 text-sm p-2 rounded-lg font-semibold bg-sky-50 text-sky-700 hover:bg-sky-100\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-8l-4-4m0 0L8 8m4-4v12\" /></svg>\r\n                        Upload New\r\n                    </button>\r\n                    <button type=\"button\" onClick={onAddFromPostClick} className=\"flex-1 flex items-center justify-center gap-2 text-sm p-2 rounded-lg font-semibold bg-gray-100 text-gray-700 hover:bg-gray-200\">\r\n                         <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zM14 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zM14 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z\" /></svg>\r\n                        Add from Post\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </DndProvider>\r\n    );\r\n};\r\nconst generateLayoutGroupId = () => `group_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n\r\n// MAIN COMPONENT\r\nconst BlogEditorPage = () => {\r\n    const { id } = useParams();\r\n    const navigate = useNavigate();\r\n    \r\n    // STATE\r\n    const [postId, setPostId] = useState(null);\r\n    const [saveStatus, setSaveStatus] = useState('Idle');\r\n    const [title, setTitle] = useState('');\r\n    const [content, setContent] = useState('');\r\n    const [selectedCategory, setSelectedCategory] = useState(null);\r\n    const [isFeatured, setIsFeatured] = useState(false);\r\n    const [tags, setTags] = useState([]);\r\n    const [error, setError] = useState('');\r\n    const [allCategories, setAllCategories] = useState([]);\r\n    const [showNewCategoryInput, setShowNewCategoryInput] = useState(false);\r\n    const [newCategoryName, setNewCategoryName] = useState('');\r\n    const [modalState, setModalState] = useState({ isOpen: false, type: null, src: '', aspect: undefined });\r\n    const [scheduledTime, setScheduledTime] = useState('');\r\n    const [customSnippet, setCustomSnippet] = useState('');\r\n    const [metaDescription, setMetaDescription] = useState('');\r\n    const [keywords, setKeywords] = useState('');\r\n    const [coverImageAltText, setCoverImageAltText] = useState('');\r\n    const [thumbnailMode, setThumbnailMode] = useState('single');\r\n    const [storyThumbnails, setStoryThumbnails] = useState([]);\r\n    const [thumbnailOrientation, setThumbnailOrientation] = useState(null);\r\n    const [lockedAspectRatio, setLockedAspectRatio] = useState(null);\r\n    const [isAddFromPostModalOpen, setAddFromPostModalOpen] = useState(false);\r\n    const [postImagesForSelection, setPostImagesForSelection] = useState([]);\r\n    const [thumbPreview, setThumbPreview] = useState('');\r\n    const [finalThumbFile, setFinalThumbFile] = useState(null);\r\n    const [coverPreview, setCoverPreview] = useState('');\r\n    const [finalCoverFile, setFinalCoverFile] = useState(null);\r\n    const [sunEditorUploadHandler, setSunEditorUploadHandler] = useState(null);\r\n    const [thumbnailAltText, setThumbnailAltText] = useState('');\r\n    const [isLockChoiceModalOpen, setLockChoiceModalOpen] = useState(false);\r\n    const [pendingCrop, setPendingCrop] = useState(null);\r\n    const [layoutStyle, setLayoutStyle] = useState('DEFAULT');\r\n    const [layoutGroupId, setLayoutGroupId] = useState(null);\r\n    const [postUserFriendlySlug, setPostUserFriendlySlug] = useState('');\r\n\r\n    // REFS\r\n    const editorRef = useRef(null);\r\n    const fileInputRef = useRef(null);\r\n    const isContentLoaded = useRef(false);\r\n    const autoSaveTimer = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const fetchInitialData = async () => {\r\n            try {\r\n                const categoriesRes = await getCategories();\r\n                if (Array.isArray(categoriesRes.data)) setAllCategories(categoriesRes.data);\r\n                \r\n                if (id) {\r\n                    const postRes = await getPost(id);\r\n                    const post = postRes.data;\r\n                    setPostId(post.id);\r\n                    setTitle(post.title);\r\n                    setContent(post.content);\r\n                    \r\n                    if (post.category && categoriesRes.data) {\r\n                        const currentCategory = categoriesRes.data.find(c => c.name === post.category.name);\r\n                        setSelectedCategory(currentCategory || null);\r\n                    }\r\n                    \r\n                    setTags(post.tags || []);\r\n                    setIsFeatured(post.featured);\r\n                    setCustomSnippet(post.customSnippet || '');\r\n                    setMetaDescription(post.metaDescription || '');\r\n                    setKeywords(post.keywords || '');\r\n                    setCoverImageAltText(post.coverImageAltText || '');\r\n                    setPostUserFriendlySlug(post.userFriendlySlug || '');\r\n                    \r\n                    setLayoutStyle(post.layoutStyle || 'DEFAULT');\r\n                    setLayoutGroupId(post.layoutGroupId || null);\r\n\r\n                    if (post.thumbnails && post.thumbnails.length > 0) {\r\n                        setThumbnailMode('story');\r\n                        const orientation = post.thumbnailOrientation || 'landscape';\r\n                        setThumbnailOrientation(orientation);\r\n                        setLockedAspectRatio(orientation === 'landscape' ? 16/9 : 4/5);\r\n                        const loadedThumbnails = post.thumbnails.map(thumb => ({\r\n                            id: thumb.id,\r\n                            preview: `${API_URL}/api/uploads/${thumb.imageUrl}-small.webp`,\r\n                            altText: thumb.altText || '',\r\n                            source: 'existing',\r\n                            url: thumb.imageUrl,\r\n                            file: null\r\n                        })).sort((a, b) => a.displayOrder - b.displayOrder);\r\n                        setStoryThumbnails(loadedThumbnails);\r\n                    }\r\n                    if(post.coverImageUrl) setCoverPreview(`${API_URL}/api/uploads/${post.coverImageUrl}.webp`);\r\n                    if (post.scheduledTime) setScheduledTime(new Date(post.scheduledTime).toISOString().slice(0, 16));\r\n                } else {\r\n                    if (categoriesRes.data?.length > 0) {\r\n                        setSelectedCategory(categoriesRes.data[0]);\r\n                    }\r\n                }\r\n            } catch (err) {\r\n                setError('Failed to load initial data.');\r\n                console.error(err);\r\n            }\r\n        };\r\n        fetchInitialData();\r\n    }, [id]);\r\n\r\n    const handleAutoSave = useCallback(async () => {\r\n        if (!title.trim() && !content.trim()) return;\r\n        setSaveStatus('Saving...');\r\n        try {\r\n            const editorContent = editorRef.current ? editorRef.current.getContents(true) : content;\r\n            const draftData = { title, content: editorContent, customSnippet, metaDescription, keywords };\r\n            if (postId) {\r\n                await updateDraft(postId, draftData);\r\n            } else {\r\n                const response = await createDraft(draftData);\r\n                setPostId(response.data.id);\r\n                navigate(`/dashboard/blog/edit/${response.data.userFriendlySlug}/${response.data.id}`, { replace: true });\r\n            }\r\n            setSaveStatus('Saved');\r\n        } catch (err) {\r\n            setSaveStatus('Error');\r\n            console.error(\"Auto-save failed:\", err);\r\n        }\r\n    }, [title, content, customSnippet, metaDescription, keywords, postId, navigate]);\r\n\r\n    useEffect(() => {\r\n        if (autoSaveTimer.current) clearTimeout(autoSaveTimer.current);\r\n        autoSaveTimer.current = setTimeout(() => handleAutoSave(), 2000);\r\n        return () => clearTimeout(autoSaveTimer.current);\r\n    }, [title, content, customSnippet, metaDescription, keywords, handleAutoSave]);\r\n\r\n    const compressImage = async (file) => {\r\n        if (!file) return null;\r\n        const options = { maxSizeMB: 1, maxWidthOrHeight: 1920, useWebWorker: true, fileType: 'image/webp' };\r\n        try { return await imageCompression(file, options); } catch (e) { return file; }\r\n    };\r\n    \r\n    const onSelectFile = (e, type, aspect) => {\r\n        if (e.target.files && e.target.files.length > 0) {\r\n            const reader = new FileReader();\r\n            reader.addEventListener('load', () => setModalState({ isOpen: true, type, src: reader.result?.toString() || '', aspect }));\r\n            reader.readAsDataURL(e.target.files[0]);\r\n        }\r\n        e.target.value = null;\r\n    };\r\n    \r\n    const handleImageUploadBefore = (files, info, uploadHandler) => {\r\n        const file = files[0];\r\n        if (!file) return;\r\n        setSunEditorUploadHandler(() => uploadHandler);\r\n        const reader = new FileReader();\r\n        reader.addEventListener('load', () => setModalState({ isOpen: true, type: 'suneditor', src: reader.result?.toString() || '' }));\r\n        reader.readAsDataURL(file);\r\n        return false;\r\n    };\r\n    \r\n    const handleLockChoice = (choice) => {\r\n        const orientation = choice;\r\n        const aspect = orientation === 'landscape' ? 16/9 : 4/5;\r\n        setThumbnailOrientation(orientation);\r\n        setLockedAspectRatio(aspect);\r\n        if(pendingCrop) {\r\n            addCroppedImageToStory(pendingCrop.canvas);\r\n        }\r\n        setLockChoiceModalOpen(false);\r\n        setPendingCrop(null);\r\n    }\r\n\r\n    const addCroppedImageToStory = async (canvas) => {\r\n        const croppedBlob = await canvasToBlob(canvas);\r\n        const finalFile = await compressImage(croppedBlob);\r\n        const previewUrl = URL.createObjectURL(finalFile);\r\n        const newThumbnail = {\r\n            id: `new-${Date.now()}`,\r\n            preview: previewUrl,\r\n            altText: '',\r\n            source: 'new',\r\n            file: new File([finalFile], `thumbnail-${Date.now()}.webp`, { type: 'image/webp' }),\r\n        };\r\n        setStoryThumbnails(prev => [...prev, newThumbnail]);\r\n    }\r\n\r\n    const handleCropSave = async (canvas, cropDetails) => {\r\n        setModalState({ isOpen: false, type: null, src: '', aspect: undefined });\r\n        if (modalState.type === 'story-thumbnail') {\r\n            if (!thumbnailOrientation) {\r\n                const { width, height } = cropDetails;\r\n                const aspect = width / height;\r\n                const isSquare = aspect > 0.95 && aspect < 1.05;\r\n                if (isSquare) {\r\n                    setPendingCrop({canvas});\r\n                    setLockChoiceModalOpen(true);\r\n                    return;\r\n                } else {\r\n                    const orientation = width > height ? 'landscape' : 'portrait';\r\n                    setThumbnailOrientation(orientation);\r\n                    setLockedAspectRatio(aspect);\r\n                    addCroppedImageToStory(canvas);\r\n                }\r\n            } else {\r\n                addCroppedImageToStory(canvas);\r\n            }\r\n        } else {\r\n            const croppedBlob = await canvasToBlob(canvas);\r\n            const finalFile = await compressImage(croppedBlob);\r\n            const previewUrl = URL.createObjectURL(finalFile);\r\n            if (modalState.type === 'single-thumbnail') {\r\n                setFinalThumbFile(finalFile);\r\n                setThumbPreview(previewUrl);\r\n            } else if (modalState.type === 'cover') {\r\n                setFinalCoverFile(finalFile);\r\n                setCoverPreview(previewUrl);\r\n            } else if (modalState.type === 'suneditor' && sunEditorUploadHandler) {\r\n                const formData = new FormData();\r\n                formData.append('file', finalFile, 'image.webp');\r\n                uploadFile(formData).then(res => sunEditorUploadHandler(res.data)).catch(err => {\r\n                    alert(\"Image upload failed in editor.\");\r\n                    sunEditorUploadHandler();\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleAddNewCategory = async () => {\r\n        if (!newCategoryName) return;\r\n        const isDuplicate = allCategories.some(c => c.name.toLowerCase() === newCategoryName.toLowerCase());\r\n        if (isDuplicate) return alert('Category name cannot be a duplicate.');\r\n        try {\r\n            const response = await addCategory({ name: newCategoryName });\r\n            setAllCategories([...allCategories, response.data]);\r\n            setSelectedCategory(response.data);\r\n            setNewCategoryName('');\r\n            setShowNewCategoryInput(false);\r\n        } catch (err) {\r\n            setError('Failed to add new category.');\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    const handleAddFromPostClick = () => {\r\n        if (!editorRef.current) return;\r\n        const editorContent = editorRef.current.getContents(true);\r\n        const parser = new DOMParser();\r\n        const doc = parser.parseFromString(editorContent, 'text/html');\r\n        const images = Array.from(doc.querySelectorAll('img')).map(img => img.src);\r\n        setPostImagesForSelection(images);\r\n        setAddFromPostModalOpen(true);\r\n    };\r\n    \r\n    const handleSelectFromPost = (selectedUrls) => {\r\n        const newThumbnails = selectedUrls.map((url) => ({\r\n            id: `existing-${url}-${Date.now()}`,\r\n            preview: url,\r\n            altText: '',\r\n            source: 'existing',\r\n            file: null,\r\n            url: new URL(url).pathname.replace('/api/uploads/', ''),\r\n        }));\r\n        setStoryThumbnails([...storyThumbnails, ...newThumbnails]);\r\n        setAddFromPostModalOpen(false);\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setError('');\r\n        if (!editorRef.current) return setError(\"Editor is not yet available.\");\r\n        if (!selectedCategory) return setError(\"Please select a category.\");\r\n\r\n        const formData = new FormData();\r\n        formData.append('title', title);\r\n        formData.append('content', editorRef.current.getContents(true));\r\n        formData.append('category', selectedCategory.name);\r\n        formData.append('featured', isFeatured);\r\n        formData.append('customSnippet', customSnippet);\r\n        formData.append('metaDescription', metaDescription);\r\n        formData.append('keywords', keywords);\r\n        formData.append('coverImageAltText', coverImageAltText);\r\n        tags.forEach(tag => formData.append('tags', tag));\r\n        if (scheduledTime) formData.append('scheduledTime', new Date(scheduledTime).toISOString());\r\n        if (finalCoverFile) formData.append('coverImage', finalCoverFile);\r\n        \r\n        formData.append('layoutStyle', layoutStyle);\r\n        if (layoutStyle.startsWith('MULTI_COLUMN')) {\r\n            formData.append('layoutGroupId', layoutGroupId || generateLayoutGroupId());\r\n        } else {\r\n            formData.append('layoutGroupId', '');\r\n        }\r\n        formData.append('userFriendlySlug', postUserFriendlySlug);\r\n\r\n        if (thumbnailMode === 'story') {\r\n            formData.append('thumbnailOrientation', thumbnailOrientation);\r\n            const metadata = storyThumbnails.map((thumb, index) => ({\r\n                source: thumb.source,\r\n                fileName: thumb.source === 'new' ? thumb.file.name : null,\r\n                url: thumb.source === 'existing' ? thumb.url : null,\r\n                altText: thumb.altText,\r\n                displayOrder: index\r\n            }));\r\n            formData.append('thumbnailMetadata', JSON.stringify(metadata));\r\n            storyThumbnails.forEach(thumb => {\r\n                if (thumb.source === 'new') formData.append('newThumbnails', thumb.file);\r\n            });\r\n        } else { \r\n             if (finalThumbFile) {\r\n                const metadata = [{ source: 'new', fileName: 'thumbnail.webp', altText: thumbnailAltText, displayOrder: 0 }];\r\n                formData.append('thumbnailMetadata', JSON.stringify(metadata));\r\n                formData.append('newThumbnails', finalThumbFile, 'thumbnail.webp');\r\n            } else if (thumbPreview) {\r\n                 const url = new URL(thumbPreview).pathname.replace('/api/uploads/', '').replace('-small.webp', '');\r\n                 const metadata = [{ source: 'existing', url: url, altText: thumbnailAltText, displayOrder: 0 }];\r\n                 formData.append('thumbnailMetadata', JSON.stringify(metadata));\r\n            } else {\r\n                 formData.append('thumbnailMetadata', JSON.stringify([]));\r\n            }\r\n        }\r\n\r\n        try {\r\n            if (postId) {\r\n                await updatePost(postId, formData);\r\n            } else {\r\n                await createPost(formData);\r\n            }\r\n            navigate('/dashboard/manage-posts');\r\n        } catch (err) {\r\n            setError('Failed to save the post. Check console for details.');\r\n            console.error(err);\r\n        }\r\n    };\r\n    \r\n    const handleLayoutStyleChange = (e) => {\r\n        const newStyle = e.target.value;\r\n        setLayoutStyle(newStyle);\r\n        if (newStyle.startsWith('MULTI_COLUMN')) {\r\n            if (!layoutGroupId) {\r\n                setLayoutGroupId(generateLayoutGroupId());\r\n            }\r\n        } else {\r\n            setLayoutGroupId(null);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"flex flex-col h-screen bg-gray-50 overflow-hidden\">\r\n            <input type=\"file\" ref={fileInputRef} className=\"hidden\" accept=\"image/*\" />\r\n            <AddFromPostModal images={postImagesForSelection} isOpen={isAddFromPostModalOpen} onClose={() => setAddFromPostModalOpen(false)} onSelect={handleSelectFromPost} />\r\n            {modalState.isOpen && <CropModal src={modalState.src} type={modalState.type} onClose={() => setModalState({ isOpen: false, type: null, src: '', aspect: undefined })} onSave={handleCropSave} aspect={modalState.aspect} />}\r\n            <LockChoiceModal isOpen={isLockChoiceModalOpen} onChoice={handleLockChoice} />\r\n\r\n            <div className=\"flex flex-col md:flex-row flex-grow overflow-hidden\">\r\n                <div className=\"w-full md:w-1/3 p-6 bg-white border-r border-gray-200 flex flex-col overflow-y-auto\" style={{ maxHeight: '100vh' }}>\r\n                    \r\n                    <div className=\"flex justify-between items-center mb-6\">\r\n                        <h1 className=\"text-2xl font-bold text-gray-800\">{postId ? 'Edit Post' : 'Create New Post'}</h1>\r\n                        <div className=\"text-sm\">\r\n                            {saveStatus === 'Saving...' && <span className=\"text-gray-500\">Saving...</span>}\r\n                            {saveStatus === 'Saved' && <span className=\"text-green-600\">Saved</span>}\r\n                            {saveStatus === 'Error' && <span className=\"text-red-600\">Save Error!</span>}\r\n                        </div>\r\n                    </div>\r\n\r\n                    {error && <p className=\"text-red-500 bg-red-100 p-3 rounded mb-4\">{error}</p>}\r\n                    \r\n                    <form id=\"blog-editor-form\" onSubmit={handleSubmit} className=\"flex flex-col gap-6 flex-grow\">\r\n                        \r\n                        <div>\r\n                            <label htmlFor=\"title\" className=\"block text-gray-700 font-semibold mb-2\">Title</label>\r\n                            <input type=\"text\" id=\"title\" value={title} onChange={e => setTitle(e.target.value)} className=\"w-full p-2 border border-gray-300 rounded\" required />\r\n                        </div>\r\n\r\n                        <div>\r\n                           <label htmlFor=\"userFriendlySlug\" className=\"block text-gray-700 font-semibold mb-2\">\r\n                                URL Slug (SEO Friendly)\r\n                           </label>\r\n                           <input \r\n                               type=\"text\" \r\n                               id=\"userFriendlySlug\" \r\n                               value={postUserFriendlySlug} \r\n                               onChange={e => setPostUserFriendlySlug(e.target.value)} \r\n                               placeholder=\"e.g., guide-to-market-analysis\"\r\n                               className=\"w-full p-2 border border-gray-300 rounded\" \r\n                           />\r\n                       </div>\r\n\r\n                        <div>\r\n                            <label htmlFor=\"keywords\" className=\"block text-gray-700 font-semibold mb-2\">Keywords (Comma-separated)</label>\r\n                            <input type=\"text\" id=\"keywords\" value={keywords} onChange={e => setKeywords(e.target.value)} className=\"w-full p-2 border border-gray-300 rounded\" placeholder=\"e.g., investing, stocks, financial freedom\" />\r\n                        </div>\r\n\r\n                        <div>\r\n                            <label htmlFor=\"metaDescription\" className=\"block text-gray-700 font-semibold mb-2\">Meta Description (for SEO)</label>\r\n                            <textarea id=\"metaDescription\" value={metaDescription} onChange={e => setMetaDescription(e.target.value)} rows=\"3\" className=\"w-full p-2 border border-gray-300 rounded\" placeholder=\"A brief summary for search engines (about 155 characters).\" />\r\n                        </div>\r\n\r\n                        <div>\r\n                            <label htmlFor=\"customSnippet\" className=\"block text-gray-700 font-semibold mb-2\">Custom Snippet (for Previews)</label>\r\n                            <textarea id=\"customSnippet\" value={customSnippet} onChange={e => setCustomSnippet(e.target.value)} rows=\"3\" className=\"w-full p-2 border border-gray-300 rounded\" placeholder=\"A short preview for display on the blog page.\" />\r\n                        </div>\r\n                        \r\n                        <div>\r\n                            <label htmlFor=\"category\" className=\"block text-gray-700 font-semibold mb-2\">Category</label>\r\n                            <div className=\"flex items-center gap-2\">\r\n                                <select\r\n                                    id=\"category\"\r\n                                    value={selectedCategory ? selectedCategory.name : ''}\r\n                                    onChange={e => {\r\n                                        const cat = allCategories.find(c => c.name === e.target.value);\r\n                                        setSelectedCategory(cat);\r\n                                    }}\r\n                                    className=\"w-full p-2 border border-gray-300 rounded\"\r\n                                >\r\n                                    <option value=\"\">Select a category</option>\r\n                                    {allCategories && allCategories.map((cat) => (\r\n                                        <option key={cat.id} value={cat.name}>{cat.name}</option>\r\n                                    ))}\r\n                                </select>\r\n                                <button type=\"button\" onClick={() => setShowNewCategoryInput(!showNewCategoryInput)} className=\"p-2 bg-gray-200 rounded hover:bg-gray-300 text-lg font-bold\">+</button>\r\n                            </div>\r\n                            {showNewCategoryInput && (\r\n                                <div className=\"flex items-center gap-2 mt-2\">\r\n                                    <input type=\"text\" value={newCategoryName} onChange={(e) => setNewCategoryName(e.target.value)} placeholder=\"New category name\" className=\"w-full p-2 border border-gray-300 rounded\" />\r\n                                    <button type=\"button\" onClick={handleAddNewCategory} className=\"px-4 py-2 bg-sky-600 text-white rounded hover:bg-sky-700\">Add</button>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                        \r\n                        <div>\r\n                            <label htmlFor=\"layoutStyle\" className=\"block text-gray-700 font-semibold mb-2\">Layout Style</label>\r\n                            <select id=\"layoutStyle\" value={layoutStyle} onChange={handleLayoutStyleChange} className=\"w-full p-2 border border-gray-300 rounded\">\r\n                                <option value=\"DEFAULT\">Default (Masonry)</option>\r\n                                <option value=\"BANNER\">Banner</option>\r\n                                <option value=\"MULTI_COLUMN_2\">2 Column Row</option>\r\n                                <option value=\"MULTI_COLUMN_3\">3 Column Row</option>\r\n                                <option value=\"MULTI_COLUMN_4\">4 Column Row</option>\r\n                                <option value=\"MULTI_COLUMN_5\">5 Column Row</option>\r\n                                <option value=\"MULTI_COLUMN_6\">6 Column Row</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <label className=\"block text-gray-700 font-semibold mb-2\">Tags</label>\r\n                            <TagsInput tags={tags} setTags={setTags} />\r\n                        </div>\r\n                        \r\n                        <div className=\"my-4\">\r\n                            <label className=\"block text-gray-700 font-semibold mb-2\">Thumbnail Mode</label>\r\n                            <div className=\"flex rounded-lg p-1 bg-gray-200\">\r\n                                <button type=\"button\" onClick={() => setThumbnailMode('single')} className={`flex-1 p-2 rounded-md text-sm font-semibold transition ${thumbnailMode === 'single' ? 'bg-white text-sky-600 shadow' : 'text-gray-600'}`}>\r\n                                    Single Image\r\n                                </button>\r\n                                <button type=\"button\" onClick={() => setThumbnailMode('story')} className={`flex-1 p-2 rounded-md text-sm font-semibold transition ${thumbnailMode === 'story' ? 'bg-white text-sky-600 shadow' : 'text-gray-600'}`}>\r\n                                    Story Thumbnails\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {thumbnailMode === 'single' ? (\r\n                            <div className=\"p-4 border rounded-lg space-y-3 bg-gray-50\">\r\n                                <label className=\"block text-gray-700 font-semibold\">Thumbnail Image</label>\r\n                                {thumbPreview && <img src={thumbPreview} alt=\"Thumbnail Preview\" className=\"w-full h-auto aspect-video object-contain my-4 border rounded-lg bg-white\" />}\r\n                                <button type=\"button\" onClick={() => {\r\n                                    fileInputRef.current.multiple = false;\r\n                                    fileInputRef.current.onchange = (ev) => onSelectFile(ev, 'single-thumbnail');\r\n                                    fileInputRef.current.click();\r\n                                }} className=\"w-full text-sm p-2 rounded-lg font-semibold bg-sky-50 text-sky-700 hover:bg-sky-100\">Upload Thumbnail</button>\r\n                                <div>\r\n                                    <label htmlFor=\"thumbnailAltText\" className=\"text-sm font-medium text-gray-600\">Alt Text</label>\r\n                                    <input type=\"text\" id=\"thumbnailAltText\" value={thumbnailAltText} onChange={e => setThumbnailAltText(e.target.value)} placeholder=\"Describe the image for SEO\" className=\"w-full mt-1 p-2 text-sm border border-gray-300 rounded\" />\r\n                                </div>\r\n                            </div>\r\n                        ) : (\r\n                            <StoryThumbnailManager \r\n                                thumbnails={storyThumbnails} \r\n                                setThumbnails={setStoryThumbnails} \r\n                                onUploadClick={() => {\r\n                                    fileInputRef.current.multiple = false;\r\n                                    fileInputRef.current.onchange = (ev) => onSelectFile(ev, 'story-thumbnail', lockedAspectRatio);\r\n                                    fileInputRef.current.click();\r\n                                }}\r\n                                onAddFromPostClick={handleAddFromPostClick}\r\n                            />\r\n                        )}\r\n                        \r\n                        <div className=\"p-4 border rounded-lg space-y-3 bg-gray-50\">\r\n                            <label className=\"block text-gray-700 font-semibold\">Cover Image</label>\r\n                            {coverPreview && <img src={coverPreview} alt=\"Cover Preview\" className=\"w-full h-auto aspect-video object-contain my-4 border rounded-lg bg-white\" />}\r\n                            <button type=\"button\" onClick={() => {\r\n                                fileInputRef.current.multiple = false;\r\n                                fileInputRef.current.onchange = (e) => onSelectFile(e, 'cover');\r\n                                fileInputRef.current.click();\r\n                            }} className=\"w-full text-sm p-2 rounded-lg font-semibold bg-sky-50 text-sky-700 hover:bg-sky-100\">Upload Cover Image</button>\r\n                             <div>\r\n                                <label htmlFor=\"coverImageAltText\" className=\"text-sm font-medium text-gray-600\">Cover Image Alt Text</label>\r\n                                <input type=\"text\" id=\"coverImageAltText\" value={coverImageAltText} onChange={e => setCoverImageAltText(e.target.value)} placeholder=\"Describe the cover image for SEO\" className=\"w-full mt-1 p-2 text-sm border border-gray-300 rounded\" />\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <div>\r\n                            <label htmlFor=\"scheduledTime\" className=\"block text-gray-700 font-semibold mb-2\">Schedule Publication</label>\r\n                            <input\r\n                                type=\"datetime-local\"\r\n                                id=\"scheduledTime\"\r\n                                value={scheduledTime}\r\n                                onChange={e => setScheduledTime(e.target.value)}\r\n                                className=\"w-full p-2 border border-gray-300 rounded\"\r\n                            />\r\n                            <p className=\"text-xs text-gray-500 mt-1\">Leave blank to publish immediately.</p>\r\n                        </div>\r\n\r\n                        <div className=\"flex items-center\">\r\n                            <input type=\"checkbox\" checked={isFeatured} onChange={e => setIsFeatured(e.target.checked)} className=\"h-5 w-5 text-sky-600 border-gray-300 rounded focus:ring-sky-500\" />\r\n                            <span className=\"ml-2 text-gray-700\">Mark as Featured</span>\r\n                        </div>\r\n\r\n                        <button type=\"submit\" className=\"w-full bg-sky-600 text-white font-bold py-3 rounded-lg hover:bg-sky-700 transition\">\r\n                           {postId ? 'Update Post' : 'Publish Post'}\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n                <div className=\"w-full md:w-2/3 p-6 flex flex-col h-full overflow-y-auto\">\r\n                    <label className=\"block text-gray-700 font-semibold mb-2\">Content</label>\r\n                    <div className=\"flex-grow h-full\">\r\n                        <Suspense fallback={<div>Loading editor...</div>}>\r\n                            <SunEditor\r\n                                setContents={content}\r\n                                onChange={setContent} \r\n                                getSunEditorInstance={(sunEditor) => { editorRef.current = sunEditor; }}\r\n                                onImageUploadBefore={handleImageUploadBefore}\r\n                                onLoad={() => {\r\n                                    if (editorRef.current && content && !isContentLoaded.current) {\r\n                                        isContentLoaded.current = true;\r\n                                    }\r\n                                }}\r\n                                setOptions={{\r\n                                    height: 'auto',\r\n                                    minHeight: '400px',\r\n                                    buttonList: buttonList.complex,\r\n                                    pasteKeepFormats: true,\r\n                                    pasteTagsWhitelist: '.*'\r\n                                }}\r\n                            />\r\n                        </Suspense>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BlogEditorPage;"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","SunEditor","React","TagsInput","_ref","tags","setTags","inputValue","setInputValue","useState","addTag","newTag","trim","replace","includes","_jsxs","children","_jsx","className","tag","type","onClick","removeTag","tagToRemove","filter","value","onChange","target","onKeyDown","key","preventDefault","placeholder","canvasToBlob","canvas","Promise","toBlob","blob","CropModal","_ref2","src","onClose","onSave","aspect","imgRef","useRef","canvasRef","crop","setCrop","completedCrop","setCompletedCrop","useEffect","width","current","image","ctx","getContext","height","scaleX","naturalWidth","scaleY","naturalHeight","pixelRatio","window","devicePixelRatio","Math","floor","scale","imageSmoothingQuality","cropX","x","cropY","y","drawImage","canvasPreview","style","maxHeight","overflowY","ReactCrop","c","onComplete","ref","alt","handleSave","LockChoiceModal","_ref3","isOpen","onChoice","AddFromPostModal","_ref4","images","onSelect","selectedImages","setSelectedImages","url","index","prev","u","toggleSelection","concat","DraggableThumbnail","_ref5","thumbnail","moveThumbnail","onRemove","onAltTextChange","drop","useDrop","accept","hover","item","isDragging","drag","useDrag","collect","monitor","opacity","preview","altText","StoryThumbnailManager","_ref6","thumbnails","setThumbnails","onUploadClick","onAddFromPostClick","useCallback","dragIndex","hoverIndex","newThumbnails","draggedItem","splice","removeThumbnail","_","i","handleAltTextChange","text","DndProvider","backend","HTML5Backend","length","thumb","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","generateLayoutGroupId","Date","now","random","toString","substr","BlogEditorPage","useParams","navigate","useNavigate","postId","setPostId","saveStatus","setSaveStatus","title","setTitle","content","setContent","selectedCategory","setSelectedCategory","isFeatured","setIsFeatured","error","setError","allCategories","setAllCategories","showNewCategoryInput","setShowNewCategoryInput","newCategoryName","setNewCategoryName","modalState","setModalState","undefined","scheduledTime","setScheduledTime","customSnippet","setCustomSnippet","metaDescription","setMetaDescription","keywords","setKeywords","coverImageAltText","setCoverImageAltText","thumbnailMode","setThumbnailMode","storyThumbnails","setStoryThumbnails","thumbnailOrientation","setThumbnailOrientation","lockedAspectRatio","setLockedAspectRatio","isAddFromPostModalOpen","setAddFromPostModalOpen","postImagesForSelection","setPostImagesForSelection","thumbPreview","setThumbPreview","finalThumbFile","setFinalThumbFile","coverPreview","setCoverPreview","finalCoverFile","setFinalCoverFile","sunEditorUploadHandler","setSunEditorUploadHandler","thumbnailAltText","setThumbnailAltText","isLockChoiceModalOpen","setLockChoiceModalOpen","pendingCrop","setPendingCrop","layoutStyle","setLayoutStyle","layoutGroupId","setLayoutGroupId","postUserFriendlySlug","setPostUserFriendlySlug","editorRef","fileInputRef","isContentLoaded","autoSaveTimer","async","categoriesRes","getCategories","Array","isArray","data","post","getPost","category","currentCategory","find","name","featured","userFriendlySlug","orientation","loadedThumbnails","API_URL","imageUrl","source","file","sort","a","b","displayOrder","coverImageUrl","toISOString","slice","_categoriesRes$data","err","console","fetchInitialData","handleAutoSave","editorContent","getContents","draftData","updateDraft","response","createDraft","clearTimeout","setTimeout","compressImage","options","maxSizeMB","maxWidthOrHeight","useWebWorker","fileType","imageCompression","onSelectFile","files","reader","FileReader","addEventListener","_reader$result","result","readAsDataURL","addCroppedImageToStory","croppedBlob","finalFile","previewUrl","URL","createObjectURL","newThumbnail","File","selectedUrls","pathname","cropDetails","formData","FormData","append","uploadFile","then","res","catch","alert","choice","onSubmit","forEach","startsWith","metadata","fileName","JSON","stringify","updatePost","createPost","htmlFor","required","rows","cat","some","toLowerCase","addCategory","newStyle","multiple","onchange","ev","click","handleAddFromPostClick","doc","DOMParser","parseFromString","from","querySelectorAll","img","checked","Suspense","fallback","setContents","getSunEditorInstance","sunEditor","onImageUploadBefore","handleImageUploadBefore","info","uploadHandler","_reader$result2","onLoad","setOptions","minHeight","buttonList","complex","pasteKeepFormats","pasteTagsWhitelist"],"sourceRoot":""}