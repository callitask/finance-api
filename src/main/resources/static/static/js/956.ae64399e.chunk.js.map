{"version":3,"file":"static/js/956.ae64399e.chunk.js","mappings":"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","sources":["components/ResponsiveAuthImage.js","components/DevelopmentNotice.js","components/market/MarketChart.js","components/market/TopMoversCard.js","components/BlogSidebar.js","components/NewsHighlights.js","components/DeeperDive.js","components/market/IndexCharts.js","components/market/MarketMovers.js","pages/BlogPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport 'react-lazy-load-image-component/src/effects/opacity.css'; // Using opacity for a smoother transition\r\nimport { API_URL } from '../apiConfig';\r\nimport { decode } from 'blurhash';\r\n\r\n// This component decodes the blurhash and draws it to a canvas.\r\nconst BlurHashCanvas = ({ hash, width, height, punch = 1 }) => {\r\n    const canvasRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (canvasRef.current && hash && width && height) {\r\n            try {\r\n                const pixels = decode(hash, width, height, punch);\r\n                const ctx = canvasRef.current.getContext(\"2d\");\r\n                if (ctx) {\r\n                    const imageData = ctx.createImageData(width, height);\r\n                    imageData.data.set(pixels);\r\n                    ctx.putImageData(imageData, 0, 0);\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Failed to decode blurhash\", error);\r\n            }\r\n        }\r\n    }, [hash, width, height, punch]);\r\n\r\n    if (!hash || !width || !height) return null;\r\n\r\n    return (\r\n        <canvas\r\n            ref={canvasRef}\r\n            width={width}\r\n            height={height}\r\n            className=\"absolute inset-0 w-full h-full\"\r\n        />\r\n    );\r\n};\r\n\r\nconst ResponsiveAuthImage = ({ baseName, alt, className, sizes, onLoad, eager = false, width, height, blurHash }) => {\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n    const handleImageLoad = () => {\r\n        setIsLoaded(true);\r\n        if (onLoad) {\r\n            onLoad();\r\n        }\r\n    };\r\n\r\n    if (!baseName || typeof baseName !== 'string') {\r\n        return <div className={`bg-gray-200 ${className}`} style={{ aspectRatio: width && height ? `${width}/${height}` : '1' }} />;\r\n    }\r\n\r\n    const uuidRegex = /([a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})/;\r\n    const match = baseName.match(uuidRegex);\r\n\r\n    if (!match) {\r\n        console.warn(`ResponsiveAuthImage: Could not extract a valid image ID from baseName: \"${baseName}\"`);\r\n        return <div className={`bg-gray-200 ${className}`} style={{ aspectRatio: width && height ? `${width}/${height}` : '1' }} />;\r\n    }\r\n\r\n    const cleanedBaseName = match[0];\r\n\r\n    const src = `${API_URL}/api/uploads/${cleanedBaseName}-small.webp`;\r\n    const srcSet = [\r\n        `${API_URL}/api/uploads/${cleanedBaseName}-small.webp 300w`,\r\n        `${API_URL}/api/uploads/${cleanedBaseName}-medium.webp 600w`,\r\n        `${API_URL}/api/uploads/${cleanedBaseName}.webp 1200w`\r\n    ].join(', ');\r\n\r\n    const imageProps = {\r\n        alt, // alt is still passed here for LazyLoadImage\r\n        src,\r\n        srcSet,\r\n        sizes,\r\n        className: `transition-opacity duration-300 ${isLoaded ? 'opacity-100' : 'opacity-0'} ${className}`,\r\n        width,\r\n        height,\r\n    };\r\n\r\n    if (eager) {\r\n        return (\r\n            <img\r\n                src={src}\r\n                srcSet={srcSet}\r\n                sizes={sizes}\r\n                className={className}\r\n                onLoad={handleImageLoad}\r\n                fetchPriority=\"high\"\r\n                width={width}\r\n                height={height}\r\n                alt={alt} // --- THIS IS THE FIX --- Explicitly adding the alt prop\r\n            />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"relative w-full h-full overflow-hidden\">\r\n            {!isLoaded && blurHash && <BlurHashCanvas hash={blurHash} width={32} height={32} />}\r\n            <LazyLoadImage\r\n                {...imageProps}\r\n                effect=\"opacity\"\r\n                afterLoad={handleImageLoad}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ResponsiveAuthImage;","const DevelopmentNotice = () => {\r\n    // This component now does nothing and renders nothing.\r\n    return null; \r\n};\r\n\r\nexport default DevelopmentNotice;","import React, { useState, useEffect } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler } from 'chart.js';\r\nimport { getHistoricalData } from '../../apiConfig';\r\n\r\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler);\r\n\r\nconst MarketChart = ({ ticker, chartTitle }) => {\r\n    const [chartData, setChartData] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (!ticker) return;\r\n\r\n        const fetchChartData = async () => {\r\n            setLoading(true);\r\n            setError(null);\r\n            // We do not reset chartData here to prevent flickering, the loading state handles it.\r\n            \r\n            try {\r\n                const response = await getHistoricalData(ticker);\r\n                const timeSeries = response.data ? response.data['Time Series (Daily)'] : null;\r\n                \r\n                if (timeSeries) {\r\n                    const dates = Object.keys(timeSeries).slice(0, 30).reverse();\r\n                    const prices = dates.map(date => parseFloat(timeSeries[date]['4. close']));\r\n\r\n                    if (dates.length === 0) {\r\n                        setError(`No historical data points found for ${ticker}.`);\r\n                        return;\r\n                    }\r\n\r\n                    const formattedDates = dates.map(date => new Date(date).toLocaleDateString('en-US', { month: 'short', day: 'numeric' }));\r\n\r\n                    setChartData({\r\n                        labels: formattedDates,\r\n                        datasets: [\r\n                            {\r\n                                label: `Price ($)`,\r\n                                data: prices,\r\n                                borderColor: 'rgb(59, 130, 246)',\r\n                                backgroundColor: (context) => {\r\n                                    const ctx = context.chart.ctx;\r\n                                    const gradient = ctx.createLinearGradient(0, 0, 0, 200);\r\n                                    gradient.addColorStop(0, 'rgba(59, 130, 246, 0.2)');\r\n                                    gradient.addColorStop(1, 'rgba(59, 130, 246, 0)');\r\n                                    return gradient;\r\n                                },\r\n                                borderWidth: 2,\r\n                                fill: true,\r\n                                tension: 0.4,\r\n                                pointRadius: 0,\r\n                                pointHoverRadius: 5,\r\n                                pointBackgroundColor: 'rgb(59, 130, 246)',\r\n                            },\r\n                        ],\r\n                    });\r\n                } else {\r\n                     setError(response.data.message || `Invalid data format received for ${ticker}.`);\r\n                }\r\n\r\n            } catch (err) {\r\n                if (err.response && err.response.data && err.response.data.message) {\r\n                    setError(err.response.data.message);\r\n                } else {\r\n                    setError('Could not connect to the API. It may be temporarily unavailable.');\r\n                }\r\n                console.error(\"Failed to fetch chart data:\", err);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchChartData();\r\n    }, [ticker]); // This dependency array is the key to correct caching behavior.\r\n\r\n    if (loading) {\r\n        return <div className=\"p-4 text-center text-slate-500 text-xs\">Loading Chart...</div>;\r\n    }\r\n    \r\n    if (error) {\r\n        return (\r\n            <div className=\"p-4 text-center\">\r\n                <p className=\"font-semibold text-sm text-gray-800\">{chartTitle || ticker}</p>\r\n                <div className=\"text-red-600 text-xs font-semibold mt-2 break-words\">{error}</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const options = {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        plugins: {\r\n            legend: { display: false },\r\n            title: {\r\n                display: true,\r\n                text: `${chartTitle || ticker} - Last 30 Days`,\r\n                font: { size: 16, weight: '600' },\r\n                color: '#1f2937',\r\n                padding: { top: 10, bottom: 20 }\r\n            },\r\n            tooltip: {\r\n                enabled: true,\r\n                mode: 'index',\r\n                intersect: false,\r\n                callbacks: {\r\n                    label: (context) => `Price: $${context.parsed.y.toFixed(2)}`\r\n                }\r\n            }\r\n        },\r\n        scales: {\r\n            x: {\r\n                display: true,\r\n                title: {\r\n                    display: false,\r\n                },\r\n                ticks: { \r\n                    display: true,\r\n                    font: { size: 10 },\r\n                    color: '#6b7280',\r\n                    maxTicksLimit: 6\r\n                },\r\n                grid: { display: false }\r\n            },\r\n            y: {\r\n                display: true,\r\n                title: {\r\n                    display: false,\r\n                },\r\n                ticks: {\r\n                    font: { size: 10 },\r\n                    color: '#6b7280',\r\n                    callback: (value) => `$${value.toFixed(0)}`\r\n                },\r\n                 grid: {\r\n                    color: '#e5e7eb',\r\n                    drawBorder: false,\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"p-4 w-full h-full\">\r\n            {chartData ? <Line options={options} data={chartData} /> : null}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MarketChart;","import React, { useState, useEffect } from 'react';\r\nimport MarketChart from './MarketChart';\r\n\r\nconst TopMoversCard = ({ title, fetchData, type }) => {\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [selectedStock, setSelectedStock] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const loadData = async () => {\r\n            try {\r\n                setLoading(true);\r\n                setError(null);\r\n                const response = await fetchData();\r\n                setData(response.data || []);\r\n            } catch (err) {\r\n                setError('Data could not be loaded.');\r\n                console.error(\"Failed to fetch top movers:\", err);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n        loadData();\r\n    }, [fetchData]);\r\n\r\n    const getRowColor = (stock) => {\r\n        const change = parseFloat(stock.changeAmount);\r\n        if (type === 'gainer' || (type === 'active' && change >= 0)) return 'text-green-600';\r\n        if (type === 'loser' || (type === 'active' && change < 0)) return 'text-red-600';\r\n        return 'text-gray-800';\r\n    };\r\n\r\n    const renderContent = () => {\r\n        if (loading) {\r\n            return <p className=\"p-2 text-xs text-gray-500 text-center\">Loading...</p>;\r\n        }\r\n        if (error) {\r\n            return <p className=\"p-2 text-xs text-red-500 break-words text-center\">{error}</p>;\r\n        }\r\n        return (\r\n            <div className=\"px-1\">\r\n                <table className=\"w-full\">\r\n                    <thead>\r\n                        <tr className=\"text-left text-gray-500 uppercase font-medium text-[10px]\">\r\n                            <th className=\"py-1 px-1 font-semibold\">Symbol</th>\r\n                            <th className=\"py-1 px-1 font-semibold text-right whitespace-nowrap\">Price</th>\r\n                            <th className=\"py-1 px-1 font-semibold text-right whitespace-nowrap\">Chg</th>\r\n                            <th className=\"py-1 px-1 font-semibold text-right whitespace-nowrap\">%Chg</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody className=\"divide-y divide-gray-100\">\r\n                        {data.slice(0, 5).map((stock) => (\r\n                            <tr\r\n                                key={stock.ticker}\r\n                                className=\"text-[11px] cursor-pointer hover:bg-gray-100\"\r\n                                onClick={() => setSelectedStock(stock.ticker)}\r\n                            >\r\n                                <td className=\"py-1 px-1 font-bold text-gray-700 truncate\">{stock.ticker}</td>\r\n                                <td className=\"py-1 px-1 text-right font-medium text-gray-700 whitespace-nowrap\">\r\n                                    ${parseFloat(stock.price).toFixed(2)}\r\n                                </td>\r\n                                <td className={`py-1 px-1 text-right font-bold whitespace-nowrap ${getRowColor(stock)}`}>\r\n                                    {parseFloat(stock.changeAmount) >= 0 ? '+' : ''}{parseFloat(stock.changeAmount).toFixed(2)}\r\n                                </td>\r\n                                <td className={`py-1 px-1 text-right font-bold whitespace-nowrap ${getRowColor(stock)}`}>\r\n                                    {stock.changePercentage}\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n                {selectedStock && <MarketChart ticker={selectedStock} />}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"bg-white border border-gray-200/90 shadow-sm\">\r\n            <h4 className=\"font-bold text-sm p-2 border-b border-gray-200/90 text-gray-800\">{title}</h4>\r\n            {renderContent()}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TopMoversCard;","import React, { useState } from 'react';\r\n\r\nconst BlogSidebar = ({ categories, selectedCategory, setSelectedCategory, loadingCategories }) => {\r\n    const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n\r\n    const allCategories = ['All', ...categories.map(cat => cat.name)];\r\n\r\n    return (\r\n        <aside className=\"lg:col-span-2 xl:col-span-2 order-1 lg:order-3 bg-white p-6 shadow-md mx-auto max-w-sm lg:max-w-none\">\r\n            <h1 className=\"text-3xl font-bold mb-2 text-gray-900\">Finance <span className=\"text-sky-600\">World</span></h1>\r\n            <p className=\"text-sm text-gray-500 mb-6\">Stay ahead with timely market developments.</p>\r\n            <div className=\"flex flex-col gap-y-6\">\r\n                <div>\r\n                    <h3 className=\"block text-sm font-medium text-gray-700 mb-2\">Categories</h3>\r\n                    {loadingCategories ? (\r\n                        <div className=\"space-y-2\">\r\n                            <div className=\"h-10 bg-gray-200 animate-pulse\"></div>\r\n                        </div>\r\n                    ) : (\r\n                        <div className=\"relative\">\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"w-full px-4 py-2 text-left bg-white border border-gray-300 shadow-sm focus:outline-none focus:ring-2 focus:ring-sky-500 focus:border-transparent transition-colors duration-200 hover:bg-gray-50 text-sm font-medium text-gray-700 flex justify-between items-center\"\r\n                                onClick={() => setIsDropdownOpen(!isDropdownOpen)}\r\n                            >\r\n                                {selectedCategory}\r\n                                <svg className={`h-5 w-5 transition-transform duration-200 ${isDropdownOpen ? 'rotate-180' : ''}`} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\">\r\n                                    <path fillRule=\"evenodd\" d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\r\n                                </svg>\r\n                            </button>\r\n                            {isDropdownOpen && (\r\n                                <div className=\"absolute z-10 mt-2 w-full origin-top-right bg-white shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none transition-all duration-100 ease-in-out\">\r\n                                    <div className=\"py-1\">\r\n                                        {allCategories.map(cat => (\r\n                                            <div\r\n                                                key={cat}\r\n                                                className=\"block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 cursor-pointer\"\r\n                                                onClick={() => {\r\n                                                    setSelectedCategory(cat);\r\n                                                    setIsDropdownOpen(false);\r\n                                                }}\r\n                                            >\r\n                                                {cat}\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </aside>\r\n    );\r\n};\r\n\r\nexport default BlogSidebar;","import React, { useState, useEffect } from 'react';\r\nimport { getNewsHighlights } from '../apiConfig';\r\n\r\n// Helper function to format the date and time\r\nconst formatNewsTimestamp = (dateString) => {\r\n    if (!dateString) return 'Date not available';\r\n    try {\r\n        const date = new Date(dateString);\r\n        if (isNaN(date.getTime())) {\r\n            return 'Invalid Date';\r\n        }\r\n        return date.toLocaleString('en-US', {\r\n            month: 'short',\r\n            day: 'numeric',\r\n            hour: 'numeric',\r\n            minute: '2-digit',\r\n            hour12: true\r\n        });\r\n    } catch (error) {\r\n        return 'Invalid Date';\r\n    }\r\n};\r\n\r\nexport const NewsListItem = ({ title, link, source, publishedAt }) => {\r\n    return (\r\n        <div className=\"py-2 border-b border-gray-200 last:border-b-0\">\r\n            <a\r\n                href={link}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                className=\"text-sm text-gray-800 hover:text-sky-600 transition-colors duration-200 leading-snug font-medium\"\r\n            >\r\n                {title}\r\n            </a>\r\n            <div className=\"text-xs text-gray-500 mt-1\">\r\n                <span className=\"font-semibold capitalize\">{source ? source.replace(/_/g, ' ') : 'News'}</span>\r\n                <span className=\"mx-1.5\">|</span>\r\n                <span>{formatNewsTimestamp(publishedAt)}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst NewsHighlights = () => {\r\n    const [highlights, setHighlights] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchNews = async () => {\r\n            try {\r\n                setLoading(true);\r\n                const response = await getNewsHighlights();\r\n                if (response && Array.isArray(response.data)) {\r\n                    setHighlights(response.data);\r\n                } else {\r\n                    setHighlights([]);\r\n                }\r\n                setError(null);\r\n            } catch (err) {\r\n                setError('Failed to load news highlights.');\r\n                console.error('Error fetching news highlights:', err);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchNews();\r\n    }, []);\r\n\r\n    if (loading || error || highlights.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div className=\"mb-6\">\r\n            <h3 className=\"text-base font-bold text-gray-800 pb-2 mb-2 border-b-2 border-gray-300\">\r\n                Recent Highlights\r\n            </h3>\r\n            <div>\r\n                {highlights.map((item) => (\r\n                    <NewsListItem\r\n                        key={item.id}\r\n                        title={item.title}\r\n                        link={item.link}\r\n                        source={item.source}\r\n                        publishedAt={item.publishedAt}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NewsHighlights;","import React, { useState, useEffect } from 'react';\r\nimport { getArchivedNews } from '../apiConfig';\r\nimport { NewsListItem } from './NewsHighlights'; // Re-using the list item component\r\n\r\nconst DeeperDive = () => {\r\n    const [articles, setArticles] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchNews = async () => {\r\n            try {\r\n                setLoading(true);\r\n                const response = await getArchivedNews();\r\n                if (response && Array.isArray(response.data)) {\r\n                    setArticles(response.data);\r\n                } else {\r\n                    setArticles([]);\r\n                }\r\n                setError(null);\r\n            } catch (err) {\r\n                setError('Failed to load archived news.');\r\n                console.error('Error fetching archived news:', err);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchNews();\r\n    }, []);\r\n\r\n    if (loading || error || articles.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div className=\"mt-6\">\r\n            <h3 className=\"text-base font-bold text-gray-800 pb-2 mb-2 border-b-2 border-gray-300\">\r\n                Deeper Dive\r\n            </h3>\r\n            <div>\r\n                {articles.map((item) => (\r\n                    <NewsListItem\r\n                        key={item.id}\r\n                        title={item.title}\r\n                        link={item.link}\r\n                        source={item.source}\r\n                        publishedAt={item.publishedAt}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DeeperDive;","import React, { useState } from 'react';\r\nimport MarketChart from './MarketChart';\r\n\r\n// Using the exact array from your working version\r\nconst indices = [\r\n    { symbol: '^GSPC', name: 'S&P 500' },\r\n    { symbol: '^DJI', name: 'Dow Jones Industrial Average' },\r\n    { symbol: '^IXIC', name: 'NASDAQ Composite' },\r\n];\r\n\r\nconst IndexCharts = () => {\r\n    const [activeIndex, setActiveIndex] = useState(0);\r\n\r\n    const activeChart = indices[activeIndex];\r\n\r\n    return (\r\n        <div className=\"bg-white border border-gray-200/90 shadow-sm rounded-md overflow-hidden\">\r\n            <div className=\"p-3 border-b border-gray-200/90\">\r\n                <h2 className=\"font-bold text-base text-gray-800\">US Indices</h2>\r\n                <div className=\"mt-2 flex items-center border border-gray-200 rounded-md p-0.5\">\r\n                    {indices.map((index, i) => (\r\n                        <button\r\n                            key={index.symbol}\r\n                            onClick={() => setActiveIndex(i)}\r\n                            // Display shorter names on tabs for better fit\r\n                            className={`flex-1 text-xs font-semibold py-1.5 px-2 transition-colors duration-200 rounded-sm ${\r\n                                activeIndex === i\r\n                                    ? 'bg-sky-600 text-white shadow'\r\n                                    : 'text-gray-600 hover:bg-gray-100'\r\n                            }`}\r\n                        >\r\n                            {index.name.includes('S&P') ? 'S&P 500' : index.name.includes('Dow Jones') ? 'Dow Jones' : 'NASDAQ'}\r\n                        </button>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            <div className=\"h-[250px] flex items-center justify-center\">\r\n                {activeChart && (\r\n                    <MarketChart\r\n                        // NOTE: The problematic 'key' prop has been removed.\r\n                        ticker={activeChart.symbol}\r\n                        chartTitle={activeChart.name}\r\n                    />\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default IndexCharts;","import React from 'react';\r\nimport TopMoversCard from './TopMoversCard';\r\nimport { getMostActive, getTopGainers, getTopLosers } from '../../apiConfig';\r\n\r\nconst MarketMovers = () => {\r\n    return (\r\n        <div className=\"space-y-4\">\r\n            <h2 className=\"font-bold text-xl border-b pb-2 pt-4\">Market Movers</h2>\r\n            <TopMoversCard title=\"Most Active\" fetchData={getMostActive} type=\"active\" />\r\n            <TopMoversCard title=\"Top Gainers\" fetchData={getTopGainers} type=\"gainer\" />\r\n            <TopMoversCard title=\"Top Losers\" fetchData={getTopLosers} type=\"loser\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MarketMovers;","import React, { useState, useEffect, useMemo, memo, useRef, useCallback, forwardRef } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport { Link, useSearchParams } from 'react-router-dom';\r\nimport { API_URL, getCategories, getPaginatedPosts, getTopGainers, getTopLosers, getMostActive } from '../apiConfig';\r\nimport DOMPurify from 'dompurify';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport { FiFilter, FiX } from 'react-icons/fi';\r\nimport ResponsiveAuthImage from '../components/ResponsiveAuthImage';\r\nimport DevelopmentNotice from '../components/DevelopmentNotice';\r\nimport TopMoversCard from '../components/market/TopMoversCard';\r\nimport BlogSidebar from '../components/BlogSidebar';\r\nimport NewsHighlights from '../components/NewsHighlights';\r\nimport DeeperDive from '../components/DeeperDive';\r\nimport IndexCharts from '../components/market/IndexCharts';\r\nimport MarketMovers from '../components/market/MarketMovers';\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport SearchAutocomplete from '../components/SearchAutocomplete';\r\n\r\n\r\nconst categoryStyles = { \"Stocks\": \"text-sky-700\", \"Crypto\": \"text-sky-700\", \"Trading\": \"text-sky-700\", \"News\": \"text-sky-700\", \"Default\": \"text-sky-700\" };\r\n\r\nconst createSnippet = (html, length = 155) => {\r\n    if (!html) return '';\r\n    const plainText = DOMPurify.sanitize(html, { ALLOWED_TAGS: [] });\r\n    if (plainText.length <= length) return plainText;\r\n    const trimmed = plainText.substring(0, length);\r\n    return trimmed.substring(0, Math.min(trimmed.length, trimmed.lastIndexOf(' '))) + '...';\r\n};\r\n\r\nconst formatDateTime = (dateString) => {\r\n    if (!dateString) return { isNew: false, displayDate: 'Date not available' };\r\n    const dateObj = new Date(dateString);\r\n    if (isNaN(dateObj)) return { isNew: false, displayDate: 'Date not available' };\r\n    const now = new Date();\r\n    const diffHours = (now - dateObj) / (1000 * 60 * 60);\r\n    const displayDate = new Intl.DateTimeFormat('en-US', { month: 'long', day: 'numeric', year: 'numeric' }).format(dateObj);\r\n    return { isNew: diffHours < 48, displayDate };\r\n};\r\n\r\nconst PostCard = memo(forwardRef(({ article, onCategoryClick, categoriesMap }, ref) => {\r\n    const sliderRef = useRef(null);\r\n    const hasThumbnails = article.thumbnails && article.thumbnails.length > 0;\r\n    const isStory = hasThumbnails && article.thumbnails.length > 1;\r\n    const { isNew } = formatDateTime(article.updatedAt || article.createdAt);\r\n    const displayDate = new Intl.DateTimeFormat('en-US', { month: 'long', day: 'numeric', year: 'numeric', hour: '2-digit', minute: '2-digit', hour12: true }).format(new Date(article.updatedAt || article.createdAt));\r\n    const categoryName = article.category?.name || 'Uncategorized';\r\n    const categoryClass = categoryStyles[categoryName] || categoryStyles[\"Default\"];\r\n    const isFeatured = article.featured;\r\n    const totalSlides = article.thumbnails?.length || 0;\r\n    const landscapeSlidesToShow = Math.min(totalSlides, 4);\r\n    const landscapeSettings = { dots: false, infinite: totalSlides > landscapeSlidesToShow, speed: 500, slidesToShow: landscapeSlidesToShow, slidesToScroll: 1, autoplay: true, autoplaySpeed: 3000, arrows: false };\r\n\r\n    const categorySlug = categoriesMap[categoryName] || 'uncategorized';\r\n    const postLink = `/category/${categorySlug}/${article.userFriendlySlug}/${article.urlArticleId}`;\r\n\r\n    const CardContent = () => (<div className=\"p-3 flex flex-col flex-grow\"><div className=\"flex justify-between items-start text-xs mb-2\"><div className=\"flex items-center\"><button onClick={() => onCategoryClick(categoryName)} className={`font-bold uppercase tracking-wider ${categoryClass} hover:underline`}>{categoryName}</button><span className=\"text-gray-400 mx-2\">|</span><span className=\"text-gray-500 font-medium\">By Treishvaam Finance</span></div>{isNew && <span className=\"font-semibold text-red-500 flex-shrink-0\">NEW</span>}</div><h3 className=\"text-lg font-bold mb-2 text-gray-900 leading-tight break-words\"><Link to={postLink} className=\"hover:underline\">{article.title}</Link></h3><p className=\"text-sm text-gray-700 flex-grow break-words\">{createSnippet(article.customSnippet || article.content, 100)}</p><div className=\"mt-3 pt-3 border-t border-gray-100 flex items-center justify-between\"><div className=\"text-xs text-gray-500\"><span>{displayDate}</span></div><Link to={postLink} className=\"text-sm font-semibold text-sky-600 hover:text-sky-800 flex-shrink-0 ml-2\">Read More</Link></div></div>);\r\n\r\n    const ThumbnailDisplay = () => {\r\n        if (!hasThumbnails) return null;\r\n\r\n        // --- MODIFIED for stories/sliders ---\r\n        if (isStory) {\r\n            const firstThumb = article.thumbnails[0];\r\n            const aspectRatio = firstThumb.width && firstThumb.height ? `${firstThumb.width} / ${firstThumb.height}` : '16 / 9';\r\n            return (\r\n                <div style={{ aspectRatio }} className=\"bg-gray-100 relative\">\r\n                    <Slider ref={sliderRef} {...landscapeSettings}>\r\n                        {article.thumbnails.map(thumb => (\r\n                            <div key={thumb.id} className=\"px-px\">\r\n                                <Link to={postLink} className=\"block w-full h-full\">\r\n                                    <ResponsiveAuthImage\r\n                                        baseName={thumb.imageUrl}\r\n                                        alt={thumb.altText || article.title}\r\n                                        className=\"w-full h-full object-cover\"\r\n                                        width={thumb.width}\r\n                                        height={thumb.height}\r\n                                        blurHash={thumb.blurHash}\r\n                                    />\r\n                                </Link>\r\n                            </div>\r\n                        ))}\r\n                    </Slider>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        // --- MODIFIED for single thumbnails ---\r\n        const singleThumbnail = article.thumbnails[0];\r\n        const aspectRatio = singleThumbnail.width && singleThumbnail.height ? `${singleThumbnail.width} / ${singleThumbnail.height}` : '4 / 3';\r\n\r\n        return (\r\n            <Link to={postLink} className=\"block bg-gray-100\" style={{ aspectRatio }}>\r\n                <ResponsiveAuthImage\r\n                    baseName={singleThumbnail.imageUrl}\r\n                    alt={singleThumbnail.altText || article.title}\r\n                    className=\"w-full h-full object-cover\"\r\n                    width={singleThumbnail.width}\r\n                    height={singleThumbnail.height}\r\n                    blurHash={singleThumbnail.blurHash}\r\n                />\r\n            </Link>\r\n        );\r\n    };\r\n\r\n    return (<div ref={ref} className=\"break-inside-avoid bg-white border border-gray-200 mb-px relative flex flex-col\">{isFeatured && (<div className=\"absolute top-2 left-2 z-10\"><span className=\"bg-gradient-to-r from-yellow-400 to-pink-500 text-white text-xs font-bold px-3 py-1 rounded-full shadow-md uppercase tracking-wider\">Featured</span></div>)}<ThumbnailDisplay /><CardContent /></div>);\r\n}));\r\n\r\nconst GridPostCard = memo(forwardRef(({ article, onCategoryClick, categoriesMap }, ref) => {\r\n    const sliderRef = useRef(null);\r\n    const hasThumbnails = article.thumbnails && article.thumbnails.length > 0;\r\n    const isStory = hasThumbnails && article.thumbnails.length > 1;\r\n    const { isNew } = formatDateTime(article.updatedAt || article.createdAt);\r\n    const displayDate = new Intl.DateTimeFormat('en-US', { month: 'long', day: 'numeric', year: 'numeric', hour: '2-digit', minute: '2-digit', hour12: true }).format(new Date(article.updatedAt || article.createdAt));\r\n    const categoryName = article.category?.name || 'Uncategorized';\r\n    const categoryClass = categoryStyles[categoryName] || categoryStyles[\"Default\"];\r\n    const isFeatured = article.featured;\r\n    const totalSlides = article.thumbnails?.length || 0;\r\n    const landscapeSlidesToShow = Math.min(totalSlides, 4);\r\n    const landscapeSettings = { dots: false, infinite: totalSlides > landscapeSlidesToShow, speed: 500, slidesToShow: landscapeSlidesToShow, slidesToScroll: 1, autoplay: true, autoplaySpeed: 3000, arrows: false };\r\n\r\n    const categorySlug = categoriesMap[categoryName] || 'uncategorized';\r\n    const postLink = `/category/${categorySlug}/${article.userFriendlySlug}/${article.urlArticleId}`;\r\n\r\n    const CardContent = () => (<div className=\"p-3 flex flex-col flex-grow\"><div className=\"flex justify-between items-start text-xs mb-2\"><div className=\"flex items-center\"><button onClick={() => onCategoryClick(categoryName)} className={`font-bold uppercase tracking-wider ${categoryClass} hover:underline`}>{categoryName}</button><span className=\"text-gray-400 mx-2\">|</span><span className=\"text-gray-500 font-medium\">By Treishvaam Finance</span></div>{isNew && <span className=\"font-semibold text-red-500 flex-shrink-0\">NEW</span>}</div><h3 className=\"text-lg font-bold mb-2 text-gray-900 leading-tight break-words\"><Link to={postLink} className=\"hover:underline\">{article.title}</Link></h3><p className=\"text-sm text-gray-700 flex-grow break-words\">{createSnippet(article.customSnippet || article.content, 100)}</p><div className=\"mt-3 pt-3 border-t border-gray-100 flex items-center justify-between\"><div className=\"text-xs text-gray-500\"><span>{displayDate}</span></div><Link to={postLink} className=\"text-sm font-semibold text-sky-600 hover:text-sky-800 flex-shrink-0 ml-2\">Read More</Link></div></div>);\r\n\r\n    const ThumbnailDisplay = () => {\r\n        if (!hasThumbnails) return null;\r\n\r\n        // --- MODIFIED for stories/sliders ---\r\n        if (isStory) {\r\n            const firstThumb = article.thumbnails[0];\r\n            const aspectRatio = firstThumb.width && firstThumb.height ? `${firstThumb.width} / ${firstThumb.height}` : '16 / 9';\r\n            return (\r\n                <div style={{ aspectRatio }} className=\"bg-gray-100 relative\">\r\n                    <Slider ref={sliderRef} {...landscapeSettings}>\r\n                        {article.thumbnails.map(thumb => (\r\n                            <div key={thumb.id} className=\"px-px\">\r\n                                <Link to={postLink} className=\"block w-full h-full\">\r\n                                    <ResponsiveAuthImage\r\n                                        baseName={thumb.imageUrl}\r\n                                        alt={thumb.altText || article.title}\r\n                                        className=\"w-full h-full object-cover\"\r\n                                        width={thumb.width}\r\n                                        height={thumb.height}\r\n                                        blurHash={thumb.blurHash}\r\n                                    />\r\n                                </Link>\r\n                            </div>\r\n                        ))}\r\n                    </Slider>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        // --- MODIFIED for single thumbnails ---\r\n        const singleThumbnail = article.thumbnails[0];\r\n        const aspectRatio = singleThumbnail.width && singleThumbnail.height ? `${singleThumbnail.width} / ${singleThumbnail.height}` : '16 / 9';\r\n\r\n        return (\r\n            <Link to={postLink} className=\"block bg-gray-100\" style={{ aspectRatio }}>\r\n                <ResponsiveAuthImage\r\n                    baseName={singleThumbnail.imageUrl}\r\n                    alt={singleThumbnail.altText || article.title}\r\n                    className=\"w-full h-full object-cover\"\r\n                    width={singleThumbnail.width}\r\n                    height={singleThumbnail.height}\r\n                    blurHash={singleThumbnail.blurHash}\r\n                />\r\n            </Link>\r\n        );\r\n    };\r\n\r\n    return (<div ref={ref} className=\"bg-white border border-gray-200 relative flex flex-col h-full\">{isFeatured && (<div className=\"absolute top-2 left-2 z-10\"><span className=\"bg-gradient-to-r from-yellow-400 to-pink-500 text-white text-xs font-bold px-3 py-1 rounded-full shadow-md uppercase tracking-wider\">Featured</span></div>)}<ThumbnailDisplay /><CardContent /></div>);\r\n}));\r\n\r\nconst BannerPostCard = memo(forwardRef(({ article, onCategoryClick, categoriesMap, eager = false }, ref) => {\r\n    // This card is less affected by CLS due to its fixed height, but we'll add the props for consistency.\r\n    const sliderRef = useRef(null);\r\n    const hasThumbnails = article.thumbnails && article.thumbnails.length > 0;\r\n    const isStory = hasThumbnails && article.thumbnails.length > 1;\r\n    const { isNew, displayDate } = formatDateTime(article.updatedAt || article.createdAt);\r\n    const categoryName = article.category?.name || 'Uncategorized';\r\n    const bannerSliderSettings = { dots: false, fade: true, infinite: true, speed: 1000, slidesToShow: 1, slidesToScroll: 1, autoplay: true, autoplaySpeed: 4000, arrows: false, pauseOnHover: false };\r\n\r\n    const categorySlug = categoriesMap[categoryName] || 'uncategorized';\r\n    const postLink = `/category/${categorySlug}/${article.userFriendlySlug}/${article.urlArticleId}`;\r\n\r\n    const ThumbnailDisplay = () => {\r\n        if (!hasThumbnails) {\r\n            return <div className=\"h-[400px] bg-gray-200\"></div>;\r\n        }\r\n        if (isStory) {\r\n            return (\r\n                <Slider ref={sliderRef} {...bannerSliderSettings}>\r\n                    {article.thumbnails.map((thumb, index) => (\r\n                        <div key={thumb.id}>\r\n                            <ResponsiveAuthImage\r\n                                baseName={thumb.imageUrl}\r\n                                alt={thumb.altText || article.title}\r\n                                className=\"w-full h-full object-cover\"\r\n                                eager={eager && index === 0}\r\n                                width={thumb.width}\r\n                                height={thumb.height}\r\n                                blurHash={thumb.blurHash}\r\n                            />\r\n                        </div>\r\n                    ))}\r\n                </Slider>\r\n            );\r\n        }\r\n        const singleThumbnail = article.thumbnails[0];\r\n        return <ResponsiveAuthImage\r\n            baseName={singleThumbnail.imageUrl}\r\n            alt={singleThumbnail.altText || article.title}\r\n            className=\"w-full h-full object-cover\"\r\n            eager={eager}\r\n            width={singleThumbnail.width}\r\n            height={singleThumbnail.height}\r\n            blurHash={singleThumbnail.blurHash}\r\n        />;\r\n    };\r\n\r\n    return (<div ref={ref} className=\"block relative bg-black text-white overflow-hidden border border-gray-200 group\"><div className=\"absolute inset-0\"><ThumbnailDisplay /></div><div className=\"absolute inset-0 bg-gradient-to-t from-black via-black/70 to-transparent group-hover:via-black/80 transition-all duration-300\"></div><Link to={postLink} className=\"relative p-8 flex flex-col justify-end min-h-[400px] z-10\"><div className=\"flex justify-between items-center text-sm mb-2\"><div className=\"flex items-center gap-3\"><span onClick={(e) => { e.preventDefault(); onCategoryClick(categoryName); }} className=\"font-bold uppercase tracking-wider text-sky-300 hover:underline cursor-pointer\">{categoryName}</span><span className=\"text-gray-400\">|</span><span className=\"text-gray-300\">{displayDate}</span></div>{isNew && <span className=\"font-semibold text-red-500 bg-white/20 px-2 py-1 rounded-full text-xs\">NEW</span>}</div><h2 className=\"text-3xl md:text-4xl font-bold my-2 leading-tight text-white group-hover:text-sky-200 transition-colors duration-300\">{article.title}</h2><p className=\"text-gray-200 text-base mt-2 max-w-2xl hidden md:block\">{createSnippet(article.customSnippet || article.content, 150)}</p><div className=\"text-xs text-gray-400 mt-4\">By Treishvaam Finance</div></Link></div>);\r\n}));\r\n\r\nconst MobilePostCard = memo(forwardRef(({ article, onCategoryClick, layout, categoriesMap }, ref) => {\r\n    // Mobile view also benefits from the optimization\r\n    const sliderRef = useRef(null);\r\n    const hasThumbnails = article.thumbnails && article.thumbnails.length > 0;\r\n    const isStory = hasThumbnails && article.thumbnails.length > 1;\r\n    const { isNew, displayDate } = formatDateTime(article.updatedAt || article.createdAt);\r\n    const categoryName = article.category?.name || 'Uncategorized';\r\n    const categoryClass = categoryStyles[categoryName] || categoryStyles[\"Default\"];\r\n    const isFeatured = article.featured;\r\n    const isBannerLayout = layout === 'banner';\r\n    const titleClass = \"text-sm font-bold text-gray-900 leading-tight\";\r\n    const sliderSettings = { dots: false, infinite: true, speed: 500, slidesToShow: 1, slidesToScroll: 1, autoplay: true, autoplaySpeed: 3500, arrows: false };\r\n\r\n    const categorySlug = categoriesMap[categoryName] || 'uncategorized';\r\n    const postLink = `/category/${categorySlug}/${article.userFriendlySlug}/${article.urlArticleId}`;\r\n\r\n    const singleThumbnail = hasThumbnails ? article.thumbnails[0] : null;\r\n    let aspectRatio;\r\n    if (singleThumbnail && singleThumbnail.width && singleThumbnail.height) {\r\n        aspectRatio = `${singleThumbnail.width} / ${singleThumbnail.height}`;\r\n    } else {\r\n        aspectRatio = isBannerLayout ? '16 / 9' : '1 / 1';\r\n    }\r\n\r\n    return (\r\n        <div ref={ref} className={`bg-white shadow-sm flex flex-col relative ${isBannerLayout ? 'col-span-2' : 'col-span-1'}`}>\r\n            {isFeatured && (<div className=\"absolute top-2 left-2 z-10\"><span className=\"bg-gradient-to-r from-yellow-400 to-pink-500 text-white text-xs font-bold px-2 py-1 shadow-md uppercase tracking-wider\">Featured</span></div>)}\r\n            {hasThumbnails && (\r\n                <div style={{ aspectRatio }} className=\"bg-gray-100\">\r\n                    {isStory ? (\r\n                        <Slider ref={sliderRef} {...sliderSettings}>\r\n                            {article.thumbnails.map(thumb => (\r\n                                <div key={thumb.id}>\r\n                                    <Link to={postLink}>\r\n                                        <ResponsiveAuthImage\r\n                                            baseName={thumb.imageUrl}\r\n                                            alt={thumb.altText || article.title}\r\n                                            className=\"w-full h-full object-cover\"\r\n                                            width={thumb.width}\r\n                                            height={thumb.height}\r\n                                            blurHash={thumb.blurHash}\r\n                                        />\r\n                                    </Link>\r\n                                </div>\r\n                            ))}\r\n                        </Slider>\r\n                    ) : (\r\n                        <Link to={postLink}>\r\n                            <ResponsiveAuthImage\r\n                                baseName={singleThumbnail.imageUrl}\r\n                                alt={singleThumbnail.altText || article.title}\r\n                                className=\"w-full h-full object-cover\"\r\n                                width={singleThumbnail.width}\r\n                                height={singleThumbnail.height}\r\n                                blurHash={singleThumbnail.blurHash}\r\n                            />\r\n                        </Link>\r\n                    )}\r\n                </div>\r\n            )}\r\n            <div className=\"p-3 flex flex-col flex-grow\">\r\n                <div className=\"flex items-center justify-between text-xs mb-2\">\r\n                    <div className=\"flex items-center flex-wrap\">\r\n                        <button onClick={() => onCategoryClick(categoryName)} className={`font-bold uppercase tracking-wider ${categoryClass} hover:underline`}>{categoryName}</button>\r\n                        <span className=\"text-gray-400 mx-2\">|</span>\r\n                        <span className=\"text-gray-500 font-medium\">By Treishvaam Finance</span>\r\n                    </div>\r\n                    {isNew && <span className=\"font-semibold text-red-500 flex-shrink-0 ml-2\">NEW</span>}\r\n                </div>\r\n                <h3 className={titleClass}>\r\n                    <Link to={postLink} className=\"hover:underline\">{article.title}</Link>\r\n                </h3>\r\n                <div className=\"mt-auto pt-2 text-xs text-gray-500\">\r\n                    <span>{displayDate}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}));\r\n\r\n// The rest of the BlogPage component remains the same\r\n// ... (CategoryFilter, NavbarExtrasPortal, BlogPage main component)\r\n\r\nconst CategoryFilter = ({ categories, selectedCategory, setSelectedCategory, loadingCategories }) => {\r\n    const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n    const allCategories = ['All', ...categories.map(cat => cat.name)];\r\n\r\n    if (loadingCategories) {\r\n        return <div className=\"h-10 w-48 bg-gray-200 animate-pulse rounded-md\"></div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"relative\">\r\n            <button\r\n                type=\"button\"\r\n                className=\"w-48 px-4 py-2 text-left bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-sky-500 focus:border-transparent transition-colors duration-200 hover:bg-gray-50 text-sm font-medium text-gray-700 flex justify-between items-center\"\r\n                onClick={() => setIsDropdownOpen(!isDropdownOpen)}\r\n            >\r\n                {selectedCategory}\r\n                <svg className={`h-5 w-5 transition-transform duration-200 ${isDropdownOpen ? 'rotate-180' : ''}`} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\">\r\n                    <path fillRule=\"evenodd\" d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\r\n                </svg>\r\n            </button>\r\n            {isDropdownOpen && (\r\n                <div className=\"absolute z-20 mt-2 w-full origin-top-right bg-white rounded-md shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none transition-all duration-100 ease-in-out\">\r\n                    <div className=\"py-1\">\r\n                        {allCategories.map(cat => (\r\n                            <div\r\n                                key={cat}\r\n                                className=\"block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 cursor-pointer\"\r\n                                onClick={() => {\r\n                                    setSelectedCategory(cat);\r\n                                    setIsDropdownOpen(false);\r\n                                }}\r\n                            >\r\n                                {cat}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nconst NavbarExtrasPortal = ({ children }) => {\r\n    const [mountNode, setMountNode] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const node = document.getElementById('navbar-extras-portal-target');\r\n        setMountNode(node);\r\n        return () => {\r\n            if (node) {\r\n                node.innerHTML = '';\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    return mountNode ? createPortal(children, mountNode) : null;\r\n};\r\n\r\n\r\nconst BlogPage = () => {\r\n    const [posts, setPosts] = useState([]);\r\n    const [page, setPage] = useState(0);\r\n    const [hasMore, setHasMore] = useState(true);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState('');\r\n    const [categories, setCategories] = useState([]);\r\n    const [loadingCategories, setLoadingCategories] = useState(true);\r\n    const [selectedCategory, setSelectedCategory] = useState(\"All\");\r\n    const [showMobileFilters, setShowMobileFilters] = useState(false);\r\n    const [searchParams] = useSearchParams();\r\n    const searchTerm = searchParams.get('q') || \"\";\r\n    const [categoriesMap, setCategoriesMap] = useState({});\r\n\r\n    const [isDataReady, setIsDataReady] = useState(false);\r\n\r\n    const observer = useRef();\r\n    const lastPostElementRef = useCallback(node => {\r\n        if (loading) return;\r\n        if (observer.current) observer.current.disconnect();\r\n        observer.current = new IntersectionObserver(entries => {\r\n            if (entries[0].isIntersecting && hasMore) {\r\n                setPage(prevPage => prevPage + 1);\r\n            }\r\n        });\r\n        if (node) observer.current.observe(node);\r\n    }, [loading, hasMore]);\r\n\r\n    useEffect(() => {\r\n        setPosts([]);\r\n        setPage(0);\r\n        setHasMore(true);\r\n    }, [selectedCategory, searchTerm]);\r\n\r\n    useEffect(() => {\r\n        if (!isDataReady) return;\r\n\r\n        setLoading(true);\r\n        setError('');\r\n        getPaginatedPosts(page, 9).then(response => {\r\n            setPosts(prevPosts => {\r\n                const newPosts = response.data.content;\r\n                const existingIds = new Set(prevPosts.map(p => p.id));\r\n                const uniqueNewPosts = newPosts.filter(p => !existingIds.has(p.id));\r\n                return page === 0 ? newPosts : [...prevPosts, ...uniqueNewPosts];\r\n            });\r\n            setHasMore(!response.data.last);\r\n            setLoading(false);\r\n        }).catch(err => {\r\n            setError('Failed to fetch blog posts.');\r\n            setLoading(false);\r\n        });\r\n    }, [page, selectedCategory, searchTerm, isDataReady]);\r\n\r\n    useEffect(() => {\r\n        getCategories().then(response => {\r\n            setCategories(response.data);\r\n            const newCategoriesMap = response.data.reduce((acc, cat) => {\r\n                acc[cat.name] = cat.slug;\r\n                return acc;\r\n            }, {});\r\n            setCategoriesMap(newCategoriesMap);\r\n        }).catch(err => console.error(\"Failed to fetch categories:\", err))\r\n            .finally(() => {\r\n                setLoadingCategories(false);\r\n                setIsDataReady(true);\r\n            });\r\n    }, []);\r\n\r\n    const filteredPosts = useMemo(() => {\r\n        let postsToFilter = posts;\r\n        if (selectedCategory !== \"All\") {\r\n            postsToFilter = postsToFilter.filter(p => p.category?.name === selectedCategory);\r\n        }\r\n        if (searchTerm) {\r\n            const term = searchTerm.toLowerCase();\r\n            postsToFilter = postsToFilter.filter(p => p.title.toLowerCase().includes(term));\r\n        }\r\n        return postsToFilter.sort((a, b) => new Date(b.updatedAt || b.createdAt) - new Date(a.updatedAt || a.createdAt));\r\n    }, [posts, selectedCategory, searchTerm]);\r\n\r\n    const mobileLayout = useMemo(() => {\r\n        return filteredPosts.map(post => {\r\n            const isStory = post.thumbnails && post.thumbnails.length > 1;\r\n            const layout = isStory ? 'banner' : 'grid';\r\n            return { ...post, layout };\r\n        });\r\n    }, [filteredPosts]);\r\n\r\n    const desktopLayoutBlocks = useMemo(() => {\r\n        if (filteredPosts.length === 0) return [];\r\n        const blocks = []; let currentDefaultBlock = []; const multiColumnGroups = {};\r\n        filteredPosts.forEach(post => { if (post.layoutStyle && post.layoutStyle.startsWith('MULTI_COLUMN') && post.layoutGroupId) { if (!multiColumnGroups[post.layoutGroupId]) { multiColumnGroups[post.layoutGroupId] = { type: post.layoutStyle, posts: [] }; } multiColumnGroups[post.layoutGroupId].posts.push(post); } });\r\n        for (const groupId in multiColumnGroups) { multiColumnGroups[groupId].posts.sort((a, b) => new Date(b.updatedAt || b.createdAt) - new Date(a.updatedAt || a.createdAt)); }\r\n        const processedGroupIds = new Set();\r\n        filteredPosts.forEach(post => {\r\n            const style = post.layoutStyle || 'DEFAULT';\r\n            if (style === 'BANNER') { if (currentDefaultBlock.length > 0) { blocks.push({ id: `default-${blocks.length}`, type: 'DEFAULT', posts: currentDefaultBlock }); currentDefaultBlock = []; } blocks.push({ id: `banner-${post.id}`, type: 'BANNER', posts: [post] }); } else if (style.startsWith('MULTI_COLUMN') && post.layoutGroupId) { if (processedGroupIds.has(post.layoutGroupId)) return; if (currentDefaultBlock.length > 0) { blocks.push({ id: `default-${blocks.length}`, type: 'DEFAULT', posts: currentDefaultBlock }); currentDefaultBlock = []; } blocks.push({ id: post.layoutGroupId, ...multiColumnGroups[post.layoutGroupId] }); processedGroupIds.add(post.layoutGroupId); } else { currentDefaultBlock.push(post); }\r\n        });\r\n        if (currentDefaultBlock.length > 0) { blocks.push({ id: `default-${blocks.length}`, type: 'DEFAULT', posts: currentDefaultBlock }); }\r\n        return blocks;\r\n    }, [filteredPosts]);\r\n\r\n    const latestPost = useMemo(() => { if (!posts || posts.length === 0) return null; return posts.reduce((latest, current) => new Date(current.updatedAt || current.createdAt) > new Date(latest.updatedAt || latest.createdAt) ? current : latest); }, [posts]);\r\n    const pageTitle = latestPost ? `Treishvaam Finance · ${latestPost.title}` : `Treishvaam Finance | Financial News & Analysis`;\r\n    const pageDescription = latestPost ? createSnippet(latestPost.content) : \"Your trusted source for financial news and analysis.\";\r\n    const imageUrl = latestPost?.thumbnails?.[0]?.imageUrl ? `${API_URL}/api/uploads/${latestPost.thumbnails[0].imageUrl}.webp` : \"/logo512.png\";\r\n    const marketSliderSettings = { dots: true, infinite: true, speed: 500, slidesToShow: 1, slidesToScroll: 1, arrows: false };\r\n\r\n    const renderDesktopLayout = () => {\r\n        if (desktopLayoutBlocks.length === 0 && !loading && page === 0) { return <div className=\"text-center p-10 col-span-full\"><p>No posts found for your criteria.</p></div>; }\r\n        return desktopLayoutBlocks.map((block, blockIndex) => {\r\n            const isLastBlock = blockIndex === desktopLayoutBlocks.length - 1;\r\n            const blockStyle = { marginBottom: '2rem' };\r\n            if (block.type === 'BANNER') {\r\n                const isLastPost = isLastBlock && block.posts.length === 1;\r\n                const isLCP = blockIndex === 0;\r\n                return <BannerPostCard ref={isLastPost ? lastPostElementRef : null} key={block.id} article={block.posts[0]} onCategoryClick={setSelectedCategory} categoriesMap={categoriesMap} eager={isLCP} />;\r\n            }\r\n            if (block.type.startsWith('MULTI_COLUMN')) {\r\n                const columnCount = parseInt(block.type.split('_')[2]) || 2;\r\n                const gridClass = `grid grid-cols-1 md:grid-cols-${columnCount} gap-px`;\r\n                return (<div style={blockStyle} key={block.id} className={gridClass}>{block.posts.map((article, postIndex) => { const isLastPost = isLastBlock && postIndex === block.posts.length - 1; return <GridPostCard ref={isLastPost ? lastPostElementRef : null} key={article.id} article={article} onCategoryClick={setSelectedCategory} categoriesMap={categoriesMap} />; })}</div>);\r\n            }\r\n            if (block.type === 'DEFAULT') {\r\n                return (<div style={blockStyle} key={block.id} className=\"sm:columns-2 md:columns-3 lg:columns-4 gap-px\">{block.posts.map((article, postIndex) => { const isLastPost = isLastBlock && postIndex === block.posts.length - 1; return <PostCard ref={isLastPost ? lastPostElementRef : null} key={article.id} article={article} onCategoryClick={setSelectedCategory} categoriesMap={categoriesMap} />; })}</div>);\r\n            }\r\n            return null;\r\n        });\r\n    };\r\n\r\n    if (page === 0 && loading) return <div className=\"text-center p-10\">Loading posts...</div>;\r\n    if (error) return (<div className=\"flex flex-col items-center justify-center min-h-[60vh] text-center p-6 bg-gray-50\"><div className=\"text-red-400 mb-4\"><svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-16 w-16\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth={1}><path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\" /></svg></div><h2 className=\"text-2xl font-semibold text-gray-800 mb-2\">Site is Currently Under Maintenance</h2><p className=\"max-w-md text-gray-600\">We are performing essential updates to improve your experience. We apologize for any inconvenience and appreciate your patience. Please check back again shortly.</p></div>);\r\n\r\n    return (\r\n        <>\r\n            <DevelopmentNotice />\r\n            <Helmet>\r\n                <title>{pageTitle}</title>\r\n                <meta name=\"description\" content={pageDescription} />\r\n                <link rel=\"canonical\" href=\"https://treishfin.treishvaamgroup.com/\" />\r\n                <meta property=\"og:title\" content={pageTitle} />\r\n                <meta property=\"og:description\" content={pageDescription} />\r\n                <meta property=\"og:image\" content={imageUrl} />\r\n            </Helmet>\r\n\r\n            <NavbarExtrasPortal>\r\n                <div className=\"w-64\">\r\n                    <SearchAutocomplete />\r\n                </div>\r\n                <CategoryFilter\r\n                    categories={categories}\r\n                    selectedCategory={selectedCategory}\r\n                    setSelectedCategory={setSelectedCategory}\r\n                    loadingCategories={loadingCategories}\r\n                />\r\n                <h1 className=\"text-xl font-bold text-gray-900 hidden lg:block\">Finance <span className=\"text-sky-600\">World</span></h1>\r\n            </NavbarExtrasPortal>\r\n\r\n            <section className=\"bg-gray-50\">\r\n                <div className=\"hidden sm:grid grid-cols-1 lg:grid-cols-12 gap-2\">\r\n                    <aside className=\"lg:col-span-2 order-1 py-6\"><div className=\"space-y-4\"><NewsHighlights /><DeeperDive /></div></aside>\r\n                    <main className=\"lg:col-span-8 order-2 min-h-screen py-6 bg-white\">{renderDesktopLayout()}{loading && <div className=\"text-center p-10 col-span-full\">Loading more posts...</div>}{!hasMore && filteredPosts.length > 0 && <div className=\"text-center p-10 col-span-full text-gray-500\">You've reached the end.</div>}</main>\r\n                    <aside className=\"lg:col-span-2 order-3 py-6\"><div className=\"space-y-6\"><IndexCharts /><MarketMovers /></div></aside>\r\n                </div>\r\n                <div className=\"sm:hidden\">\r\n                    <div className=\"px-4 py-4\"><div className=\"border-b border-gray-200 mb-4\"><button onClick={() => setShowMobileFilters(!showMobileFilters)} className=\"w-full flex justify-between items-center py-3 text-lg font-semibold text-gray-800\">{showMobileFilters ? 'Hide Filters' : 'Filters & Categories'}{showMobileFilters ? <FiX /> : <FiFilter />}</button>{showMobileFilters && (<div className=\"py-4\"><BlogSidebar categories={categories} selectedCategory={setSelectedCategory} setSelectedCategory={setSelectedCategory} loadingCategories={loadingCategories} /></div>)}</div></div>\r\n                    <div className=\"px-4\"><NewsHighlights /></div>\r\n                    <div className=\"grid grid-cols-2 gap-2 p-2\">\r\n                        {mobileLayout.map((article, index) => {\r\n                            const isLastPost = index === mobileLayout.length - 1;\r\n                            return <MobilePostCard ref={isLastPost ? lastPostElementRef : null} key={article.id} article={article} onCategoryClick={setSelectedCategory} layout={article.layout} categoriesMap={categoriesMap} />;\r\n                        })}\r\n                    </div>\r\n                    {loading && <div className=\"text-center p-4\">Loading...</div>}\r\n                    {!hasMore && mobileLayout.length > 0 && <div className=\"text-center p-4 text-gray-500\">You've reached the end.</div>}\r\n                    <div className=\"px-4 pb-4\"><div className=\"mt-8 pt-6 border-t border-gray-200\"><h3 className=\"text-xl font-bold text-gray-900 mb-4\">Market Movers</h3><div className=\"market-slider-container pb-6 -mx-2\"><style>{`.market-slider-container .slick-dots li button:before { font-size: 10px; color: #9ca3af; } .market-slider-container .slick-dots li.slick-active button:before { color: #0284c7; }`}</style><Slider {...marketSliderSettings}><div className=\"px-2\"><TopMoversCard title=\"Most Active\" fetchData={getMostActive} type=\"active\" /></div><div className=\"px-2\"><TopMoversCard title=\"Top Gainers\" fetchData={getTopGainers} type=\"gainer\" /></div><div className=\"px-2\"><TopMoversCard title=\"Top Losers\" fetchData={getTopLosers} type=\"loser\" /></div></Slider></div><div className=\"mt-8\"><IndexCharts /></div></div></div>\r\n                </div>\r\n            </section>\r\n        </>\r\n    );\r\n};\r\nexport default BlogPage;"],"names":["BlurHashCanvas","_ref","hash","width","height","punch","canvasRef","useRef","useEffect","current","pixels","decode","ctx","getContext","imageData","createImageData","data","set","putImageData","error","console","_jsx","ref","className","_ref2","baseName","alt","sizes","onLoad","eager","blurHash","isLoaded","setIsLoaded","useState","handleImageLoad","concat","style","aspectRatio","match","warn","cleanedBaseName","src","API_URL","srcSet","join","imageProps","fetchPriority","_jsxs","children","LazyLoadImage","_objectSpread","effect","afterLoad","DevelopmentNotice","ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Filler","ticker","chartTitle","chartData","setChartData","loading","setLoading","setError","async","response","getHistoricalData","timeSeries","dates","Object","keys","slice","reverse","prices","map","date","parseFloat","length","formattedDates","Date","toLocaleDateString","month","day","labels","datasets","label","borderColor","backgroundColor","context","gradient","chart","createLinearGradient","addColorStop","borderWidth","fill","tension","pointRadius","pointHoverRadius","pointBackgroundColor","message","err","fetchChartData","options","responsive","maintainAspectRatio","plugins","legend","display","title","text","font","size","weight","color","padding","top","bottom","tooltip","enabled","mode","intersect","callbacks","parsed","y","toFixed","scales","x","ticks","maxTicksLimit","grid","callback","value","drawBorder","Line","fetchData","type","setData","selectedStock","setSelectedStock","loadData","getRowColor","stock","change","changeAmount","onClick","price","changePercentage","MarketChart","categories","selectedCategory","setSelectedCategory","loadingCategories","isDropdownOpen","setIsDropdownOpen","allCategories","cat","name","xmlns","viewBox","fillRule","d","clipRule","formatNewsTimestamp","dateString","isNaN","getTime","toLocaleString","hour","minute","hour12","NewsListItem","link","source","publishedAt","href","target","rel","replace","NewsHighlights","highlights","setHighlights","getNewsHighlights","Array","isArray","fetchNews","item","id","DeeperDive","articles","setArticles","getArchivedNews","indices","symbol","IndexCharts","activeIndex","setActiveIndex","activeChart","index","i","includes","MarketMovers","TopMoversCard","getMostActive","getTopGainers","getTopLosers","categoryStyles","createSnippet","html","arguments","undefined","plainText","DOMPurify","sanitize","ALLOWED_TAGS","trimmed","substring","Math","min","lastIndexOf","formatDateTime","isNew","displayDate","dateObj","Intl","DateTimeFormat","year","format","PostCard","memo","forwardRef","_article$category","_article$thumbnails","article","onCategoryClick","categoriesMap","sliderRef","hasThumbnails","thumbnails","isStory","updatedAt","createdAt","categoryName","category","categoryClass","isFeatured","featured","totalSlides","landscapeSlidesToShow","landscapeSettings","dots","infinite","speed","slidesToShow","slidesToScroll","autoplay","autoplaySpeed","arrows","categorySlug","postLink","userFriendlySlug","urlArticleId","CardContent","Link","to","customSnippet","content","ThumbnailDisplay","firstThumb","Slider","thumb","ResponsiveAuthImage","imageUrl","altText","singleThumbnail","GridPostCard","_article$category2","_article$thumbnails2","BannerPostCard","_ref3","_article$category3","bannerSliderSettings","fade","pauseOnHover","e","preventDefault","MobilePostCard","_ref4","_article$category4","layout","isBannerLayout","CategoryFilter","_ref5","NavbarExtrasPortal","_ref6","mountNode","setMountNode","node","document","getElementById","innerHTML","createPortal","BlogPage","_latestPost$thumbnail","_latestPost$thumbnail2","posts","setPosts","page","setPage","hasMore","setHasMore","setCategories","setLoadingCategories","showMobileFilters","setShowMobileFilters","searchParams","useSearchParams","searchTerm","get","setCategoriesMap","isDataReady","setIsDataReady","observer","lastPostElementRef","useCallback","disconnect","IntersectionObserver","entries","isIntersecting","prevPage","observe","getPaginatedPosts","then","prevPosts","newPosts","existingIds","Set","p","uniqueNewPosts","filter","has","last","catch","getCategories","newCategoriesMap","reduce","acc","slug","finally","filteredPosts","useMemo","postsToFilter","_p$category","term","toLowerCase","sort","a","b","mobileLayout","post","desktopLayoutBlocks","blocks","currentDefaultBlock","multiColumnGroups","forEach","layoutStyle","startsWith","layoutGroupId","push","groupId","processedGroupIds","add","latestPost","latest","pageTitle","pageDescription","stroke","strokeWidth","strokeLinecap","strokeLinejoin","_Fragment","Helmet","property","SearchAutocomplete","block","blockIndex","isLastBlock","blockStyle","marginBottom","isLastPost","isLCP","columnCount","parseInt","split","gridClass","postIndex","FiX","FiFilter","BlogSidebar"],"sourceRoot":""}