{"version":3,"file":"static/js/540.8e525cd1.chunk.js","mappings":"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","sources":["components/AuthImage.js","components/ResponsiveAuthImage.js","components/DevelopmentNotice.js","components/market/MarketChart.js","components/market/TopMoversCard.js","components/BlogSidebar.js","components/NewsHighlights.js","components/DeeperDive.js","components/market/IndexCharts.js","components/market/MarketMovers.js","pages/BlogPage.js"],"sourcesContent":["import React from 'react';\r\n\r\n/**\r\n * --- REWRITTEN FOR PERFORMANCE & CORRECTNESS ---\r\n * This component is now a simple wrapper around the native <img> tag.\r\n * Since the image routes are public, we don't need complex authenticated fetching.\r\n * This change allows the browser to handle `src`, `srcSet`, and the `onLoad`\r\n * event natively, which is more performant and fixes the masonry layout.\r\n */\r\nconst AuthImage = ({ src, srcSet, alt, onLoad, ...props }) => {\r\n    // If there's no src, render a placeholder to avoid broken image icons.\r\n    if (!src) {\r\n        return <div className=\"w-full h-full bg-gray-200 animate-pulse\" {...props}></div>;\r\n    }\r\n\r\n    // Render the native img tag with all props passed down.\r\n    return (\r\n        <img\r\n            src={src}\r\n            srcSet={srcSet}\r\n            alt={alt}\r\n            onLoad={onLoad} // This will now fire correctly.\r\n            {...props}\r\n        />\r\n    );\r\n};\r\n\r\nexport default AuthImage;","import React from 'react';\r\nimport AuthImage from './AuthImage';\r\nimport { API_URL } from '../apiConfig'; // Import the base URL\r\n\r\n/**\r\n * This component constructs the full, responsive image URLs and passes them\r\n * to the simple AuthImage component for rendering.\r\n * --- MODIFIED FOR ROBUSTNESS ---\r\n * It now cleans the incoming `baseName` to handle inconsistent URL formats\r\n * from the database (e.g., full URLs, paths, or filenames with extensions).\r\n */\r\nconst ResponsiveAuthImage = ({ baseName, alt, className, sizes, onLoad }) => {\r\n    if (!baseName || typeof baseName !== 'string') {\r\n        return <div className={`bg-gray-200 ${className}`} />;\r\n    }\r\n\r\n    // --- NEW CLEANING LOGIC ---\r\n    // This regex finds a UUID, which is the core part of our image filenames.\r\n    // It handles cases where baseName might be a full URL, a path, or include extensions.\r\n    const uuidRegex = /([a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})/;\r\n    const match = baseName.match(uuidRegex);\r\n\r\n    // If no valid UUID is found in the string, we can't construct a URL.\r\n    if (!match) {\r\n        console.warn(`ResponsiveAuthImage: Could not extract a valid image ID from baseName: \"${baseName}\"`);\r\n        return <div className={`bg-gray-200 ${className}`} />;\r\n    }\r\n\r\n    const cleanedBaseName = match[0]; // The captured UUID\r\n    // --- END OF NEW LOGIC ---\r\n\r\n    // Construct the FULL URLs for the browser using the cleaned base name.\r\n    const src = `${API_URL}/api/uploads/${cleanedBaseName}-small.webp`;\r\n    \r\n    // --- FIXED: Construct the srcSet string on a single line to avoid whitespace issues. ---\r\n    const srcSet = [\r\n        `${API_URL}/api/uploads/${cleanedBaseName}-small.webp 300w`,\r\n        `${API_URL}/api/uploads/${cleanedBaseName}-medium.webp 600w`,\r\n        `${API_URL}/api/uploads/${cleanedBaseName}.webp 1200w`\r\n    ].join(', ');\r\n\r\n    return (\r\n        <AuthImage\r\n            src={src}\r\n            srcSet={srcSet}\r\n            sizes={sizes}\r\n            alt={alt}\r\n            className={className}\r\n            loading=\"lazy\"\r\n            onLoad={onLoad} // Pass the onLoad handler down to the <img> tag\r\n        />\r\n    );\r\n};\r\n\r\nexport default ResponsiveAuthImage;","const DevelopmentNotice = () => {\r\n    // This component now does nothing and renders nothing.\r\n    return null; \r\n};\r\n\r\nexport default DevelopmentNotice;","import React, { useState, useEffect } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler } from 'chart.js';\r\nimport { getHistoricalData } from '../../apiConfig';\r\n\r\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler);\r\n\r\nconst MarketChart = ({ ticker, chartTitle }) => {\r\n    const [chartData, setChartData] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (!ticker) return;\r\n\r\n        const fetchChartData = async () => {\r\n            setLoading(true);\r\n            setError(null);\r\n            // We do not reset chartData here to prevent flickering, the loading state handles it.\r\n            \r\n            try {\r\n                const response = await getHistoricalData(ticker);\r\n                const timeSeries = response.data ? response.data['Time Series (Daily)'] : null;\r\n                \r\n                if (timeSeries) {\r\n                    const dates = Object.keys(timeSeries).slice(0, 30).reverse();\r\n                    const prices = dates.map(date => parseFloat(timeSeries[date]['4. close']));\r\n\r\n                    if (dates.length === 0) {\r\n                        setError(`No historical data points found for ${ticker}.`);\r\n                        return;\r\n                    }\r\n\r\n                    const formattedDates = dates.map(date => new Date(date).toLocaleDateString('en-US', { month: 'short', day: 'numeric' }));\r\n\r\n                    setChartData({\r\n                        labels: formattedDates,\r\n                        datasets: [\r\n                            {\r\n                                label: `Price ($)`,\r\n                                data: prices,\r\n                                borderColor: 'rgb(59, 130, 246)',\r\n                                backgroundColor: (context) => {\r\n                                    const ctx = context.chart.ctx;\r\n                                    const gradient = ctx.createLinearGradient(0, 0, 0, 200);\r\n                                    gradient.addColorStop(0, 'rgba(59, 130, 246, 0.2)');\r\n                                    gradient.addColorStop(1, 'rgba(59, 130, 246, 0)');\r\n                                    return gradient;\r\n                                },\r\n                                borderWidth: 2,\r\n                                fill: true,\r\n                                tension: 0.4,\r\n                                pointRadius: 0,\r\n                                pointHoverRadius: 5,\r\n                                pointBackgroundColor: 'rgb(59, 130, 246)',\r\n                            },\r\n                        ],\r\n                    });\r\n                } else {\r\n                     setError(response.data.message || `Invalid data format received for ${ticker}.`);\r\n                }\r\n\r\n            } catch (err) {\r\n                if (err.response && err.response.data && err.response.data.message) {\r\n                    setError(err.response.data.message);\r\n                } else {\r\n                    setError('Could not connect to the API. It may be temporarily unavailable.');\r\n                }\r\n                console.error(\"Failed to fetch chart data:\", err);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchChartData();\r\n    }, [ticker]); // This dependency array is the key to correct caching behavior.\r\n\r\n    if (loading) {\r\n        return <div className=\"p-4 text-center text-slate-500 text-xs\">Loading Chart...</div>;\r\n    }\r\n    \r\n    if (error) {\r\n        return (\r\n            <div className=\"p-4 text-center\">\r\n                <p className=\"font-semibold text-sm text-gray-800\">{chartTitle || ticker}</p>\r\n                <div className=\"text-red-600 text-xs font-semibold mt-2 break-words\">{error}</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const options = {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        plugins: {\r\n            legend: { display: false },\r\n            title: {\r\n                display: true,\r\n                text: `${chartTitle || ticker} - Last 30 Days`,\r\n                font: { size: 16, weight: '600' },\r\n                color: '#1f2937',\r\n                padding: { top: 10, bottom: 20 }\r\n            },\r\n            tooltip: {\r\n                enabled: true,\r\n                mode: 'index',\r\n                intersect: false,\r\n                callbacks: {\r\n                    label: (context) => `Price: $${context.parsed.y.toFixed(2)}`\r\n                }\r\n            }\r\n        },\r\n        scales: {\r\n            x: {\r\n                display: true,\r\n                title: {\r\n                    display: false,\r\n                },\r\n                ticks: { \r\n                    display: true,\r\n                    font: { size: 10 },\r\n                    color: '#6b7280',\r\n                    maxTicksLimit: 6\r\n                },\r\n                grid: { display: false }\r\n            },\r\n            y: {\r\n                display: true,\r\n                title: {\r\n                    display: false,\r\n                },\r\n                ticks: {\r\n                    font: { size: 10 },\r\n                    color: '#6b7280',\r\n                    callback: (value) => `$${value.toFixed(0)}`\r\n                },\r\n                 grid: {\r\n                    color: '#e5e7eb',\r\n                    drawBorder: false,\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"p-4 w-full h-full\">\r\n            {chartData ? <Line options={options} data={chartData} /> : null}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MarketChart;","import React, { useState, useEffect } from 'react';\r\nimport MarketChart from './MarketChart';\r\n\r\nconst TopMoversCard = ({ title, fetchData, type }) => {\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [selectedStock, setSelectedStock] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const loadData = async () => {\r\n            try {\r\n                setLoading(true);\r\n                setError(null);\r\n                const response = await fetchData();\r\n                setData(response.data || []);\r\n            } catch (err) {\r\n                setError('Data could not be loaded.');\r\n                console.error(\"Failed to fetch top movers:\", err);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n        loadData();\r\n    }, [fetchData]);\r\n\r\n    const getRowColor = (stock) => {\r\n        const change = parseFloat(stock.changeAmount);\r\n        if (type === 'gainer' || (type === 'active' && change >= 0)) return 'text-green-600';\r\n        if (type === 'loser' || (type === 'active' && change < 0)) return 'text-red-600';\r\n        return 'text-gray-800';\r\n    };\r\n\r\n    const renderContent = () => {\r\n        if (loading) {\r\n            return <p className=\"p-2 text-xs text-gray-500 text-center\">Loading...</p>;\r\n        }\r\n        if (error) {\r\n            return <p className=\"p-2 text-xs text-red-500 break-words text-center\">{error}</p>;\r\n        }\r\n        return (\r\n            <div className=\"px-1\">\r\n                <table className=\"w-full\">\r\n                    <thead>\r\n                        <tr className=\"text-left text-gray-500 uppercase font-medium text-[10px]\">\r\n                            <th className=\"py-1 px-1 font-semibold\">Symbol</th>\r\n                            <th className=\"py-1 px-1 font-semibold text-right whitespace-nowrap\">Price</th>\r\n                            <th className=\"py-1 px-1 font-semibold text-right whitespace-nowrap\">Chg</th>\r\n                            <th className=\"py-1 px-1 font-semibold text-right whitespace-nowrap\">%Chg</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody className=\"divide-y divide-gray-100\">\r\n                        {data.slice(0, 5).map((stock) => (\r\n                            <tr\r\n                                key={stock.ticker}\r\n                                className=\"text-[11px] cursor-pointer hover:bg-gray-100\"\r\n                                onClick={() => setSelectedStock(stock.ticker)}\r\n                            >\r\n                                <td className=\"py-1 px-1 font-bold text-gray-700 truncate\">{stock.ticker}</td>\r\n                                <td className=\"py-1 px-1 text-right font-medium text-gray-700 whitespace-nowrap\">\r\n                                    ${parseFloat(stock.price).toFixed(2)}\r\n                                </td>\r\n                                <td className={`py-1 px-1 text-right font-bold whitespace-nowrap ${getRowColor(stock)}`}>\r\n                                    {parseFloat(stock.changeAmount) >= 0 ? '+' : ''}{parseFloat(stock.changeAmount).toFixed(2)}\r\n                                </td>\r\n                                <td className={`py-1 px-1 text-right font-bold whitespace-nowrap ${getRowColor(stock)}`}>\r\n                                    {stock.changePercentage}\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n                {selectedStock && <MarketChart ticker={selectedStock} />}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"bg-white border border-gray-200/90 shadow-sm\">\r\n            <h4 className=\"font-bold text-sm p-2 border-b border-gray-200/90 text-gray-800\">{title}</h4>\r\n            {renderContent()}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TopMoversCard;","import React, { useState } from 'react';\r\n\r\nconst BlogSidebar = ({ categories, selectedCategory, setSelectedCategory, loadingCategories }) => {\r\n    const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n\r\n    const allCategories = ['All', ...categories.map(cat => cat.name)];\r\n\r\n    return (\r\n        <aside className=\"lg:col-span-2 xl:col-span-2 order-1 lg:order-3 bg-white p-6 shadow-md mx-auto max-w-sm lg:max-w-none\">\r\n            <h1 className=\"text-3xl font-bold mb-2 text-gray-900\">Finance <span className=\"text-sky-600\">World</span></h1>\r\n            <p className=\"text-sm text-gray-500 mb-6\">Stay ahead with timely market developments.</p>\r\n            <div className=\"flex flex-col gap-y-6\">\r\n                <div>\r\n                    <h3 className=\"block text-sm font-medium text-gray-700 mb-2\">Categories</h3>\r\n                    {loadingCategories ? (\r\n                        <div className=\"space-y-2\">\r\n                            <div className=\"h-10 bg-gray-200 animate-pulse\"></div>\r\n                        </div>\r\n                    ) : (\r\n                        <div className=\"relative\">\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"w-full px-4 py-2 text-left bg-white border border-gray-300 shadow-sm focus:outline-none focus:ring-2 focus:ring-sky-500 focus:border-transparent transition-colors duration-200 hover:bg-gray-50 text-sm font-medium text-gray-700 flex justify-between items-center\"\r\n                                onClick={() => setIsDropdownOpen(!isDropdownOpen)}\r\n                            >\r\n                                {selectedCategory}\r\n                                <svg className={`h-5 w-5 transition-transform duration-200 ${isDropdownOpen ? 'rotate-180' : ''}`} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\">\r\n                                    <path fillRule=\"evenodd\" d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\r\n                                </svg>\r\n                            </button>\r\n                            {isDropdownOpen && (\r\n                                <div className=\"absolute z-10 mt-2 w-full origin-top-right bg-white shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none transition-all duration-100 ease-in-out\">\r\n                                    <div className=\"py-1\">\r\n                                        {allCategories.map(cat => (\r\n                                            <div\r\n                                                key={cat}\r\n                                                className=\"block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 cursor-pointer\"\r\n                                                onClick={() => {\r\n                                                    setSelectedCategory(cat);\r\n                                                    setIsDropdownOpen(false);\r\n                                                }}\r\n                                            >\r\n                                                {cat}\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </aside>\r\n    );\r\n};\r\n\r\nexport default BlogSidebar;","import React, { useState, useEffect } from 'react';\r\nimport { getNewsHighlights } from '../apiConfig';\r\n\r\n// Helper function to format the date and time\r\nconst formatNewsTimestamp = (dateString) => {\r\n    if (!dateString) return 'Date not available';\r\n    try {\r\n        const date = new Date(dateString);\r\n        if (isNaN(date.getTime())) {\r\n            return 'Invalid Date';\r\n        }\r\n        return date.toLocaleString('en-US', {\r\n            month: 'short',\r\n            day: 'numeric',\r\n            hour: 'numeric',\r\n            minute: '2-digit',\r\n            hour12: true\r\n        });\r\n    } catch (error) {\r\n        return 'Invalid Date';\r\n    }\r\n};\r\n\r\nexport const NewsListItem = ({ title, link, source, publishedAt }) => {\r\n    return (\r\n        <div className=\"py-2 border-b border-gray-200 last:border-b-0\">\r\n            <a\r\n                href={link}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                className=\"text-sm text-gray-800 hover:text-sky-600 transition-colors duration-200 leading-snug font-medium\"\r\n            >\r\n                {title}\r\n            </a>\r\n            <div className=\"text-xs text-gray-500 mt-1\">\r\n                <span className=\"font-semibold capitalize\">{source ? source.replace(/_/g, ' ') : 'News'}</span>\r\n                <span className=\"mx-1.5\">|</span>\r\n                <span>{formatNewsTimestamp(publishedAt)}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst NewsHighlights = () => {\r\n    const [highlights, setHighlights] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchNews = async () => {\r\n            try {\r\n                setLoading(true);\r\n                const response = await getNewsHighlights();\r\n                if (response && Array.isArray(response.data)) {\r\n                    setHighlights(response.data);\r\n                } else {\r\n                    setHighlights([]);\r\n                }\r\n                setError(null);\r\n            } catch (err) {\r\n                setError('Failed to load news highlights.');\r\n                console.error('Error fetching news highlights:', err);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchNews();\r\n    }, []);\r\n\r\n    if (loading || error || highlights.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div className=\"mb-6\">\r\n            <h3 className=\"text-base font-bold text-gray-800 pb-2 mb-2 border-b-2 border-gray-300\">\r\n                Recent Highlights\r\n            </h3>\r\n            <div>\r\n                {highlights.map((item) => (\r\n                    <NewsListItem\r\n                        key={item.id}\r\n                        title={item.title}\r\n                        link={item.link}\r\n                        source={item.source}\r\n                        publishedAt={item.publishedAt}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NewsHighlights;","import React, { useState, useEffect } from 'react';\r\nimport { getArchivedNews } from '../apiConfig';\r\nimport { NewsListItem } from './NewsHighlights'; // Re-using the list item component\r\n\r\nconst DeeperDive = () => {\r\n    const [articles, setArticles] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchNews = async () => {\r\n            try {\r\n                setLoading(true);\r\n                const response = await getArchivedNews();\r\n                if (response && Array.isArray(response.data)) {\r\n                    setArticles(response.data);\r\n                } else {\r\n                    setArticles([]);\r\n                }\r\n                setError(null);\r\n            } catch (err) {\r\n                setError('Failed to load archived news.');\r\n                console.error('Error fetching archived news:', err);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchNews();\r\n    }, []);\r\n\r\n    if (loading || error || articles.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div className=\"mt-6\">\r\n            <h3 className=\"text-base font-bold text-gray-800 pb-2 mb-2 border-b-2 border-gray-300\">\r\n                Deeper Dive\r\n            </h3>\r\n            <div>\r\n                {articles.map((item) => (\r\n                    <NewsListItem\r\n                        key={item.id}\r\n                        title={item.title}\r\n                        link={item.link}\r\n                        source={item.source}\r\n                        publishedAt={item.publishedAt}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DeeperDive;","import React, { useState } from 'react';\r\nimport MarketChart from './MarketChart';\r\n\r\n// Using the exact array from your working version\r\nconst indices = [\r\n    { symbol: '^GSPC', name: 'S&P 500' },\r\n    { symbol: '^DJI', name: 'Dow Jones Industrial Average' },\r\n    { symbol: '^IXIC', name: 'NASDAQ Composite' },\r\n];\r\n\r\nconst IndexCharts = () => {\r\n    const [activeIndex, setActiveIndex] = useState(0);\r\n\r\n    const activeChart = indices[activeIndex];\r\n\r\n    return (\r\n        <div className=\"bg-white border border-gray-200/90 shadow-sm rounded-md overflow-hidden\">\r\n            <div className=\"p-3 border-b border-gray-200/90\">\r\n                <h2 className=\"font-bold text-base text-gray-800\">US Indices</h2>\r\n                <div className=\"mt-2 flex items-center border border-gray-200 rounded-md p-0.5\">\r\n                    {indices.map((index, i) => (\r\n                        <button\r\n                            key={index.symbol}\r\n                            onClick={() => setActiveIndex(i)}\r\n                            // Display shorter names on tabs for better fit\r\n                            className={`flex-1 text-xs font-semibold py-1.5 px-2 transition-colors duration-200 rounded-sm ${\r\n                                activeIndex === i\r\n                                    ? 'bg-sky-600 text-white shadow'\r\n                                    : 'text-gray-600 hover:bg-gray-100'\r\n                            }`}\r\n                        >\r\n                            {index.name.includes('S&P') ? 'S&P 500' : index.name.includes('Dow Jones') ? 'Dow Jones' : 'NASDAQ'}\r\n                        </button>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            <div className=\"h-[250px] flex items-center justify-center\">\r\n                {activeChart && (\r\n                    <MarketChart\r\n                        // NOTE: The problematic 'key' prop has been removed.\r\n                        ticker={activeChart.symbol}\r\n                        chartTitle={activeChart.name}\r\n                    />\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default IndexCharts;","import React from 'react';\r\nimport TopMoversCard from './TopMoversCard';\r\nimport { getMostActive, getTopGainers, getTopLosers } from '../../apiConfig';\r\n\r\nconst MarketMovers = () => {\r\n    return (\r\n        <div className=\"space-y-4\">\r\n            <h2 className=\"font-bold text-xl border-b pb-2 pt-4\">Market Movers</h2>\r\n            <TopMoversCard title=\"Most Active\" fetchData={getMostActive} type=\"active\" />\r\n            <TopMoversCard title=\"Top Gainers\" fetchData={getTopGainers} type=\"gainer\" />\r\n            <TopMoversCard title=\"Top Losers\" fetchData={getTopLosers} type=\"loser\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MarketMovers;","import React, { useState, useEffect, useMemo, memo, useRef, useCallback, forwardRef } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport { Link, useSearchParams } from 'react-router-dom';\r\nimport { API_URL, getCategories, getPaginatedPosts, getTopGainers, getTopLosers, getMostActive } from '../apiConfig';\r\nimport DOMPurify from 'dompurify';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport { FiFilter, FiX } from 'react-icons/fi';\r\nimport ResponsiveAuthImage from '../components/ResponsiveAuthImage';\r\nimport DevelopmentNotice from '../components/DevelopmentNotice';\r\nimport TopMoversCard from '../components/market/TopMoversCard';\r\nimport BlogSidebar from '../components/BlogSidebar';\r\nimport NewsHighlights from '../components/NewsHighlights';\r\nimport DeeperDive from '../components/DeeperDive';\r\nimport IndexCharts from '../components/market/IndexCharts';\r\nimport MarketMovers from '../components/market/MarketMovers';\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport SearchAutocomplete from '../components/SearchAutocomplete';\r\n\r\n\r\nconst categoryStyles = { \"Stocks\": \"text-sky-700\", \"Crypto\": \"text-sky-700\", \"Trading\": \"text-sky-700\", \"News\": \"text-sky-700\", \"Default\": \"text-sky-700\" };\r\n\r\nconst createSnippet = (html, length = 155) => {\r\n    if (!html) return '';\r\n    const plainText = DOMPurify.sanitize(html, { ALLOWED_TAGS: [] });\r\n    if (plainText.length <= length) return plainText;\r\n    const trimmed = plainText.substring(0, length);\r\n    return trimmed.substring(0, Math.min(trimmed.length, trimmed.lastIndexOf(' '))) + '...';\r\n};\r\n\r\nconst formatDateTime = (dateString) => {\r\n    if (!dateString) return { isNew: false, displayDate: 'Date not available' };\r\n    const dateObj = new Date(dateString);\r\n    if (isNaN(dateObj)) return { isNew: false, displayDate: 'Date not available' };\r\n    const now = new Date();\r\n    const diffHours = (now - dateObj) / (1000 * 60 * 60);\r\n    const displayDate = new Intl.DateTimeFormat('en-US', { month: 'long', day: 'numeric', year: 'numeric' }).format(dateObj);\r\n    return { isNew: diffHours < 48, displayDate };\r\n};\r\n\r\nconst PostCard = memo(forwardRef(({ article, onCategoryClick, categoriesMap }, ref) => {\r\n    const sliderRef = useRef(null);\r\n    const hasThumbnails = article.thumbnails && article.thumbnails.length > 0;\r\n    const isStory = hasThumbnails && article.thumbnails.length > 1;\r\n    const { isNew } = formatDateTime(article.updatedAt || article.createdAt);\r\n    const displayDate = new Intl.DateTimeFormat('en-US', { month: 'long', day: 'numeric', year: 'numeric', hour: '2-digit', minute: '2-digit', hour12: true }).format(new Date(article.updatedAt || article.createdAt));\r\n    const categoryName = article.category?.name || 'Uncategorized';\r\n    const categoryClass = categoryStyles[categoryName] || categoryStyles[\"Default\"];\r\n    const isFeatured = article.featured;\r\n    const totalSlides = article.thumbnails?.length || 0;\r\n    const landscapeSlidesToShow = Math.min(totalSlides, 4);\r\n    const landscapeSettings = { dots: false, infinite: totalSlides > landscapeSlidesToShow, speed: 500, slidesToShow: landscapeSlidesToShow, slidesToScroll: 1, autoplay: true, autoplaySpeed: 3000, arrows: false };\r\n    \r\n    const categorySlug = categoriesMap[categoryName] || 'uncategorized';\r\n    // UPDATED LINK\r\n    const postLink = `/category/${categorySlug}/${article.userFriendlySlug}/${article.urlArticleId}`;\r\n\r\n    const CardContent = () => (<div className=\"p-3 flex flex-col flex-grow\"><div className=\"flex justify-between items-start text-xs mb-2\"><div className=\"flex items-center\"><button onClick={() => onCategoryClick(categoryName)} className={`font-bold uppercase tracking-wider ${categoryClass} hover:underline`}>{categoryName}</button><span className=\"text-gray-400 mx-2\">|</span><span className=\"text-gray-500 font-medium\">By Treishvaam Finance</span></div>{isNew && <span className=\"font-semibold text-red-500 flex-shrink-0\">NEW</span>}</div><h3 className=\"text-lg font-bold mb-2 text-gray-900 leading-tight break-words\"><Link to={postLink} className=\"hover:underline\">{article.title}</Link></h3><p className=\"text-sm text-gray-700 flex-grow break-words\">{createSnippet(article.customSnippet || article.content, 100)}</p><div className=\"mt-3 pt-3 border-t border-gray-100 flex items-center justify-between\"><div className=\"text-xs text-gray-500\"><span>{displayDate}</span></div><Link to={postLink} className=\"text-sm font-semibold text-sky-600 hover:text-sky-800 flex-shrink-0 ml-2\">Read More</Link></div></div>);\r\n    const ThumbnailDisplay = () => { if (!hasThumbnails) return null; if (isStory) { return (<Slider ref={sliderRef} {...landscapeSettings}>{article.thumbnails.map(thumb => (<div key={thumb.id} className=\"px-px\"><Link to={postLink} className=\"block bg-gray-100\"><ResponsiveAuthImage baseName={thumb.imageUrl} alt={thumb.altText || article.title} className=\"w-full object-contain max-h-40\" /></Link></div>))}</Slider>); } const singleThumbnail = article.thumbnails[0]; return (<Link to={postLink}><ResponsiveAuthImage baseName={singleThumbnail.imageUrl} alt={singleThumbnail.altText || article.title} className=\"w-full h-auto object-contain max-h-80 bg-gray-100\" /></Link>); };\r\n    return (<div ref={ref} className=\"break-inside-avoid bg-white border border-gray-200 mb-px relative flex flex-col\">{isFeatured && (<div className=\"absolute top-2 left-2 z-10\"><span className=\"bg-gradient-to-r from-yellow-400 to-pink-500 text-white text-xs font-bold px-3 py-1 rounded-full shadow-md uppercase tracking-wider\">Featured</span></div>)}<ThumbnailDisplay /><CardContent /></div>);\r\n}));\r\n\r\nconst GridPostCard = memo(forwardRef(({ article, onCategoryClick, categoriesMap }, ref) => {\r\n    const sliderRef = useRef(null);\r\n    const hasThumbnails = article.thumbnails && article.thumbnails.length > 0;\r\n    const isStory = hasThumbnails && article.thumbnails.length > 1;\r\n    const { isNew } = formatDateTime(article.updatedAt || article.createdAt);\r\n    const displayDate = new Intl.DateTimeFormat('en-US', { month: 'long', day: 'numeric', year: 'numeric', hour: '2-digit', minute: '2-digit', hour12: true }).format(new Date(article.updatedAt || article.createdAt));\r\n    const categoryName = article.category?.name || 'Uncategorized';\r\n    const categoryClass = categoryStyles[categoryName] || categoryStyles[\"Default\"];\r\n    const isFeatured = article.featured;\r\n    const totalSlides = article.thumbnails?.length || 0;\r\n    const landscapeSlidesToShow = Math.min(totalSlides, 4);\r\n    const landscapeSettings = { dots: false, infinite: totalSlides > landscapeSlidesToShow, speed: 500, slidesToShow: landscapeSlidesToShow, slidesToScroll: 1, autoplay: true, autoplaySpeed: 3000, arrows: false };\r\n    \r\n    const categorySlug = categoriesMap[categoryName] || 'uncategorized';\r\n    // UPDATED LINK\r\n    const postLink = `/category/${categorySlug}/${article.userFriendlySlug}/${article.urlArticleId}`;\r\n\r\n    const CardContent = () => (<div className=\"p-3 flex flex-col flex-grow\"><div className=\"flex justify-between items-start text-xs mb-2\"><div className=\"flex items-center\"><button onClick={() => onCategoryClick(categoryName)} className={`font-bold uppercase tracking-wider ${categoryClass} hover:underline`}>{categoryName}</button><span className=\"text-gray-400 mx-2\">|</span><span className=\"text-gray-500 font-medium\">By Treishvaam Finance</span></div>{isNew && <span className=\"font-semibold text-red-500 flex-shrink-0\">NEW</span>}</div><h3 className=\"text-lg font-bold mb-2 text-gray-900 leading-tight break-words\"><Link to={postLink} className=\"hover:underline\">{article.title}</Link></h3><p className=\"text-sm text-gray-700 flex-grow break-words\">{createSnippet(article.customSnippet || article.content, 100)}</p><div className=\"mt-3 pt-3 border-t border-gray-100 flex items-center justify-between\"><div className=\"text-xs text-gray-500\"><span>{displayDate}</span></div><Link to={postLink} className=\"text-sm font-semibold text-sky-600 hover:text-sky-800 flex-shrink-0 ml-2\">Read More</Link></div></div>);\r\n    const ThumbnailDisplay = () => { if (!hasThumbnails) return null; if (isStory) { return (<Slider ref={sliderRef} {...landscapeSettings}>{article.thumbnails.map(thumb => (<div key={thumb.id} className=\"px-px\"><Link to={postLink} className=\"block bg-gray-100\"><ResponsiveAuthImage baseName={thumb.imageUrl} alt={thumb.altText || article.title} className=\"w-full object-contain max-h-40\" /></Link></div>))}</Slider>); } const singleThumbnail = article.thumbnails[0]; return (<Link to={postLink}><ResponsiveAuthImage baseName={singleThumbnail.imageUrl} alt={singleThumbnail.altText || article.title} className=\"w-full h-auto object-contain max-h-80 bg-gray-100\" /></Link>); };\r\n    return (<div ref={ref} className=\"bg-white border border-gray-200 relative flex flex-col h-full\">{isFeatured && (<div className=\"absolute top-2 left-2 z-10\"><span className=\"bg-gradient-to-r from-yellow-400 to-pink-500 text-white text-xs font-bold px-3 py-1 rounded-full shadow-md uppercase tracking-wider\">Featured</span></div>)}<ThumbnailDisplay /><CardContent /></div>);\r\n}));\r\n\r\nconst BannerPostCard = memo(forwardRef(({ article, onCategoryClick, categoriesMap }, ref) => {\r\n    const sliderRef = useRef(null);\r\n    const hasThumbnails = article.thumbnails && article.thumbnails.length > 0;\r\n    const isStory = hasThumbnails && article.thumbnails.length > 1;\r\n    const { isNew, displayDate } = formatDateTime(article.updatedAt || article.createdAt);\r\n    const categoryName = article.category?.name || 'Uncategorized';\r\n    const bannerSliderSettings = { dots: false, fade: true, infinite: true, speed: 1000, slidesToShow: 1, slidesToScroll: 1, autoplay: true, autoplaySpeed: 4000, arrows: false, pauseOnHover: false };\r\n    \r\n    const categorySlug = categoriesMap[categoryName] || 'uncategorized';\r\n    // UPDATED LINK\r\n    const postLink = `/category/${categorySlug}/${article.userFriendlySlug}/${article.urlArticleId}`;\r\n\r\n    const ThumbnailDisplay = () => { if (!hasThumbnails) return null; if (isStory) { return (<Slider ref={sliderRef} {...bannerSliderSettings}>{article.thumbnails.map(thumb => (<div key={thumb.id}><ResponsiveAuthImage baseName={thumb.imageUrl} alt={thumb.altText || article.title} className=\"w-full h-full object-cover\" /></div>))}</Slider>); } return (<ResponsiveAuthImage baseName={article.thumbnails[0].imageUrl} alt={article.thumbnails[0].altText || article.title} className=\"w-full h-full object-cover\" />); };\r\n    return (<div ref={ref} className=\"block relative bg-black text-white overflow-hidden border border-gray-200 group\"><div className=\"absolute inset-0\"><ThumbnailDisplay /></div><div className=\"absolute inset-0 bg-gradient-to-t from-black via-black/70 to-transparent group-hover:via-black/80 transition-all duration-300\"></div><Link to={postLink} className=\"relative p-8 flex flex-col justify-end min-h-[400px] z-10\"><div className=\"flex justify-between items-center text-sm mb-2\"><div className=\"flex items-center gap-3\"><span onClick={(e) => { e.preventDefault(); onCategoryClick(categoryName); }} className=\"font-bold uppercase tracking-wider text-sky-300 hover:underline cursor-pointer\">{categoryName}</span><span className=\"text-gray-400\">|</span><span className=\"text-gray-300\">{displayDate}</span></div>{isNew && <span className=\"font-semibold text-red-500 bg-white/20 px-2 py-1 rounded-full text-xs\">NEW</span>}</div><h2 className=\"text-3xl md:text-4xl font-bold my-2 leading-tight text-white group-hover:text-sky-200 transition-colors duration-300\">{article.title}</h2><p className=\"text-gray-200 text-base mt-2 max-w-2xl hidden md:block\">{createSnippet(article.customSnippet || article.content, 150)}</p><div className=\"text-xs text-gray-400 mt-4\">By Treishvaam Finance</div></Link></div>);\r\n}));\r\n\r\nconst MobilePostCard = memo(forwardRef(({ article, onCategoryClick, layout, categoriesMap }, ref) => {\r\n    const sliderRef = useRef(null);\r\n    const hasThumbnails = article.thumbnails && article.thumbnails.length > 0;\r\n    const isStory = hasThumbnails && article.thumbnails.length > 1;\r\n    const { isNew, displayDate } = formatDateTime(article.updatedAt || article.createdAt);\r\n    const categoryName = article.category?.name || 'Uncategorized';\r\n    const categoryClass = categoryStyles[categoryName] || categoryStyles[\"Default\"];\r\n    const isFeatured = article.featured;\r\n    const isBannerLayout = layout === 'banner';\r\n    const titleClass = \"text-sm font-bold text-gray-900 leading-tight\";\r\n    const sliderSettings = { dots: false, infinite: true, speed: 500, slidesToShow: 1, slidesToScroll: 1, autoplay: true, autoplaySpeed: 3500, arrows: false };\r\n    \r\n    const categorySlug = categoriesMap[categoryName] || 'uncategorized';\r\n    // UPDATED LINK\r\n    const postLink = `/category/${categorySlug}/${article.userFriendlySlug}/${article.urlArticleId}`;\r\n\r\n    return (<div ref={ref} className={`bg-white shadow-sm flex flex-col relative ${isBannerLayout ? 'col-span-2' : 'col-span-1'}`}>{isFeatured && (<div className=\"absolute top-2 left-2 z-10\"><span className=\"bg-gradient-to-r from-yellow-400 to-pink-500 text-white text-xs font-bold px-2 py-1 shadow-md uppercase tracking-wider\">Featured</span></div>)}{hasThumbnails && (isStory ? (<Slider ref={sliderRef} {...sliderSettings}>{article.thumbnails.map(thumb => (<div key={thumb.id}><Link to={postLink}><ResponsiveAuthImage baseName={thumb.imageUrl} alt={thumb.altText || article.title} className=\"w-full object-cover bg-gray-100 aspect-video\" /></Link></div>))}</Slider>) : (<Link to={postLink}><ResponsiveAuthImage baseName={article.thumbnails[0].imageUrl} alt={article.thumbnails[0].altText || article.title} className={`w-full object-cover bg-gray-100 ${isBannerLayout ? 'aspect-video' : 'aspect-square'}`} /></Link>))}<div className=\"p-3 flex flex-col flex-grow\"><div className=\"flex items-center justify-between text-xs mb-2\"><div className=\"flex items-center flex-wrap\"><button onClick={() => onCategoryClick(categoryName)} className={`font-bold uppercase tracking-wider ${categoryClass} hover:underline`}>{categoryName}</button><span className=\"text-gray-400 mx-2\">|</span><span className=\"text-gray-500 font-medium\">By Treishvaam Finance</span></div>{isNew && <span className=\"font-semibold text-red-500 flex-shrink-0 ml-2\">NEW</span>}</div><h3 className={titleClass}><Link to={postLink} className=\"hover:underline\">{article.title}</Link></h3><div className=\"mt-auto pt-2 text-xs text-gray-500\"><span>{displayDate}</span></div></div></div>);\r\n}));\r\n\r\n\r\nconst CategoryFilter = ({ categories, selectedCategory, setSelectedCategory, loadingCategories }) => {\r\n    const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n    const allCategories = ['All', ...categories.map(cat => cat.name)];\r\n\r\n    if (loadingCategories) {\r\n        return <div className=\"h-10 w-48 bg-gray-200 animate-pulse rounded-md\"></div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"relative\">\r\n            <button\r\n                type=\"button\"\r\n                className=\"w-48 px-4 py-2 text-left bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-sky-500 focus:border-transparent transition-colors duration-200 hover:bg-gray-50 text-sm font-medium text-gray-700 flex justify-between items-center\"\r\n                onClick={() => setIsDropdownOpen(!isDropdownOpen)}\r\n            >\r\n                {selectedCategory}\r\n                <svg className={`h-5 w-5 transition-transform duration-200 ${isDropdownOpen ? 'rotate-180' : ''}`} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\">\r\n                    <path fillRule=\"evenodd\" d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\r\n                </svg>\r\n            </button>\r\n            {isDropdownOpen && (\r\n                <div className=\"absolute z-20 mt-2 w-full origin-top-right bg-white rounded-md shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none transition-all duration-100 ease-in-out\">\r\n                    <div className=\"py-1\">\r\n                        {allCategories.map(cat => (\r\n                            <div\r\n                                key={cat}\r\n                                className=\"block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 cursor-pointer\"\r\n                                onClick={() => {\r\n                                    setSelectedCategory(cat);\r\n                                    setIsDropdownOpen(false);\r\n                                }}\r\n                            >\r\n                                {cat}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nconst NavbarExtrasPortal = ({ children }) => {\r\n    const [mountNode, setMountNode] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const node = document.getElementById('navbar-extras-portal-target');\r\n        setMountNode(node);\r\n        return () => {\r\n            if (node) {\r\n                node.innerHTML = '';\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    return mountNode ? createPortal(children, mountNode) : null;\r\n};\r\n\r\n\r\nconst BlogPage = () => {\r\n    const [posts, setPosts] = useState([]);\r\n    const [page, setPage] = useState(0);\r\n    const [hasMore, setHasMore] = useState(true);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState('');\r\n    const [categories, setCategories] = useState([]);\r\n    const [loadingCategories, setLoadingCategories] = useState(true);\r\n    const [selectedCategory, setSelectedCategory] = useState(\"All\");\r\n    const [showMobileFilters, setShowMobileFilters] = useState(false);\r\n    const [imageOrientations, setImageOrientations] = useState({});\r\n    const [orientationsLoading, setOrientationsLoading] = useState(true);\r\n    const [searchParams] = useSearchParams();\r\n    const searchTerm = searchParams.get('q') || \"\";\r\n    const [categoriesMap, setCategoriesMap] = useState({});\r\n    \r\n    const [isDataReady, setIsDataReady] = useState(false);\r\n\r\n    const observer = useRef();\r\n    const lastPostElementRef = useCallback(node => {\r\n        if (loading) return;\r\n        if (observer.current) observer.current.disconnect();\r\n        observer.current = new IntersectionObserver(entries => {\r\n            if (entries[0].isIntersecting && hasMore) {\r\n                setPage(prevPage => prevPage + 1);\r\n            }\r\n        });\r\n        if (node) observer.current.observe(node);\r\n    }, [loading, hasMore]);\r\n\r\n    useEffect(() => {\r\n        setPosts([]);\r\n        setPage(0);\r\n        setHasMore(true);\r\n    }, [selectedCategory, searchTerm]);\r\n\r\n    useEffect(() => {\r\n        if (!isDataReady) return;\r\n\r\n        setLoading(true);\r\n        setError('');\r\n        getPaginatedPosts(page, 9).then(response => {\r\n            setPosts(prevPosts => {\r\n                const newPosts = response.data.content;\r\n                const existingIds = new Set(prevPosts.map(p => p.id));\r\n                const uniqueNewPosts = newPosts.filter(p => !existingIds.has(p.id));\r\n                return page === 0 ? newPosts : [...prevPosts, ...uniqueNewPosts];\r\n            });\r\n            setHasMore(!response.data.last);\r\n            setLoading(false);\r\n        }).catch(err => {\r\n            setError('Failed to fetch blog posts.');\r\n            setLoading(false);\r\n        });\r\n    }, [page, selectedCategory, searchTerm, isDataReady]);\r\n\r\n    useEffect(() => {\r\n        getCategories().then(response => {\r\n            setCategories(response.data);\r\n            const newCategoriesMap = response.data.reduce((acc, cat) => {\r\n                acc[cat.name] = cat.slug;\r\n                return acc;\r\n            }, {});\r\n            setCategoriesMap(newCategoriesMap);\r\n        }).catch(err => console.error(\"Failed to fetch categories:\", err))\r\n        .finally(() => {\r\n            setLoadingCategories(false);\r\n            setIsDataReady(true);\r\n        });\r\n    }, []);\r\n\r\n    const filteredPosts = useMemo(() => {\r\n        let postsToFilter = posts;\r\n        if (selectedCategory !== \"All\") {\r\n            postsToFilter = postsToFilter.filter(p => p.category?.name === selectedCategory);\r\n        }\r\n        if (searchTerm) {\r\n            const term = searchTerm.toLowerCase();\r\n            postsToFilter = postsToFilter.filter(p => p.title.toLowerCase().includes(term));\r\n        }\r\n        return postsToFilter.sort((a, b) => new Date(b.updatedAt || b.createdAt) - new Date(a.updatedAt || a.createdAt));\r\n    }, [posts, selectedCategory, searchTerm]);\r\n\r\n    useEffect(() => {\r\n        if (filteredPosts.length === 0) { setOrientationsLoading(false); return; }\r\n        setOrientationsLoading(true);\r\n        const checkOrientations = async () => {\r\n            const orientations = {};\r\n            const promises = filteredPosts.map(post => { if (post.thumbnails && post.thumbnails.length > 0) { return new Promise(resolve => { const img = new Image(); img.src = `${API_URL}/api/uploads/${post.thumbnails[0].imageUrl}.webp`; img.onload = () => { orientations[post.thumbnails[0].id] = img.naturalWidth >= img.naturalHeight ? 'landscape' : 'portrait'; resolve(); }; img.onerror = () => { orientations[post.thumbnails[0].id] = 'landscape'; resolve(); }; }); } return Promise.resolve(); });\r\n            await Promise.all(promises);\r\n            setImageOrientations(orientations);\r\n            setOrientationsLoading(false);\r\n        };\r\n        checkOrientations();\r\n    }, [filteredPosts]);\r\n    \r\n    const mobileLayout = useMemo(() => {\r\n        const layout = []; let i = 0;\r\n        while (i < filteredPosts.length) {\r\n            const post1 = filteredPosts[i]; const isPost1Story = post1.thumbnails && post1.thumbnails.length > 1; const post1ThumbnailId = post1.thumbnails?.[0]?.id; const isPost1Landscape = post1ThumbnailId ? imageOrientations[post1ThumbnailId] === 'landscape' : true;\r\n            if (isPost1Story && isPost1Landscape) { layout.push({ ...post1, layout: 'banner' }); i++; } else {\r\n                layout.push({ ...post1, layout: 'grid' }); const post2 = filteredPosts[i + 1];\r\n                if (post2) { const isPost2Story = post2.thumbnails && post2.thumbnails.length > 1; const post2ThumbnailId = post2.thumbnails?.[0]?.id; const isPost2Landscape = post2ThumbnailId ? imageOrientations[post2ThumbnailId] === 'landscape' : true; if (!isPost2Story || !isPost2Landscape) { layout.push({ ...post2, layout: 'grid' }); i += 2; } else { i++; } } else { i++; }\r\n            }\r\n        } return layout;\r\n    }, [filteredPosts, imageOrientations]);\r\n\r\n    const desktopLayoutBlocks = useMemo(() => {\r\n        if (filteredPosts.length === 0) return [];\r\n        const blocks = []; let currentDefaultBlock = []; const multiColumnGroups = {};\r\n        filteredPosts.forEach(post => { if (post.layoutStyle && post.layoutStyle.startsWith('MULTI_COLUMN') && post.layoutGroupId) { if (!multiColumnGroups[post.layoutGroupId]) { multiColumnGroups[post.layoutGroupId] = { type: post.layoutStyle, posts: [] }; } multiColumnGroups[post.layoutGroupId].posts.push(post); } });\r\n        for (const groupId in multiColumnGroups) { multiColumnGroups[groupId].posts.sort((a, b) => new Date(b.updatedAt || b.createdAt) - new Date(a.updatedAt || a.createdAt)); }\r\n        const processedGroupIds = new Set();\r\n        filteredPosts.forEach(post => {\r\n            const style = post.layoutStyle || 'DEFAULT';\r\n            if (style === 'BANNER') { if (currentDefaultBlock.length > 0) { blocks.push({ id: `default-${blocks.length}`, type: 'DEFAULT', posts: currentDefaultBlock }); currentDefaultBlock = []; } blocks.push({ id: `banner-${post.id}`, type: 'BANNER', posts: [post] }); } else if (style.startsWith('MULTI_COLUMN') && post.layoutGroupId) { if (processedGroupIds.has(post.layoutGroupId)) return; if (currentDefaultBlock.length > 0) { blocks.push({ id: `default-${blocks.length}`, type: 'DEFAULT', posts: currentDefaultBlock }); currentDefaultBlock = []; } blocks.push({ id: post.layoutGroupId, ...multiColumnGroups[post.layoutGroupId] }); processedGroupIds.add(post.layoutGroupId); } else { currentDefaultBlock.push(post); }\r\n        });\r\n        if (currentDefaultBlock.length > 0) { blocks.push({ id: `default-${blocks.length}`, type: 'DEFAULT', posts: currentDefaultBlock }); }\r\n        return blocks;\r\n    }, [filteredPosts]);\r\n\r\n    const latestPost = useMemo(() => { if (!posts || posts.length === 0) return null; return posts.reduce((latest, current) => new Date(current.updatedAt || current.createdAt) > new Date(latest.updatedAt || latest.createdAt) ? current : latest); }, [posts]);\r\n    const pageTitle = latestPost ? `Treishvaam Finance · ${latestPost.title}` : `Treishvaam Finance | Financial News & Analysis`;\r\n    const pageDescription = latestPost ? createSnippet(latestPost.content) : \"Your trusted source for financial news and analysis.\";\r\n    const imageUrl = latestPost?.thumbnails?.[0]?.imageUrl ? `${API_URL}/api/uploads/${latestPost.thumbnails[0].imageUrl}.webp` : \"/logo512.png\";\r\n    const marketSliderSettings = { dots: true, infinite: true, speed: 500, slidesToShow: 1, slidesToScroll: 1, arrows: false };\r\n\r\n    const renderDesktopLayout = () => {\r\n        if (desktopLayoutBlocks.length === 0 && !loading && page === 0) { return <div className=\"text-center p-10 col-span-full\"><p>No posts found for your criteria.</p></div>; }\r\n        return desktopLayoutBlocks.map((block, blockIndex) => {\r\n            const isLastBlock = blockIndex === desktopLayoutBlocks.length - 1;\r\n            const blockStyle = { marginBottom: '2rem' };\r\n            if (block.type === 'BANNER') {\r\n                const isLastPost = isLastBlock && block.posts.length === 1;\r\n                return <BannerPostCard ref={isLastPost ? lastPostElementRef : null} key={block.id} article={block.posts[0]} onCategoryClick={setSelectedCategory} categoriesMap={categoriesMap} />;\r\n            }\r\n            if (block.type.startsWith('MULTI_COLUMN')) {\r\n                const columnCount = parseInt(block.type.split('_')[2]) || 2;\r\n                const gridClass = `grid grid-cols-1 md:grid-cols-${columnCount} gap-px`;\r\n                return (<div style={blockStyle} key={block.id} className={gridClass}>{block.posts.map((article, postIndex) => { const isLastPost = isLastBlock && postIndex === block.posts.length - 1; return <GridPostCard ref={isLastPost ? lastPostElementRef : null} key={article.id} article={article} onCategoryClick={setSelectedCategory} categoriesMap={categoriesMap} />; })}</div>);\r\n            }\r\n            if (block.type === 'DEFAULT') {\r\n                return (<div style={blockStyle} key={block.id} className=\"sm:columns-2 md:columns-3 lg:columns-4 gap-px\">{block.posts.map((article, postIndex) => { const isLastPost = isLastBlock && postIndex === block.posts.length - 1; return <PostCard ref={isLastPost ? lastPostElementRef : null} key={article.id} article={article} onCategoryClick={setSelectedCategory} categoriesMap={categoriesMap} />; })}</div>);\r\n            }\r\n            return null;\r\n        });\r\n    };\r\n\r\n    if (page === 0 && loading) return <div className=\"text-center p-10\">Loading posts...</div>;\r\n    if (error) return (<div className=\"flex flex-col items-center justify-center min-h-[60vh] text-center p-6 bg-gray-50\"><div className=\"text-red-400 mb-4\"><svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-16 w-16\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth={1}><path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\" /></svg></div><h2 className=\"text-2xl font-semibold text-gray-800 mb-2\">Site is Currently Under Maintenance</h2><p className=\"max-w-md text-gray-600\">We are performing essential updates to improve your experience. We apologize for any inconvenience and appreciate your patience. Please check back again shortly.</p></div>);\r\n\r\n    return (\r\n        <>\r\n            <DevelopmentNotice />\r\n            <Helmet>\r\n                <title>{pageTitle}</title>\r\n                <meta name=\"description\" content={pageDescription} />\r\n                <link rel=\"canonical\" href=\"https://treishfin.treishvaamgroup.com/\" />\r\n                <meta property=\"og:title\" content={pageTitle} />\r\n                <meta property=\"og:description\" content={pageDescription} />\r\n                <meta property=\"og:image\" content={imageUrl} />\r\n            </Helmet>\r\n            \r\n            <NavbarExtrasPortal>\r\n                <div className=\"w-64\">\r\n                    <SearchAutocomplete />\r\n                </div>\r\n                <CategoryFilter\r\n                    categories={categories}\r\n                    selectedCategory={selectedCategory}\r\n                    setSelectedCategory={setSelectedCategory}\r\n                    loadingCategories={loadingCategories}\r\n                />\r\n                <h1 className=\"text-xl font-bold text-gray-900 hidden lg:block\">Finance <span className=\"text-sky-600\">World</span></h1>\r\n            </NavbarExtrasPortal>\r\n\r\n            <section className=\"bg-gray-50\">\r\n                <div className=\"hidden sm:grid grid-cols-1 lg:grid-cols-12 gap-2\">\r\n                    <aside className=\"lg:col-span-2 order-1 py-6\"><div className=\"space-y-4\"><NewsHighlights /><DeeperDive /></div></aside>\r\n                    <main className=\"lg:col-span-8 order-2 min-h-screen py-6 bg-white\">{renderDesktopLayout()}{loading && <div className=\"text-center p-10 col-span-full\">Loading more posts...</div>}{!hasMore && filteredPosts.length > 0 && <div className=\"text-center p-10 col-span-full text-gray-500\">You've reached the end.</div>}</main>\r\n                    <aside className=\"lg:col-span-2 order-3 py-6\"><div className=\"space-y-6\"><IndexCharts /><MarketMovers /></div></aside>\r\n                </div>\r\n                <div className=\"sm:hidden\">\r\n                    <div className=\"px-4 py-4\"><div className=\"border-b border-gray-200 mb-4\"><button onClick={() => setShowMobileFilters(!showMobileFilters)} className=\"w-full flex justify-between items-center py-3 text-lg font-semibold text-gray-800\">{showMobileFilters ? 'Hide Filters' : 'Filters & Categories'}{showMobileFilters ? <FiX /> : <FiFilter />}</button>{showMobileFilters && (<div className=\"py-4\"><BlogSidebar categories={categories} selectedCategory={setSelectedCategory} setSelectedCategory={setSelectedCategory} loadingCategories={loadingCategories} /></div>)}</div></div>\r\n                    <div className=\"px-4\"><NewsHighlights /></div>\r\n                    {orientationsLoading ? (<div className=\"text-center p-10\">Loading Layout...</div>) : (mobileLayout.length > 0 ? (<div className=\"grid grid-cols-2 gap-2 p-2\">{mobileLayout.map((article, index) => { const isLastPost = index === mobileLayout.length - 1; return <MobilePostCard ref={isLastPost ? lastPostElementRef : null} key={article.id} article={article} onCategoryClick={setSelectedCategory} layout={article.layout} categoriesMap={categoriesMap} />; })}</div>) : (<div className=\"text-center py-10 px-4\"><p>No posts found for your criteria.</p></div>))}\r\n                    {loading && <div className=\"text-center p-4\">Loading...</div>}\r\n                    {!hasMore && mobileLayout.length > 0 && <div className=\"text-center p-4 text-gray-500\">You've reached the end.</div>}\r\n                    <div className=\"px-4 pb-4\"><div className=\"mt-8 pt-6 border-t border-gray-200\"><h3 className=\"text-xl font-bold text-gray-900 mb-4\">Market Movers</h3><div className=\"market-slider-container pb-6 -mx-2\"><style>{`.market-slider-container .slick-dots li button:before { font-size: 10px; color: #9ca3af; } .market-slider-container .slick-dots li.slick-active button:before { color: #0284c7; }`}</style><Slider {...marketSliderSettings}><div className=\"px-2\"><TopMoversCard title=\"Most Active\" fetchData={getMostActive} type=\"active\" /></div><div className=\"px-2\"><TopMoversCard title=\"Top Gainers\" fetchData={getTopGainers} type=\"gainer\" /></div><div className=\"px-2\"><TopMoversCard title=\"Top Losers\" fetchData={getTopLosers} type=\"loser\" /></div></Slider></div><div className=\"mt-8\"><IndexCharts /></div></div></div>\r\n                </div>\r\n            </section>\r\n        </>\r\n    );\r\n};\r\nexport default BlogPage;"],"names":["_ref","src","srcSet","alt","onLoad","props","_objectWithoutProperties","_excluded","_jsx","_objectSpread","className","baseName","sizes","concat","match","console","warn","cleanedBaseName","API_URL","join","AuthImage","loading","DevelopmentNotice","ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Filler","ticker","chartTitle","chartData","setChartData","useState","setLoading","error","setError","useEffect","async","response","getHistoricalData","timeSeries","data","dates","Object","keys","slice","reverse","prices","map","date","parseFloat","length","formattedDates","Date","toLocaleDateString","month","day","labels","datasets","label","borderColor","backgroundColor","context","gradient","chart","ctx","createLinearGradient","addColorStop","borderWidth","fill","tension","pointRadius","pointHoverRadius","pointBackgroundColor","message","err","fetchChartData","children","_jsxs","options","responsive","maintainAspectRatio","plugins","legend","display","title","text","font","size","weight","color","padding","top","bottom","tooltip","enabled","mode","intersect","callbacks","parsed","y","toFixed","scales","x","ticks","maxTicksLimit","grid","callback","value","drawBorder","Line","fetchData","type","setData","selectedStock","setSelectedStock","loadData","getRowColor","stock","change","changeAmount","onClick","price","changePercentage","MarketChart","categories","selectedCategory","setSelectedCategory","loadingCategories","isDropdownOpen","setIsDropdownOpen","allCategories","cat","name","xmlns","viewBox","fillRule","d","clipRule","formatNewsTimestamp","dateString","isNaN","getTime","toLocaleString","hour","minute","hour12","NewsListItem","link","source","publishedAt","href","target","rel","replace","NewsHighlights","highlights","setHighlights","getNewsHighlights","Array","isArray","fetchNews","item","id","DeeperDive","articles","setArticles","getArchivedNews","indices","symbol","IndexCharts","activeIndex","setActiveIndex","activeChart","index","i","includes","MarketMovers","TopMoversCard","getMostActive","getTopGainers","getTopLosers","categoryStyles","createSnippet","html","arguments","undefined","plainText","DOMPurify","sanitize","ALLOWED_TAGS","trimmed","substring","Math","min","lastIndexOf","formatDateTime","isNew","displayDate","dateObj","Intl","DateTimeFormat","year","format","PostCard","memo","forwardRef","ref","_article$category","_article$thumbnails","article","onCategoryClick","categoriesMap","sliderRef","useRef","hasThumbnails","thumbnails","isStory","updatedAt","createdAt","categoryName","category","categoryClass","isFeatured","featured","totalSlides","landscapeSlidesToShow","landscapeSettings","dots","infinite","speed","slidesToShow","slidesToScroll","autoplay","autoplaySpeed","arrows","categorySlug","postLink","userFriendlySlug","urlArticleId","CardContent","Link","to","customSnippet","content","ThumbnailDisplay","Slider","thumb","ResponsiveAuthImage","imageUrl","altText","singleThumbnail","GridPostCard","_ref2","_article$category2","_article$thumbnails2","BannerPostCard","_ref3","_article$category3","bannerSliderSettings","fade","pauseOnHover","e","preventDefault","MobilePostCard","_ref4","_article$category4","layout","isBannerLayout","CategoryFilter","_ref5","NavbarExtrasPortal","_ref6","mountNode","setMountNode","node","document","getElementById","innerHTML","createPortal","BlogPage","_latestPost$thumbnail","_latestPost$thumbnail2","posts","setPosts","page","setPage","hasMore","setHasMore","setCategories","setLoadingCategories","showMobileFilters","setShowMobileFilters","imageOrientations","setImageOrientations","orientationsLoading","setOrientationsLoading","searchParams","useSearchParams","searchTerm","get","setCategoriesMap","isDataReady","setIsDataReady","observer","lastPostElementRef","useCallback","current","disconnect","IntersectionObserver","entries","isIntersecting","prevPage","observe","getPaginatedPosts","then","prevPosts","newPosts","existingIds","Set","p","uniqueNewPosts","filter","has","last","catch","getCategories","newCategoriesMap","reduce","acc","slug","finally","filteredPosts","useMemo","postsToFilter","_p$category","term","toLowerCase","sort","a","b","orientations","promises","post","Promise","resolve","img","Image","onload","naturalWidth","naturalHeight","onerror","all","checkOrientations","mobileLayout","_post1$thumbnails","_post1$thumbnails$","post1","isPost1Story","post1ThumbnailId","isPost1Landscape","push","post2","_post2$thumbnails","_post2$thumbnails$","isPost2Story","post2ThumbnailId","isPost2Landscape","desktopLayoutBlocks","blocks","currentDefaultBlock","multiColumnGroups","forEach","layoutStyle","startsWith","layoutGroupId","groupId","processedGroupIds","style","add","latestPost","latest","pageTitle","pageDescription","stroke","strokeWidth","strokeLinecap","strokeLinejoin","_Fragment","Helmet","property","SearchAutocomplete","block","blockIndex","isLastBlock","blockStyle","marginBottom","isLastPost","columnCount","parseInt","split","gridClass","postIndex","FiX","FiFilter","BlogSidebar"],"sourceRoot":""}