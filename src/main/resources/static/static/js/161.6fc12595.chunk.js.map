{"version":3,"file":"static/js/161.6fc12595.chunk.js","mappings":"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","sources":["components/ResponsiveAuthImage.js","components/ShareModal.js","pages/ManagePostsPage.js"],"sourcesContent":["import React from 'react';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport 'react-lazy-load-image-component/src/effects/blur.css';\r\nimport { API_URL } from '../apiConfig';\r\n\r\nconst ResponsiveAuthImage = ({ baseName, alt, className, sizes, onLoad }) => {\r\n    // Render a simple placeholder if baseName is invalid.\r\n    if (!baseName || typeof baseName !== 'string') {\r\n        return <div className={`bg-gray-200 ${className}`} />;\r\n    }\r\n\r\n    const uuidRegex = /([a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})/;\r\n    const match = baseName.match(uuidRegex);\r\n\r\n    if (!match) {\r\n        console.warn(`ResponsiveAuthImage: Could not extract a valid image ID from baseName: \"${baseName}\"`);\r\n        return <div className={`bg-gray-200 ${className}`} />;\r\n    }\r\n\r\n    const cleanedBaseName = match[0];\r\n\r\n    // Construct image URLs\r\n    const src = `${API_URL}/api/uploads/${cleanedBaseName}-small.webp`;\r\n    const placeholderSrc = `${API_URL}/api/uploads/${cleanedBaseName}-tiny.webp`; // New tiny version for the blur effect\r\n    const srcSet = [\r\n        `${API_URL}/api/uploads/${cleanedBaseName}-small.webp 300w`,\r\n        `${API_URL}/api/uploads/${cleanedBaseName}-medium.webp 600w`,\r\n        `${API_URL}/api/uploads/${cleanedBaseName}.webp 1200w`\r\n    ].join(', ');\r\n\r\n    return (\r\n        <LazyLoadImage\r\n            alt={alt}\r\n            src={src}\r\n            srcSet={srcSet}\r\n            sizes={sizes}\r\n            placeholderSrc={placeholderSrc}\r\n            effect=\"blur\"\r\n            className={className}\r\n            afterLoad={onLoad} // Use afterLoad for the library's load event\r\n        />\r\n    );\r\n};\r\n\r\nexport default ResponsiveAuthImage;","import React, { useState } from 'react';\r\n\r\nconst ShareModal = ({ post, onShare, onClose }) => {\r\n    const [message, setMessage] = useState('');\r\n    const [tags, setTags] = useState('');\r\n\r\n    const handleShareClick = () => {\r\n        onShare({\r\n            postId: post.id,\r\n            message,\r\n            tags: tags.split(',').map(tag => tag.trim()).filter(Boolean)\r\n        });\r\n    };\r\n    \r\n    const pageUrl = `https://treishfin.treishvaamgroup.com/blog/${post.id}`;\r\n\r\n    return (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center z-50\">\r\n            <div className=\"bg-white p-6 rounded-lg shadow-xl w-full max-w-md\">\r\n                <h2 className=\"text-2xl font-bold mb-4\">Share to LinkedIn</h2>\r\n                <p className=\"mb-2 text-sm text-gray-600\">\r\n                    <strong>Post:</strong> {post.title}\r\n                </p>\r\n                <div className=\"mb-4\">\r\n                    <label htmlFor=\"message\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                        Custom Message (Optional)\r\n                    </label>\r\n                    <textarea\r\n                        id=\"message\"\r\n                        value={message}\r\n                        onChange={(e) => setMessage(e.target.value)}\r\n                        rows=\"4\"\r\n                        className=\"w-full p-2 border border-gray-300 rounded-md shadow-sm\"\r\n                        placeholder={`Check out this article: ${post.title}\\n\\n${pageUrl}`}\r\n                    ></textarea>\r\n                </div>\r\n                <div className=\"mb-6\">\r\n                    <label htmlFor=\"tags\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                        Hashtags (comma-separated)\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"tags\"\r\n                        value={tags}\r\n                        onChange={(e) => setTags(e.target.value)}\r\n                        className=\"w-full p-2 border border-gray-300 rounded-md shadow-sm\"\r\n                        placeholder=\"e.g., #finance, #investing, #fintech\"\r\n                    />\r\n                </div>\r\n                <div className=\"flex justify-end space-x-3\">\r\n                    <button\r\n                        onClick={onClose}\r\n                        className=\"py-2 px-4 bg-gray-200 text-gray-800 rounded-lg hover:bg-gray-300\"\r\n                    >\r\n                        Cancel\r\n                    </button>\r\n                    <button\r\n                        onClick={handleShareClick}\r\n                        className=\"py-2 px-4 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\r\n                    >\r\n                        Share to LinkedIn\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ShareModal;\r\n","import React, { useEffect, useState, useMemo, useCallback } from 'react';\r\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\r\nimport { getAllPostsForAdmin as getPosts, deletePost, getDrafts, duplicatePost, bulkDeletePosts } from '../apiConfig';\r\nimport ResponsiveAuthImage from '../components/ResponsiveAuthImage';\r\nimport ShareModal from '../components/ShareModal';\r\nimport { FaShareAlt, FaEdit, FaTrash, FaPlus, FaCopy } from 'react-icons/fa';\r\n\r\nconst formatDisplayDate = (dateValue) => {\r\n    if (!dateValue) return 'No date available';\r\n    const date = new Date(dateValue);\r\n    if (isNaN(date.getTime())) return 'No date available';\r\n    return date.toLocaleString('en-US', {\r\n        year: 'numeric', month: 'long', day: 'numeric',\r\n        hour: '2-digit', minute: '2-digit', hour12: true\r\n    });\r\n};\r\n\r\nconst formatLayoutStyle = (style) => {\r\n    if (!style || style === 'DEFAULT') return 'Masonry';\r\n    if (style === 'BANNER') return 'Banner';\r\n    if (style.startsWith('MULTI_COLUMN_')) {\r\n        const count = style.split('_')[2];\r\n        return `${count} Column Row`;\r\n    }\r\n    return style;\r\n};\r\n\r\nconst PostsTable = ({\r\n    posts,\r\n    handleDelete,\r\n    handleDuplicate,\r\n    handleOpenShareModal,\r\n    isScheduled = false,\r\n    isDraft = false,\r\n    selectedPostIds,\r\n    onSelectOne,\r\n    onSelectAll,\r\n    isAddColumnDisabled\r\n}) => {\r\n    const navigate = useNavigate();\r\n    const isAllSelected = useMemo(() => posts.length > 0 && selectedPostIds.length === posts.length, [selectedPostIds, posts]);\r\n\r\n    if (!posts || posts.length === 0) {\r\n        return <p className=\"p-6 text-center text-gray-500\">No {isDraft ? 'drafts' : (isScheduled ? 'scheduled' : 'published')} posts found.</p>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"overflow-x-auto\">\r\n            <table className=\"min-w-full leading-normal\">\r\n                <thead>\r\n                    <tr>\r\n                        <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left\">\r\n                           <input type=\"checkbox\" className=\"form-checkbox h-4 w-4 text-sky-600 rounded focus:ring-sky-500\" checked={isAllSelected} onChange={onSelectAll} />\r\n                        </th>\r\n                        <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">Title</th>\r\n                        <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">Category</th>\r\n                        <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">Post Layout</th>\r\n                        <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\r\n                            {isDraft ? 'Last Saved' : (isScheduled ? 'Scheduled For' : 'Last Updated')}\r\n                        </th>\r\n                        <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {posts.map(post => (\r\n                        <tr key={post.id} className={`hover:bg-gray-50 ${selectedPostIds.includes(post.id) ? 'bg-sky-50' : ''}`}>\r\n                            <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\r\n                                <input type=\"checkbox\" className=\"form-checkbox h-4 w-4 text-sky-600 rounded focus:ring-sky-500\" checked={selectedPostIds.includes(post.id)} onChange={() => onSelectOne(post.id)} />\r\n                            </td>\r\n                            <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\r\n                                <div className=\"flex items-center\">\r\n                                    <div className=\"flex-shrink-0 w-10 h-10 mr-4\">\r\n                                        <ResponsiveAuthImage baseName={post.thumbnails && post.thumbnails.length > 0 ? post.thumbnails[0].imageUrl : null} alt={post.title} className=\"w-full h-full rounded-full object-cover\" sizes=\"40px\" />\r\n                                    </div>\r\n                                    <p className=\"text-gray-900 font-medium\">{post.title}</p>\r\n                                </div>\r\n                            </td>\r\n                            <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\r\n                                <span className=\"bg-gray-100 text-gray-700 text-xs font-semibold px-2 py-1 rounded-full\">{post.category?.name || 'N/A'}</span>\r\n                            </td>\r\n                            <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\r\n                                <span className=\"text-gray-800\">{formatLayoutStyle(post.layoutStyle)}</span>\r\n                            </td>\r\n                            <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\r\n                                <p className=\"text-gray-900\">{formatDisplayDate(isScheduled ? post.scheduledTime : (post.updatedAt || post.createdAt))}</p>\r\n                            </td>\r\n                            <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\r\n                                <div className=\"flex items-center space-x-4\">\r\n                                    {!isScheduled && !isDraft && <button onClick={() => handleOpenShareModal(post)} className=\"text-gray-500 hover:text-green-600\" title=\"Share\"><FaShareAlt /></button>}\r\n                                    <button onClick={() => navigate(`/dashboard/blog/edit/${post.userFriendlySlug}/${post.id}`)} className=\"text-gray-500 hover:text-sky-600\" title=\"Edit\"><FaEdit /></button>\r\n                                    <button onClick={() => handleDelete(post.id)} className=\"text-gray-500 hover:text-red-600\" title=\"Delete\"><FaTrash /></button>\r\n                                    {post.layoutStyle && post.layoutStyle.startsWith('MULTI_COLUMN') && (\r\n                                        <button\r\n                                            onClick={() => handleDuplicate(post.id)}\r\n                                            className={`text-gray-500 ${isAddColumnDisabled(post.layoutGroupId, post.layoutStyle) ? 'opacity-50 cursor-not-allowed' : 'hover:text-blue-600'}`}\r\n                                            title={isAddColumnDisabled(post.layoutGroupId, post.layoutStyle) ? \"Group is full\" : \"Add post column\"}\r\n                                            disabled={isAddColumnDisabled(post.layoutGroupId, post.layoutStyle)}\r\n                                        >\r\n                                            <FaCopy />\r\n                                        </button>\r\n                                    )}\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nconst ManagePostsPage = () => {\r\n    const location = useLocation();\r\n    const [allPosts, setAllPosts] = useState([]);\r\n    const [drafts, setDrafts] = useState([]);\r\n    const [error, setError] = useState('');\r\n    const [isShareModalOpen, setIsShareModalOpen] = useState(false);\r\n    const [selectedPost, setSelectedPost] = useState(null);\r\n    const [activeTab, setActiveTab] = useState('published');\r\n    const [selectedPostIds, setSelectedPostIds] = useState([]);\r\n\r\n    const fetchAllData = useCallback(async () => {\r\n        try {\r\n            const [postsRes, draftsRes] = await Promise.all([getPosts(), getDrafts()]);\r\n            setAllPosts(postsRes.data || []);\r\n            setDrafts(draftsRes.data || []);\r\n        } catch (err) {\r\n            setError('Failed to fetch posts or drafts.');\r\n            console.error(err);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        fetchAllData();\r\n    }, [fetchAllData]);\r\n\r\n    useEffect(() => {\r\n        if (location.hash === '#drafts') {\r\n            setActiveTab('drafts');\r\n        }\r\n    }, [location.hash]);\r\n\r\n    useEffect(() => {\r\n        setSelectedPostIds([]);\r\n    }, [activeTab]);\r\n\r\n    const { publishedPosts, scheduledPosts } = useMemo(() => {\r\n        const published = allPosts.filter(p => p.status === 'PUBLISHED');\r\n        const scheduled = allPosts.filter(p => p.status === 'SCHEDULED');\r\n        return { publishedPosts: published, scheduledPosts: scheduled };\r\n    }, [allPosts]);\r\n\r\n    const layoutGroupCounts = useMemo(() => {\r\n        const counts = {};\r\n        [...allPosts, ...drafts].forEach(p => {\r\n            if (p.layoutGroupId) {\r\n                counts[p.layoutGroupId] = (counts[p.layoutGroupId] || 0) + 1;\r\n            }\r\n        });\r\n        return counts;\r\n    }, [allPosts, drafts]);\r\n\r\n    const isAddColumnDisabled = useCallback((groupId, layoutStyle) => {\r\n        if (!groupId || !layoutStyle || !layoutStyle.startsWith('MULTI_COLUMN')) {\r\n            return true;\r\n        }\r\n        try {\r\n            const limit = parseInt(layoutStyle.split('_')[2], 10);\r\n            const currentCount = layoutGroupCounts[groupId] || 0;\r\n            return currentCount >= limit;\r\n        } catch {\r\n            return true;\r\n        }\r\n    }, [layoutGroupCounts]);\r\n\r\n    const handleDelete = async (id) => {\r\n        if (window.confirm('Are you sure you want to delete this post?')) {\r\n            try {\r\n                await deletePost(id);\r\n                await fetchAllData();\r\n            } catch (err) {\r\n                setError('Failed to delete the post.');\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleDuplicate = async (id) => {\r\n        if (window.confirm('This will create a new draft by duplicating the selected post\\'s layout. Continue?')) {\r\n            try {\r\n                await duplicatePost(id);\r\n                await fetchAllData();\r\n                setActiveTab('drafts');\r\n            } catch (err) {\r\n                setError('Failed to duplicate the post.');\r\n                console.error(err);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleOpenShareModal = (post) => {\r\n        setSelectedPost(post);\r\n        setIsShareModalOpen(true);\r\n    };\r\n\r\n    const handleSelectOne = (postId) => {\r\n        setSelectedPostIds(prev =>\r\n            prev.includes(postId) ? prev.filter(id => id !== postId) : [...prev, postId]\r\n        );\r\n    };\r\n    \r\n    const currentVisiblePosts = useMemo(() => {\r\n        if (activeTab === 'published') return publishedPosts;\r\n        if (activeTab === 'drafts') return drafts;\r\n        if (activeTab === 'scheduled') return scheduledPosts;\r\n        return [];\r\n    }, [activeTab, publishedPosts, drafts, scheduledPosts]);\r\n\r\n    const handleSelectAll = (e) => {\r\n        if (e.target.checked) {\r\n            const postIds = currentVisiblePosts.map(p => p.id);\r\n            setSelectedPostIds(postIds);\r\n        } else {\r\n            setSelectedPostIds([]);\r\n        }\r\n    };\r\n\r\n    const handleBulkDelete = async () => {\r\n        if (selectedPostIds.length === 0) return;\r\n        if (window.confirm(`Are you sure you want to delete ${selectedPostIds.length} selected post(s)?`)) {\r\n            try {\r\n                await bulkDeletePosts(selectedPostIds);\r\n                setSelectedPostIds([]);\r\n                await fetchAllData();\r\n            } catch (err) {\r\n                setError('Failed to delete the selected posts.');\r\n                console.error(err);\r\n            }\r\n        }\r\n    };\r\n    \r\n    const tableProps = {\r\n        handleDelete,\r\n        handleDuplicate,\r\n        handleOpenShareModal,\r\n        selectedPostIds,\r\n        onSelectOne: handleSelectOne,\r\n        isAddColumnDisabled\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container mx-auto p-6\">\r\n                <div className=\"flex justify-between items-center mb-6\">\r\n                    <h1 className=\"text-3xl font-bold text-gray-800\">Manage Posts</h1>\r\n                    <Link to=\"/dashboard/blog/new\" className=\"bg-sky-600 text-white font-bold py-2 px-4 rounded-lg hover:bg-sky-700 transition flex items-center\">\r\n                        <FaPlus className=\"mr-2\" /> Create New Post\r\n                    </Link>\r\n                </div>\r\n\r\n                {selectedPostIds.length > 0 && (\r\n                    <div className=\"mb-4 p-3 bg-sky-100 border border-sky-200 rounded-lg flex items-center gap-4\">\r\n                        <p className=\"text-sm font-semibold text-sky-800\">{selectedPostIds.length} post(s) selected.</p>\r\n                        <button\r\n                            onClick={handleBulkDelete}\r\n                            className=\"bg-red-600 text-white text-sm font-bold py-1 px-3 rounded-lg hover:bg-red-700 transition flex items-center\"\r\n                        >\r\n                            <FaTrash className=\"mr-2\" /> Delete Selected\r\n                        </button>\r\n                    </div>\r\n                )}\r\n                \r\n                <div className=\"mb-4 border-b border-gray-200\">\r\n                    <nav className=\"flex space-x-4\" aria-label=\"Tabs\">\r\n                        <button onClick={() => setActiveTab('published')} className={`px-3 py-2 font-medium text-sm rounded-t-lg ${activeTab === 'published' ? 'border-b-2 border-sky-600 text-sky-600' : 'text-gray-500 hover:text-gray-700'}`}>\r\n                            Published ({publishedPosts.length})\r\n                        </button>\r\n                        <button onClick={() => setActiveTab('drafts')} className={`px-3 py-2 font-medium text-sm rounded-t-lg ${activeTab === 'drafts' ? 'border-b-2 border-sky-600 text-sky-600' : 'text-gray-500 hover:text-gray-700'}`}>\r\n                            Drafts ({drafts.length})\r\n                        </button>\r\n                        <button onClick={() => setActiveTab('scheduled')} className={`px-3 py-2 font-medium text-sm rounded-t-lg ${activeTab === 'scheduled' ? 'border-b-2 border-sky-600 text-sky-600' : 'text-gray-500 hover:text-gray-700'}`}>\r\n                            Scheduled ({scheduledPosts.length})\r\n                        </button>\r\n                    </nav>\r\n                </div>\r\n                {error && <p className=\"text-red-500 bg-red-100 p-3 rounded mb-4\">{error}</p>}\r\n                <div className=\"bg-white shadow-md rounded-lg overflow-hidden\">\r\n                    {activeTab === 'published' && <PostsTable posts={publishedPosts} {...tableProps} onSelectAll={handleSelectAll} />}\r\n                    {activeTab === 'drafts' && <PostsTable posts={drafts} {...tableProps} onSelectAll={handleSelectAll} isDraft={true} />}\r\n                    {activeTab === 'scheduled' && <PostsTable posts={scheduledPosts} {...tableProps} onSelectAll={handleSelectAll} isScheduled={true} />}\r\n                </div>\r\n            </div>\r\n            {isShareModalOpen && <ShareModal post={selectedPost} onClose={() => setIsShareModalOpen(false)} />}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ManagePostsPage;"],"names":["_ref","baseName","alt","className","sizes","onLoad","_jsx","concat","match","console","warn","cleanedBaseName","src","API_URL","placeholderSrc","srcSet","join","LazyLoadImage","effect","afterLoad","post","onShare","onClose","message","setMessage","useState","tags","setTags","pageUrl","id","children","_jsxs","title","htmlFor","value","onChange","e","target","rows","placeholder","type","onClick","handleShareClick","postId","split","map","tag","trim","filter","Boolean","formatDisplayDate","dateValue","date","Date","isNaN","getTime","toLocaleString","year","month","day","hour","minute","hour12","formatLayoutStyle","style","startsWith","count","PostsTable","posts","handleDelete","handleDuplicate","handleOpenShareModal","isScheduled","isDraft","selectedPostIds","onSelectOne","onSelectAll","isAddColumnDisabled","navigate","useNavigate","isAllSelected","useMemo","length","checked","_post$category","includes","ResponsiveAuthImage","thumbnails","imageUrl","category","name","layoutStyle","scheduledTime","updatedAt","createdAt","FaShareAlt","userFriendlySlug","FaEdit","FaTrash","layoutGroupId","disabled","FaCopy","ManagePostsPage","location","useLocation","allPosts","setAllPosts","drafts","setDrafts","error","setError","isShareModalOpen","setIsShareModalOpen","selectedPost","setSelectedPost","activeTab","setActiveTab","setSelectedPostIds","fetchAllData","useCallback","async","postsRes","draftsRes","Promise","all","getPosts","getDrafts","data","err","useEffect","hash","publishedPosts","scheduledPosts","p","status","layoutGroupCounts","counts","forEach","groupId","limit","parseInt","_unused","currentVisiblePosts","handleSelectAll","postIds","tableProps","window","confirm","deletePost","duplicatePost","prev","_Fragment","Link","to","FaPlus","bulkDeletePosts","_objectSpread","ShareModal"],"sourceRoot":""}