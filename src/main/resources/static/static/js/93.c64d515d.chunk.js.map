{"version":3,"file":"static/js/93.c64d515d.chunk.js","mappings":"0NAMA,MA+EA,EA/EkBA,KACd,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,KAClCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,KAC5BK,EAAWC,IAAgBN,EAAAA,EAAAA,WAAS,IAErC,MAAEO,IAAUC,EAAAA,EAAAA,KACZC,GAAWC,EAAAA,EAAAA,MAqBjB,OACIC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,yEAAwEC,UACnFC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,wEAAuEC,SAAA,EAElFC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,qEAAoEC,SAAA,EAE/EF,EAAAA,EAAAA,KAACI,EAAAA,cAAa,CAACC,IAAI,OAAOC,OAAO,OAAOC,IAAI,aAAaN,UAAU,oBACnED,EAAAA,EAAAA,KAAA,MAAIC,UAAU,kDAAiDC,SAAC,wBAChEF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,wCAAuCC,SAAC,2CAGzDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,0CAAyCC,UACpDC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,qCAAoCC,SAAA,EAC/CF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,+CAA8CC,SAAC,mBAC7DC,EAAAA,EAAAA,MAAA,QAAMK,SAjCLC,UACjBC,EAAEC,iBACFlB,EAAS,IACTE,GAAa,GACb,IACI,MAAMiB,QAAehB,EAAMT,EAAOG,GAC9BsB,EAAOC,QACPf,EAAS,cAETL,EAASmB,EAAOE,SAAW,+CAEnC,CAAE,MAAOC,GACLC,QAAQxB,MAAM,eAAgBuB,GAC9BtB,EAAS,6CACb,CAAC,QACGE,GAAa,EACjB,GAiB8CM,UAAU,iBAAgBC,SAAA,EACpDF,EAAAA,EAAAA,KAAA,SACIiB,MAAO9B,EACP+B,SAAWR,GAAMtB,EAASsB,EAAES,OAAOF,OACnCG,KAAK,QACLC,KAAK,QACLC,UAAQ,EACRrB,UAAU,aACVsB,YAAY,gBACZC,aAAa,WAEjBxB,EAAAA,EAAAA,KAAA,SACIiB,MAAO3B,EACP4B,SAAWR,GAAMnB,EAAYmB,EAAES,OAAOF,OACtCG,KAAK,mBACLC,KAAK,WACLC,UAAQ,EACRrB,UAAU,aACVsB,YAAY,WACZC,aAAa,qBAEhBhC,IAASQ,EAAAA,EAAAA,KAAA,KAAGC,UAAU,mCAAkCC,SAAEV,KAC3DQ,EAAAA,EAAAA,KAAA,UACIqB,KAAK,SACLI,SAAU/B,EACVO,UAAU,sHAAqHC,SAE9HR,EAAY,gBAAkB,yB","sources":["pages/LoginPage.js"],"sourcesContent":["// src/pages/LoginPage.js\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\n\r\nconst LoginPage = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const { login } = useAuth();\r\n    const navigate = useNavigate();\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setError('');\r\n        setIsLoading(true);\r\n        try {\r\n            const result = await login(email, password);\r\n            if (result.success) {\r\n                navigate('/dashboard');\r\n            } else {\r\n                setError(result.message || 'Login failed. Please check your credentials.');\r\n            }\r\n        } catch (err) {\r\n            console.error('Login error:', err);\r\n            setError('An unexpected error occurred during login.');\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"min-h-screen hero-silver-gradient flex items-center justify-center p-4\">\r\n            <div className=\"container mx-auto flex items-center justify-center lg:justify-between\">\r\n\r\n                <div className=\"hidden lg:flex flex-col items-start justify-center basis-1/2 pr-16\">\r\n                    {/* --- THIS IS THE FIX --- */}\r\n                    <LazyLoadImage alt=\"Logo\" effect=\"blur\" src=\"/logo.webp\" className=\"h-16 w-16 mr-4\" />\r\n                    <h1 className=\"text-4xl md:text-5xl font-bold header-logo-text\">Treishvaam Finance</h1>\r\n                    <p className=\"text-lg md:text-xl text-gray-700 mt-4\">Empowering your financial journey.</p>\r\n                </div>\r\n\r\n                <div className=\"basis-full lg:basis-1/2 max-w-md w-full\">\r\n                    <div className=\"bg-white p-10 rounded-lg shadow-xl\">\r\n                        <h2 className=\"text-center text-3xl font-bold section-title\">Admin Sign In</h2>\r\n                        <form onSubmit={handleSubmit} className=\"mt-8 space-y-6\">\r\n                            <input\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                                name=\"email\"\r\n                                type=\"email\"\r\n                                required\r\n                                className=\"auth-input\"\r\n                                placeholder=\"Email address\"\r\n                                autoComplete=\"email\"\r\n                            />\r\n                            <input\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                                name=\"current-password\"\r\n                                type=\"password\"\r\n                                required\r\n                                className=\"auth-input\"\r\n                                placeholder=\"Password\"\r\n                                autoComplete=\"current-password\"\r\n                            />\r\n                            {error && <p className=\"text-center text-sm text-red-600\">{error}</p>}\r\n                            <button\r\n                                type=\"submit\"\r\n                                disabled={isLoading}\r\n                                className=\"w-full py-3 px-4 rounded-lg text-white font-semibold cta-button-primary transition duration-300 disabled:opacity-50\"\r\n                            >\r\n                                {isLoading ? 'Signing in...' : 'Sign in'}\r\n                            </button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginPage;"],"names":["LoginPage","email","setEmail","useState","password","setPassword","error","setError","isLoading","setIsLoading","login","useAuth","navigate","useNavigate","_jsx","className","children","_jsxs","LazyLoadImage","alt","effect","src","onSubmit","async","e","preventDefault","result","success","message","err","console","value","onChange","target","name","type","required","placeholder","autoComplete","disabled"],"sourceRoot":""}