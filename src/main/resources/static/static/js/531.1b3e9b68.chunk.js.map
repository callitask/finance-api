{"version":3,"file":"static/js/531.1b3e9b68.chunk.js","mappings":"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","sources":["components/ShareButtons.js","components/TableOfContents.js","pages/SinglePostPage.js","components/AuthImage.js","components/ResponsiveAuthImage.js"],"sourcesContent":["import React from 'react';\r\nimport {\r\n    FacebookShareButton,\r\n    LinkedinShareButton,\r\n    WhatsappShareButton,\r\n    TelegramShareButton,\r\n    TwitterShareButton, // Reverted to TwitterShareButton\r\n} from 'react-share';\r\nimport {\r\n    FacebookIcon,\r\n    LinkedinIcon,\r\n    WhatsappIcon,\r\n    TelegramIcon,\r\n    TwitterIcon, // Reverted to TwitterIcon\r\n} from 'react-share';\r\nimport { FaCopy } from 'react-icons/fa';\r\n\r\nconst ShareButtons = ({ url, title, summary }) => {\r\n    const handleCopy = () => {\r\n        navigator.clipboard.writeText(url);\r\n        alert('Link copied to clipboard!');\r\n    };\r\n\r\n    return (\r\n        <div className=\"flex flex-wrap items-center gap-4 mt-8\">\r\n            <span className=\"font-bold text-gray-700 text-lg mr-2\">Share this article:</span>\r\n            <div className=\"flex items-center gap-3\">\r\n                <TwitterShareButton url={url} title={title}>\r\n                    <TwitterIcon size={40} round />\r\n                </TwitterShareButton>\r\n\r\n                <FacebookShareButton url={url} quote={summary}>\r\n                    <FacebookIcon size={40} round />\r\n                </FacebookShareButton>\r\n\r\n                <LinkedinShareButton url={url} title={title} summary={summary}>\r\n                    <LinkedinIcon size={40} round />\r\n                </LinkedinShareButton>\r\n\r\n                <WhatsappShareButton url={url} title={title} separator=\":: \">\r\n                    <WhatsappIcon size={40} round />\r\n                </WhatsappShareButton>\r\n\r\n                <TelegramShareButton url={url} title={title}>\r\n                    <TelegramIcon size={40} round />\r\n                </TelegramShareButton>\r\n\r\n                <button\r\n                    onClick={handleCopy}\r\n                    className=\"flex items-center justify-center w-10 h-10 bg-gray-200 rounded-full hover:bg-gray-300 transition\"\r\n                    aria-label=\"Copy link\"\r\n                    title=\"Copy Link\"\r\n                >\r\n                    <FaCopy className=\"text-gray-600\" />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ShareButtons;","// src/components/TableOfContents.js\r\nimport React, { useState } from 'react';\r\n\r\nconst TableOfContents = ({ headings, activeId, progress }) => {\r\n  const [isExpanded, setIsExpanded] = useState(true);\r\n  if (!headings || headings.length === 0) return null;\r\n\r\n  const handleLinkClick = (e, id) => {\r\n    e.preventDefault();\r\n    const element = document.getElementById(id);\r\n    if (element) {\r\n        // Adjust for sticky main navbar height (approx 80px-100px)\r\n        const yOffset = -90; \r\n        const y = element.getBoundingClientRect().top + window.pageYOffset + yOffset;\r\n        window.scrollTo({top: y, behavior: 'smooth'});\r\n    }\r\n  };\r\n\r\n  return (\r\n    // UPDATED: Added relative positioning for the progress bar\r\n    <div className=\"toc-container\">\r\n      {/* NEW: Vertical Progress Bar */}\r\n      <div className=\"toc-progress-track\">\r\n        <div className=\"toc-progress-fill\" style={{ height: `${progress}%` }}></div>\r\n      </div>\r\n\r\n      {/* UPDATED: Added left padding to avoid overlapping the progress bar */}\r\n      <div className=\"pl-5\">\r\n        <button onClick={() => setIsExpanded(!isExpanded)} className=\"toc-header\">\r\n          <span>On this page</span>\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={`toc-chevron ${isExpanded ? '' : '-rotate-90'}`}>\r\n            <path fillRule=\"evenodd\" d=\"M5.23 7.21a.75.75 0 011.06.02L10 11.168l3.71-3.938a.75.75 0 111.08 1.04l-4.25 4.5a.75.75 0 01-1.08 0l-4.25-4.5a.75.75 0 01.02-1.06z\" clipRule=\"evenodd\" />\r\n          </svg>\r\n        </button>\r\n        {isExpanded && (\r\n          <nav className=\"toc-body\">\r\n            <ul>\r\n              {headings.map((heading) => (\r\n                <li key={heading.id} className=\"toc-list-item\">\r\n                  <a href={`#${heading.id}`} \r\n                     onClick={(e) => handleLinkClick(e, heading.id)}\r\n                     className={`toc-link ${activeId === heading.id ? 'active' : ''}`}\r\n                     style={{ paddingLeft: `${(heading.level - 2) * 0.75 + 0.5}rem` }}>\r\n                    {heading.text}\r\n                  </a>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </nav>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableOfContents;","import React, { useState, useEffect, useRef, useMemo } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getPostByUrlId, API_URL } from '../apiConfig';\r\nimport DOMPurify from 'dompurify';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport ResponsiveAuthImage from '../components/ResponsiveAuthImage';\r\nimport ShareButtons from '../components/ShareButtons';\r\nimport throttle from 'lodash/throttle';\r\nimport TableOfContents from '../components/TableOfContents';\r\n\r\nconst formatDate = (dateString) => {\r\n    if (!dateString) return 'N/A';\r\n    return new Date(dateString).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' });\r\n};\r\n\r\nconst createSnippet = (html, length = 155) => {\r\n    if (!html) return '';\r\n    const plainText = DOMPurify.sanitize(html, { ALLOWED_TAGS: [] });\r\n    if (plainText.length <= length) return plainText;\r\n    const trimmed = plainText.substring(0, length);\r\n    return trimmed.substring(0, Math.min(trimmed.length, trimmed.lastIndexOf(' '))) + '...';\r\n};\r\n\r\nconst SinglePostPage = () => {\r\n    const { urlArticleId } = useParams();\r\n    const [post, setPost] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [headings, setHeadings] = useState([]);\r\n    const [activeId, setActiveId] = useState('');\r\n    const [progress, setProgress] = useState(0);\r\n    const articleRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const fetchPost = async () => {\r\n            try {\r\n                const response = await getPostByUrlId(urlArticleId);\r\n                setPost(response.data);\r\n            } catch (err) {\r\n                setError('Failed to fetch post.');\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n        fetchPost();\r\n        window.scrollTo(0, 0);\r\n    }, [urlArticleId]);\r\n\r\n    useEffect(() => {\r\n        if (!post?.content) return;\r\n        const tempDiv = document.createElement('div');\r\n        tempDiv.innerHTML = DOMPurify.sanitize(post.content, { USE_PROFILES: { html: true }, ADD_ATTR: ['id'] });\r\n        \r\n        const headingElements = tempDiv.querySelectorAll('h2, h3, h4');\r\n        const extractedHeadings = Array.from(headingElements).map((el, index) => {\r\n            const id = `heading-${index}-${el.tagName}`;\r\n            el.id = id;\r\n            return { id, text: el.innerText, level: parseInt(el.tagName.substring(1), 10) };\r\n        });\r\n\r\n        setHeadings(extractedHeadings);\r\n        setPost(currentPost => ({ ...currentPost, contentWithIds: tempDiv.innerHTML }));\r\n    }, [post?.content]);\r\n    \r\n    const handleScroll = useMemo(() => throttle(() => {\r\n        const contentElement = articleRef.current;\r\n        if (!contentElement) return;\r\n\r\n        const articleTop = contentElement.getBoundingClientRect().top + window.scrollY;\r\n        const contentHeight = contentElement.scrollHeight;\r\n        const viewportHeight = window.innerHeight;\r\n\r\n        const scrollableDistance = contentHeight - viewportHeight;\r\n        const scrolledFromTop = window.scrollY - articleTop;\r\n        \r\n        if (scrolledFromTop > 0 && scrollableDistance > 0) {\r\n            const scrollPercent = (scrolledFromTop / scrollableDistance) * 100;\r\n            setProgress(Math.min(100, Math.max(0, scrollPercent)));\r\n        } else {\r\n            setProgress(0);\r\n        }\r\n\r\n        let currentActiveId = '';\r\n        for (let i = headings.length - 1; i >= 0; i--) {\r\n            const element = document.getElementById(headings[i].id);\r\n            if (element && element.getBoundingClientRect().top < 200) {\r\n                currentActiveId = headings[i].id;\r\n                break;\r\n            }\r\n        }\r\n        setActiveId(currentActiveId);\r\n    }, 150), [headings]);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('scroll', handleScroll);\r\n        return () => {\r\n            handleScroll.cancel();\r\n            window.removeEventListener('scroll', handleScroll);\r\n        };\r\n    }, [handleScroll]);\r\n\r\n    if (loading) return <div className=\"text-center py-20\">Loading post...</div>;\r\n    if (error) return <div className=\"text-center py-20 text-red-500\">{error}</div>;\r\n    if (!post) return <div className=\"text-center py-20\">Post not found.</div>;\r\n\r\n    const createMarkup = (htmlContent) => ({ __html: htmlContent });\r\n\r\n    // UPDATED URL\r\n    const pageUrl = `https://treishfin.treishvaamgroup.com/category/${post.category?.slug}/${post.userFriendlySlug}/${post.urlArticleId}`;\r\n    const pageTitle = `Treishvaam Finance · ${post.title}`;\r\n    const seoDescription = post.metaDescription || post.customSnippet || createSnippet(post.content, 155);\r\n    const imageUrl = post.coverImageUrl ? `${API_URL}/api/uploads/${post.coverImageUrl}.webp` : `${window.location.origin}/logo512.png`;\r\n    const homeUrl = window.location.origin;\r\n\r\n    const schema = {\r\n        \"@context\": \"https://schema.org\",\r\n        \"@type\": \"Article\",\r\n        \"headline\": post.title,\r\n        \"image\": imageUrl,\r\n        \"author\": {\r\n            \"@type\": \"Organization\",\r\n            \"name\": \"Treishvaam Finance\",\r\n            \"url\": homeUrl\r\n        },\r\n        \"publisher\": {\r\n            \"@type\": \"Organization\",\r\n            \"name\": \"Treishvaam Finance\",\r\n            \"logo\": {\r\n                \"@type\": \"ImageObject\",\r\n                \"url\": `${homeUrl}/logo512.png`\r\n            }\r\n        },\r\n        \"datePublished\": post.createdAt,\r\n        \"dateModified\": post.updatedAt,\r\n        \"mainEntityOfPage\": {\r\n            \"@type\": \"WebPage\",\r\n            \"@id\": pageUrl\r\n        },\r\n        \"description\": seoDescription,\r\n        \"keywords\": post.keywords || post.tags?.join(', ')\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>{pageTitle}</title>\r\n                <meta name=\"description\" content={seoDescription} />\r\n                {post.keywords && <meta name=\"keywords\" content={post.keywords} />}\r\n                <link rel=\"canonical\" href={pageUrl} />\r\n                <meta property=\"og:type\" content=\"article\" />\r\n                <meta property=\"og:url\" content={pageUrl} />\r\n                <meta property=\"og:title\" content={post.title} />\r\n                <meta property=\"og:description\" content={seoDescription} />\r\n                <meta property=\"og:image\" content={imageUrl} />\r\n                <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n                <meta name=\"twitter:url\" content={pageUrl} />\r\n                <meta name=\"twitter:title\" content={post.title} />\r\n                <meta name=\"twitter:description\" content={seoDescription} />\r\n                <meta name=\"twitter:image\" content={imageUrl} />\r\n                <script type=\"application/ld+json\">\r\n                    {JSON.stringify(schema)}\r\n                </script>\r\n            </Helmet>\r\n\r\n            <div className=\"max-w-screen-xl mx-auto lg:grid lg:grid-cols-12 lg:gap-x-12 px-4 sm:px-6 lg:px-8\">\r\n                <div className=\"lg:col-span-8 xl:col-span-9 py-8\">\r\n                    <header className=\"mb-8\">\r\n                        <h1 className=\"text-3xl md:text-5xl font-extrabold text-gray-900 leading-tight\">\r\n                            {post.title}\r\n                        </h1>\r\n                        <div className=\"flex items-center text-sm text-gray-500 mt-4 mb-6\">\r\n                            <span>By {post.author || 'Treishvaam Team'}</span>\r\n                            <span className=\"mx-2\">·</span>\r\n                            <time dateTime={post.createdAt}>{formatDate(post.createdAt)}</time>\r\n                        </div>\r\n                        \r\n                        {post.coverImageUrl && (\r\n                            <div className=\"mb-8 rounded-lg overflow-hidden shadow-lg\">\r\n                                <ResponsiveAuthImage baseName={post.coverImageUrl} alt={post.coverImageAltText || post.title} className=\"w-full h-auto object-cover\"/>\r\n                            </div>\r\n                        )}\r\n                    </header>\r\n                    \r\n                    <main ref={articleRef}>\r\n                        <article className=\"prose prose-lg max-w-none\" dangerouslySetInnerHTML={createMarkup(post.contentWithIds || post.content)} />\r\n                        \r\n                        <div className=\"mt-16 pt-8 border-t\">\r\n                            <ShareButtons url={pageUrl} title={post.title} />\r\n                        </div>\r\n                    </main>\r\n                </div>\r\n\r\n                <aside className=\"lg:col-span-4 xl:col-span-3 py-8 hidden lg:block\">\r\n                    <div className=\"sticky top-24\">\r\n                         <TableOfContents \r\n                            headings={headings} \r\n                            activeId={activeId} \r\n                            progress={progress} \r\n                         />\r\n                    </div>\r\n                </aside>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SinglePostPage;","import React from 'react';\r\n\r\n/**\r\n * --- REWRITTEN FOR PERFORMANCE & CORRECTNESS ---\r\n * This component is now a simple wrapper around the native <img> tag.\r\n * Since the image routes are public, we don't need complex authenticated fetching.\r\n * This change allows the browser to handle `src`, `srcSet`, and the `onLoad`\r\n * event natively, which is more performant and fixes the masonry layout.\r\n */\r\nconst AuthImage = ({ src, srcSet, alt, onLoad, ...props }) => {\r\n    // If there's no src, render a placeholder to avoid broken image icons.\r\n    if (!src) {\r\n        return <div className=\"w-full h-full bg-gray-200 animate-pulse\" {...props}></div>;\r\n    }\r\n\r\n    // Render the native img tag with all props passed down.\r\n    return (\r\n        <img\r\n            src={src}\r\n            srcSet={srcSet}\r\n            alt={alt}\r\n            onLoad={onLoad} // This will now fire correctly.\r\n            {...props}\r\n        />\r\n    );\r\n};\r\n\r\nexport default AuthImage;","import React from 'react';\r\nimport AuthImage from './AuthImage';\r\nimport { API_URL } from '../apiConfig'; // Import the base URL\r\n\r\n/**\r\n * This component constructs the full, responsive image URLs and passes them\r\n * to the simple AuthImage component for rendering.\r\n * --- MODIFIED FOR ROBUSTNESS ---\r\n * It now cleans the incoming `baseName` to handle inconsistent URL formats\r\n * from the database (e.g., full URLs, paths, or filenames with extensions).\r\n */\r\nconst ResponsiveAuthImage = ({ baseName, alt, className, sizes, onLoad }) => {\r\n    if (!baseName || typeof baseName !== 'string') {\r\n        return <div className={`bg-gray-200 ${className}`} />;\r\n    }\r\n\r\n    // --- NEW CLEANING LOGIC ---\r\n    // This regex finds a UUID, which is the core part of our image filenames.\r\n    // It handles cases where baseName might be a full URL, a path, or include extensions.\r\n    const uuidRegex = /([a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})/;\r\n    const match = baseName.match(uuidRegex);\r\n\r\n    // If no valid UUID is found in the string, we can't construct a URL.\r\n    if (!match) {\r\n        console.warn(`ResponsiveAuthImage: Could not extract a valid image ID from baseName: \"${baseName}\"`);\r\n        return <div className={`bg-gray-200 ${className}`} />;\r\n    }\r\n\r\n    const cleanedBaseName = match[0]; // The captured UUID\r\n    // --- END OF NEW LOGIC ---\r\n\r\n    // Construct the FULL URLs for the browser using the cleaned base name.\r\n    const src = `${API_URL}/api/uploads/${cleanedBaseName}-small.webp`;\r\n    \r\n    // --- FIXED: Construct the srcSet string on a single line to avoid whitespace issues. ---\r\n    const srcSet = [\r\n        `${API_URL}/api/uploads/${cleanedBaseName}-small.webp 300w`,\r\n        `${API_URL}/api/uploads/${cleanedBaseName}-medium.webp 600w`,\r\n        `${API_URL}/api/uploads/${cleanedBaseName}.webp 1200w`\r\n    ].join(', ');\r\n\r\n    return (\r\n        <AuthImage\r\n            src={src}\r\n            srcSet={srcSet}\r\n            sizes={sizes}\r\n            alt={alt}\r\n            className={className}\r\n            loading=\"lazy\"\r\n            onLoad={onLoad} // Pass the onLoad handler down to the <img> tag\r\n        />\r\n    );\r\n};\r\n\r\nexport default ResponsiveAuthImage;"],"names":["_ref","url","title","summary","_jsxs","className","children","_jsx","TwitterShareButton","TwitterIcon","size","round","FacebookShareButton","quote","FacebookIcon","LinkedinShareButton","LinkedinIcon","WhatsappShareButton","separator","WhatsappIcon","TelegramShareButton","TelegramIcon","onClick","handleCopy","navigator","clipboard","writeText","alert","FaCopy","headings","activeId","progress","isExpanded","setIsExpanded","useState","length","style","height","concat","xmlns","viewBox","fill","fillRule","d","clipRule","map","heading","href","id","e","handleLinkClick","preventDefault","element","document","getElementById","yOffset","y","getBoundingClientRect","top","window","pageYOffset","scrollTo","behavior","paddingLeft","level","text","SinglePostPage","_post$category","_post$tags","urlArticleId","useParams","post","setPost","loading","setLoading","error","setError","setHeadings","setActiveId","setProgress","articleRef","useRef","useEffect","async","response","getPostByUrlId","data","err","fetchPost","content","tempDiv","createElement","innerHTML","DOMPurify","sanitize","USE_PROFILES","html","ADD_ATTR","headingElements","querySelectorAll","extractedHeadings","Array","from","el","index","tagName","innerText","parseInt","substring","currentPost","_objectSpread","contentWithIds","handleScroll","useMemo","throttle","contentElement","current","articleTop","scrollY","scrollableDistance","scrollHeight","innerHeight","scrolledFromTop","scrollPercent","Math","min","max","currentActiveId","i","addEventListener","cancel","removeEventListener","pageUrl","category","slug","userFriendlySlug","pageTitle","seoDescription","metaDescription","customSnippet","arguments","undefined","plainText","ALLOWED_TAGS","trimmed","lastIndexOf","createSnippet","imageUrl","coverImageUrl","API_URL","location","origin","homeUrl","schema","createdAt","updatedAt","keywords","tags","join","_Fragment","Helmet","name","rel","property","type","JSON","stringify","author","dateTime","dateString","Date","toLocaleDateString","year","month","day","ResponsiveAuthImage","baseName","alt","coverImageAltText","ref","dangerouslySetInnerHTML","htmlContent","__html","ShareButtons","TableOfContents","src","srcSet","onLoad","props","_objectWithoutProperties","_excluded","sizes","match","console","warn","cleanedBaseName","AuthImage"],"sourceRoot":""}