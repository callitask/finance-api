{"version":3,"file":"static/js/161.2ab45465.chunk.js","mappings":"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","sources":["../node_modules/blurhash/src/base83.ts","../node_modules/blurhash/src/utils.ts","../node_modules/blurhash/src/error.ts","../node_modules/blurhash/src/decode.ts","components/ResponsiveAuthImage.js","components/ShareModal.js","pages/ManagePostsPage.js"],"sourcesContent":["const digitCharacters = [\n  \"0\",\n  \"1\",\n  \"2\",\n  \"3\",\n  \"4\",\n  \"5\",\n  \"6\",\n  \"7\",\n  \"8\",\n  \"9\",\n  \"A\",\n  \"B\",\n  \"C\",\n  \"D\",\n  \"E\",\n  \"F\",\n  \"G\",\n  \"H\",\n  \"I\",\n  \"J\",\n  \"K\",\n  \"L\",\n  \"M\",\n  \"N\",\n  \"O\",\n  \"P\",\n  \"Q\",\n  \"R\",\n  \"S\",\n  \"T\",\n  \"U\",\n  \"V\",\n  \"W\",\n  \"X\",\n  \"Y\",\n  \"Z\",\n  \"a\",\n  \"b\",\n  \"c\",\n  \"d\",\n  \"e\",\n  \"f\",\n  \"g\",\n  \"h\",\n  \"i\",\n  \"j\",\n  \"k\",\n  \"l\",\n  \"m\",\n  \"n\",\n  \"o\",\n  \"p\",\n  \"q\",\n  \"r\",\n  \"s\",\n  \"t\",\n  \"u\",\n  \"v\",\n  \"w\",\n  \"x\",\n  \"y\",\n  \"z\",\n  \"#\",\n  \"$\",\n  \"%\",\n  \"*\",\n  \"+\",\n  \",\",\n  \"-\",\n  \".\",\n  \":\",\n  \";\",\n  \"=\",\n  \"?\",\n  \"@\",\n  \"[\",\n  \"]\",\n  \"^\",\n  \"_\",\n  \"{\",\n  \"|\",\n  \"}\",\n  \"~\",\n];\n\nexport const decode83 = (str: String) => {\n  let value = 0;\n  for (let i = 0; i < str.length; i++) {\n    const c = str[i];\n    const digit = digitCharacters.indexOf(c);\n    value = value * 83 + digit;\n  }\n  return value;\n};\n\nexport const encode83 = (n: number, length: number): string => {\n  var result = \"\";\n  for (let i = 1; i <= length; i++) {\n    let digit = (Math.floor(n) / Math.pow(83, length - i)) % 83;\n    result += digitCharacters[Math.floor(digit)];\n  }\n  return result;\n};\n","export const sRGBToLinear = (value: number) => {\n  let v = value / 255;\n  if (v <= 0.04045) {\n    return v / 12.92;\n  } else {\n    return Math.pow((v + 0.055) / 1.055, 2.4);\n  }\n};\n\nexport const linearTosRGB = (value: number) => {\n  let v = Math.max(0, Math.min(1, value));\n  if (v <= 0.0031308) {\n    return Math.trunc(v * 12.92 * 255 + 0.5);\n  } else {\n    return Math.trunc((1.055 * Math.pow(v, 1 / 2.4) - 0.055) * 255 + 0.5);\n  }\n};\n\nexport const sign = (n: number) => (n < 0 ? -1 : 1);\n\nexport const signPow = (val: number, exp: number) =>\n  sign(val) * Math.pow(Math.abs(val), exp);\n","export class ValidationError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = \"ValidationError\";\n    this.message = message;\n  }\n}\n","import { decode83 } from \"./base83\";\nimport { sRGBToLinear, signPow, linearTosRGB } from \"./utils\";\nimport { ValidationError } from \"./error\";\n\n/**\n * Returns an error message if invalid or undefined if valid\n * @param blurhash\n */\nconst validateBlurhash = (blurhash: string) => {\n  if (!blurhash || blurhash.length < 6) {\n    throw new ValidationError(\n      \"The blurhash string must be at least 6 characters\"\n    );\n  }\n\n  const sizeFlag = decode83(blurhash[0]);\n  const numY = Math.floor(sizeFlag / 9) + 1;\n  const numX = (sizeFlag % 9) + 1;\n\n  if (blurhash.length !== 4 + 2 * numX * numY) {\n    throw new ValidationError(\n      `blurhash length mismatch: length is ${\n        blurhash.length\n      } but it should be ${4 + 2 * numX * numY}`\n    );\n  }\n};\n\nexport const isBlurhashValid = (\n  blurhash: string\n): { result: boolean; errorReason?: string } => {\n  try {\n    validateBlurhash(blurhash);\n  } catch (error) {\n    return { result: false, errorReason: error.message };\n  }\n\n  return { result: true };\n};\n\nconst decodeDC = (value: number) => {\n  const intR = value >> 16;\n  const intG = (value >> 8) & 255;\n  const intB = value & 255;\n  return [sRGBToLinear(intR), sRGBToLinear(intG), sRGBToLinear(intB)];\n};\n\nconst decodeAC = (value: number, maximumValue: number) => {\n  const quantR = Math.floor(value / (19 * 19));\n  const quantG = Math.floor(value / 19) % 19;\n  const quantB = value % 19;\n\n  const rgb = [\n    signPow((quantR - 9) / 9, 2.0) * maximumValue,\n    signPow((quantG - 9) / 9, 2.0) * maximumValue,\n    signPow((quantB - 9) / 9, 2.0) * maximumValue,\n  ];\n\n  return rgb;\n};\n\nconst decode = (\n  blurhash: string,\n  width: number,\n  height: number,\n  punch?: number\n) => {\n  validateBlurhash(blurhash);\n\n  punch = punch | 1;\n\n  const sizeFlag = decode83(blurhash[0]);\n  const numY = Math.floor(sizeFlag / 9) + 1;\n  const numX = (sizeFlag % 9) + 1;\n\n  const quantisedMaximumValue = decode83(blurhash[1]);\n  const maximumValue = (quantisedMaximumValue + 1) / 166;\n\n  const colors = new Array(numX * numY);\n\n  for (let i = 0; i < colors.length; i++) {\n    if (i === 0) {\n      const value = decode83(blurhash.substring(2, 6));\n      colors[i] = decodeDC(value);\n    } else {\n      const value = decode83(blurhash.substring(4 + i * 2, 6 + i * 2));\n      colors[i] = decodeAC(value, maximumValue * punch);\n    }\n  }\n\n  const bytesPerRow = width * 4;\n  const pixels = new Uint8ClampedArray(bytesPerRow * height);\n\n  for (let y = 0; y < height; y++) {\n    for (let x = 0; x < width; x++) {\n      let r = 0;\n      let g = 0;\n      let b = 0;\n\n      for (let j = 0; j < numY; j++) {\n        for (let i = 0; i < numX; i++) {\n          const basis =\n            Math.cos((Math.PI * x * i) / width) *\n            Math.cos((Math.PI * y * j) / height);\n          let color = colors[i + j * numX];\n          r += color[0] * basis;\n          g += color[1] * basis;\n          b += color[2] * basis;\n        }\n      }\n\n      let intR = linearTosRGB(r);\n      let intG = linearTosRGB(g);\n      let intB = linearTosRGB(b);\n\n      pixels[4 * x + 0 + y * bytesPerRow] = intR;\n      pixels[4 * x + 1 + y * bytesPerRow] = intG;\n      pixels[4 * x + 2 + y * bytesPerRow] = intB;\n      pixels[4 * x + 3 + y * bytesPerRow] = 255; // alpha\n    }\n  }\n  return pixels;\n};\n\nexport default decode;\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport 'react-lazy-load-image-component/src/effects/opacity.css'; // Using opacity for a smoother transition\r\nimport { API_URL } from '../apiConfig';\r\nimport { decode } from 'blurhash';\r\n\r\n// This component decodes the blurhash and draws it to a canvas.\r\nconst BlurHashCanvas = ({ hash, width, height, punch = 1 }) => {\r\n    const canvasRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (canvasRef.current && hash && width && height) {\r\n            try {\r\n                const pixels = decode(hash, width, height, punch);\r\n                const ctx = canvasRef.current.getContext(\"2d\");\r\n                if (ctx) {\r\n                    const imageData = ctx.createImageData(width, height);\r\n                    imageData.data.set(pixels);\r\n                    ctx.putImageData(imageData, 0, 0);\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Failed to decode blurhash\", error);\r\n            }\r\n        }\r\n    }, [hash, width, height, punch]);\r\n\r\n    if (!hash || !width || !height) return null;\r\n\r\n    return (\r\n        <canvas\r\n            ref={canvasRef}\r\n            width={width}\r\n            height={height}\r\n            className=\"absolute inset-0 w-full h-full\"\r\n        />\r\n    );\r\n};\r\n\r\nconst ResponsiveAuthImage = ({ baseName, alt, className, sizes, onLoad, eager = false, width, height, blurHash }) => {\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n    const handleImageLoad = () => {\r\n        setIsLoaded(true);\r\n        if (onLoad) {\r\n            onLoad();\r\n        }\r\n    };\r\n\r\n    if (!baseName || typeof baseName !== 'string') {\r\n        return <div className={`bg-gray-200 ${className}`} style={{ aspectRatio: width && height ? `${width}/${height}` : '1' }} />;\r\n    }\r\n\r\n    const uuidRegex = /([a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})/;\r\n    const match = baseName.match(uuidRegex);\r\n\r\n    if (!match) {\r\n        console.warn(`ResponsiveAuthImage: Could not extract a valid image ID from baseName: \"${baseName}\"`);\r\n        return <div className={`bg-gray-200 ${className}`} style={{ aspectRatio: width && height ? `${width}/${height}` : '1' }} />;\r\n    }\r\n\r\n    const cleanedBaseName = match[0];\r\n\r\n    const src = `${API_URL}/api/uploads/${cleanedBaseName}-small.webp`;\r\n    const srcSet = [\r\n        `${API_URL}/api/uploads/${cleanedBaseName}-small.webp 300w`,\r\n        `${API_URL}/api/uploads/${cleanedBaseName}-medium.webp 600w`,\r\n        `${API_URL}/api/uploads/${cleanedBaseName}.webp 1200w`\r\n    ].join(', ');\r\n\r\n    const imageProps = {\r\n        alt, // alt is still passed here for LazyLoadImage\r\n        src,\r\n        srcSet,\r\n        sizes,\r\n        className: `transition-opacity duration-300 ${isLoaded ? 'opacity-100' : 'opacity-0'} ${className}`,\r\n        width,\r\n        height,\r\n    };\r\n\r\n    if (eager) {\r\n        return (\r\n            <img\r\n                src={src}\r\n                srcSet={srcSet}\r\n                sizes={sizes}\r\n                className={className}\r\n                onLoad={handleImageLoad}\r\n                fetchPriority=\"high\"\r\n                width={width}\r\n                height={height}\r\n                alt={alt} // --- THIS IS THE FIX --- Explicitly adding the alt prop\r\n            />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"relative w-full h-full overflow-hidden\">\r\n            {!isLoaded && blurHash && <BlurHashCanvas hash={blurHash} width={32} height={32} />}\r\n            <LazyLoadImage\r\n                {...imageProps}\r\n                effect=\"opacity\"\r\n                afterLoad={handleImageLoad}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ResponsiveAuthImage;","import React, { useState } from 'react';\r\n\r\nconst ShareModal = ({ post, onShare, onClose }) => {\r\n    const [message, setMessage] = useState('');\r\n    const [tags, setTags] = useState('');\r\n\r\n    const handleShareClick = () => {\r\n        onShare({\r\n            postId: post.id,\r\n            message,\r\n            tags: tags.split(',').map(tag => tag.trim()).filter(Boolean)\r\n        });\r\n    };\r\n    \r\n    const pageUrl = `https://treishfin.treishvaamgroup.com/blog/${post.id}`;\r\n\r\n    return (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center z-50\">\r\n            <div className=\"bg-white p-6 rounded-lg shadow-xl w-full max-w-md\">\r\n                <h2 className=\"text-2xl font-bold mb-4\">Share to LinkedIn</h2>\r\n                <p className=\"mb-2 text-sm text-gray-600\">\r\n                    <strong>Post:</strong> {post.title}\r\n                </p>\r\n                <div className=\"mb-4\">\r\n                    <label htmlFor=\"message\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                        Custom Message (Optional)\r\n                    </label>\r\n                    <textarea\r\n                        id=\"message\"\r\n                        value={message}\r\n                        onChange={(e) => setMessage(e.target.value)}\r\n                        rows=\"4\"\r\n                        className=\"w-full p-2 border border-gray-300 rounded-md shadow-sm\"\r\n                        placeholder={`Check out this article: ${post.title}\\n\\n${pageUrl}`}\r\n                    ></textarea>\r\n                </div>\r\n                <div className=\"mb-6\">\r\n                    <label htmlFor=\"tags\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                        Hashtags (comma-separated)\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"tags\"\r\n                        value={tags}\r\n                        onChange={(e) => setTags(e.target.value)}\r\n                        className=\"w-full p-2 border border-gray-300 rounded-md shadow-sm\"\r\n                        placeholder=\"e.g., #finance, #investing, #fintech\"\r\n                    />\r\n                </div>\r\n                <div className=\"flex justify-end space-x-3\">\r\n                    <button\r\n                        onClick={onClose}\r\n                        className=\"py-2 px-4 bg-gray-200 text-gray-800 rounded-lg hover:bg-gray-300\"\r\n                    >\r\n                        Cancel\r\n                    </button>\r\n                    <button\r\n                        onClick={handleShareClick}\r\n                        className=\"py-2 px-4 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\r\n                    >\r\n                        Share to LinkedIn\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ShareModal;\r\n","import React, { useEffect, useState, useMemo, useCallback } from 'react';\r\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\r\nimport { getAllPostsForAdmin as getPosts, deletePost, getDrafts, duplicatePost, bulkDeletePosts } from '../apiConfig';\r\nimport ResponsiveAuthImage from '../components/ResponsiveAuthImage';\r\nimport ShareModal from '../components/ShareModal';\r\nimport { FaShareAlt, FaEdit, FaTrash, FaPlus, FaCopy } from 'react-icons/fa';\r\n\r\nconst formatDisplayDate = (dateValue) => {\r\n    if (!dateValue) return 'No date available';\r\n    const date = new Date(dateValue);\r\n    if (isNaN(date.getTime())) return 'No date available';\r\n    return date.toLocaleString('en-US', {\r\n        year: 'numeric', month: 'long', day: 'numeric',\r\n        hour: '2-digit', minute: '2-digit', hour12: true\r\n    });\r\n};\r\n\r\nconst formatLayoutStyle = (style) => {\r\n    if (!style || style === 'DEFAULT') return 'Masonry';\r\n    if (style === 'BANNER') return 'Banner';\r\n    if (style.startsWith('MULTI_COLUMN_')) {\r\n        const count = style.split('_')[2];\r\n        return `${count} Column Row`;\r\n    }\r\n    return style;\r\n};\r\n\r\nconst PostsTable = ({\r\n    posts,\r\n    handleDelete,\r\n    handleDuplicate,\r\n    handleOpenShareModal,\r\n    isScheduled = false,\r\n    isDraft = false,\r\n    selectedPostIds,\r\n    onSelectOne,\r\n    onSelectAll,\r\n    isAddColumnDisabled\r\n}) => {\r\n    const navigate = useNavigate();\r\n    const isAllSelected = useMemo(() => posts.length > 0 && selectedPostIds.length === posts.length, [selectedPostIds, posts]);\r\n\r\n    if (!posts || posts.length === 0) {\r\n        return <p className=\"p-6 text-center text-gray-500\">No {isDraft ? 'drafts' : (isScheduled ? 'scheduled' : 'published')} posts found.</p>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"overflow-x-auto\">\r\n            <table className=\"min-w-full leading-normal\">\r\n                <thead>\r\n                    <tr>\r\n                        <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left\">\r\n                           <input type=\"checkbox\" className=\"form-checkbox h-4 w-4 text-sky-600 rounded focus:ring-sky-500\" checked={isAllSelected} onChange={onSelectAll} />\r\n                        </th>\r\n                        <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">Title</th>\r\n                        <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">Category</th>\r\n                        <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">Post Layout</th>\r\n                        <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\r\n                            {isDraft ? 'Last Saved' : (isScheduled ? 'Scheduled For' : 'Last Updated')}\r\n                        </th>\r\n                        <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {posts.map(post => (\r\n                        <tr key={post.id} className={`hover:bg-gray-50 ${selectedPostIds.includes(post.id) ? 'bg-sky-50' : ''}`}>\r\n                            <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\r\n                                <input type=\"checkbox\" className=\"form-checkbox h-4 w-4 text-sky-600 rounded focus:ring-sky-500\" checked={selectedPostIds.includes(post.id)} onChange={() => onSelectOne(post.id)} />\r\n                            </td>\r\n                            <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\r\n                                <div className=\"flex items-center\">\r\n                                    <div className=\"flex-shrink-0 w-10 h-10 mr-4\">\r\n                                        <ResponsiveAuthImage baseName={post.thumbnails && post.thumbnails.length > 0 ? post.thumbnails[0].imageUrl : null} alt={post.title} className=\"w-full h-full rounded-full object-cover\" sizes=\"40px\" />\r\n                                    </div>\r\n                                    <p className=\"text-gray-900 font-medium\">{post.title}</p>\r\n                                </div>\r\n                            </td>\r\n                            <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\r\n                                <span className=\"bg-gray-100 text-gray-700 text-xs font-semibold px-2 py-1 rounded-full\">{post.category?.name || 'N/A'}</span>\r\n                            </td>\r\n                            <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\r\n                                <span className=\"text-gray-800\">{formatLayoutStyle(post.layoutStyle)}</span>\r\n                            </td>\r\n                            <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\r\n                                <p className=\"text-gray-900\">{formatDisplayDate(isScheduled ? post.scheduledTime : (post.updatedAt || post.createdAt))}</p>\r\n                            </td>\r\n                            <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\r\n                                <div className=\"flex items-center space-x-4\">\r\n                                    {!isScheduled && !isDraft && <button onClick={() => handleOpenShareModal(post)} className=\"text-gray-500 hover:text-green-600\" title=\"Share\"><FaShareAlt /></button>}\r\n                                    <button onClick={() => navigate(`/dashboard/blog/edit/${post.userFriendlySlug}/${post.id}`)} className=\"text-gray-500 hover:text-sky-600\" title=\"Edit\"><FaEdit /></button>\r\n                                    <button onClick={() => handleDelete(post.id)} className=\"text-gray-500 hover:text-red-600\" title=\"Delete\"><FaTrash /></button>\r\n                                    {post.layoutStyle && post.layoutStyle.startsWith('MULTI_COLUMN') && (\r\n                                        <button\r\n                                            onClick={() => handleDuplicate(post.id)}\r\n                                            className={`text-gray-500 ${isAddColumnDisabled(post.layoutGroupId, post.layoutStyle) ? 'opacity-50 cursor-not-allowed' : 'hover:text-blue-600'}`}\r\n                                            title={isAddColumnDisabled(post.layoutGroupId, post.layoutStyle) ? \"Group is full\" : \"Add post column\"}\r\n                                            disabled={isAddColumnDisabled(post.layoutGroupId, post.layoutStyle)}\r\n                                        >\r\n                                            <FaCopy />\r\n                                        </button>\r\n                                    )}\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nconst ManagePostsPage = () => {\r\n    const location = useLocation();\r\n    const [allPosts, setAllPosts] = useState([]);\r\n    const [drafts, setDrafts] = useState([]);\r\n    const [error, setError] = useState('');\r\n    const [isShareModalOpen, setIsShareModalOpen] = useState(false);\r\n    const [selectedPost, setSelectedPost] = useState(null);\r\n    const [activeTab, setActiveTab] = useState('published');\r\n    const [selectedPostIds, setSelectedPostIds] = useState([]);\r\n\r\n    const fetchAllData = useCallback(async () => {\r\n        try {\r\n            const [postsRes, draftsRes] = await Promise.all([getPosts(), getDrafts()]);\r\n            setAllPosts(postsRes.data || []);\r\n            setDrafts(draftsRes.data || []);\r\n        } catch (err) {\r\n            setError('Failed to fetch posts or drafts.');\r\n            console.error(err);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        fetchAllData();\r\n    }, [fetchAllData]);\r\n\r\n    useEffect(() => {\r\n        if (location.hash === '#drafts') {\r\n            setActiveTab('drafts');\r\n        }\r\n    }, [location.hash]);\r\n\r\n    useEffect(() => {\r\n        setSelectedPostIds([]);\r\n    }, [activeTab]);\r\n\r\n    const { publishedPosts, scheduledPosts } = useMemo(() => {\r\n        const published = allPosts.filter(p => p.status === 'PUBLISHED');\r\n        const scheduled = allPosts.filter(p => p.status === 'SCHEDULED');\r\n        return { publishedPosts: published, scheduledPosts: scheduled };\r\n    }, [allPosts]);\r\n\r\n    const layoutGroupCounts = useMemo(() => {\r\n        const counts = {};\r\n        [...allPosts, ...drafts].forEach(p => {\r\n            if (p.layoutGroupId) {\r\n                counts[p.layoutGroupId] = (counts[p.layoutGroupId] || 0) + 1;\r\n            }\r\n        });\r\n        return counts;\r\n    }, [allPosts, drafts]);\r\n\r\n    const isAddColumnDisabled = useCallback((groupId, layoutStyle) => {\r\n        if (!groupId || !layoutStyle || !layoutStyle.startsWith('MULTI_COLUMN')) {\r\n            return true;\r\n        }\r\n        try {\r\n            const limit = parseInt(layoutStyle.split('_')[2], 10);\r\n            const currentCount = layoutGroupCounts[groupId] || 0;\r\n            return currentCount >= limit;\r\n        } catch {\r\n            return true;\r\n        }\r\n    }, [layoutGroupCounts]);\r\n\r\n    const handleDelete = async (id) => {\r\n        if (window.confirm('Are you sure you want to delete this post?')) {\r\n            try {\r\n                await deletePost(id);\r\n                await fetchAllData();\r\n            } catch (err) {\r\n                setError('Failed to delete the post.');\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleDuplicate = async (id) => {\r\n        if (window.confirm('This will create a new draft by duplicating the selected post\\'s layout. Continue?')) {\r\n            try {\r\n                await duplicatePost(id);\r\n                await fetchAllData();\r\n                setActiveTab('drafts');\r\n            } catch (err) {\r\n                setError('Failed to duplicate the post.');\r\n                console.error(err);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleOpenShareModal = (post) => {\r\n        setSelectedPost(post);\r\n        setIsShareModalOpen(true);\r\n    };\r\n\r\n    const handleSelectOne = (postId) => {\r\n        setSelectedPostIds(prev =>\r\n            prev.includes(postId) ? prev.filter(id => id !== postId) : [...prev, postId]\r\n        );\r\n    };\r\n    \r\n    const currentVisiblePosts = useMemo(() => {\r\n        if (activeTab === 'published') return publishedPosts;\r\n        if (activeTab === 'drafts') return drafts;\r\n        if (activeTab === 'scheduled') return scheduledPosts;\r\n        return [];\r\n    }, [activeTab, publishedPosts, drafts, scheduledPosts]);\r\n\r\n    const handleSelectAll = (e) => {\r\n        if (e.target.checked) {\r\n            const postIds = currentVisiblePosts.map(p => p.id);\r\n            setSelectedPostIds(postIds);\r\n        } else {\r\n            setSelectedPostIds([]);\r\n        }\r\n    };\r\n\r\n    const handleBulkDelete = async () => {\r\n        if (selectedPostIds.length === 0) return;\r\n        if (window.confirm(`Are you sure you want to delete ${selectedPostIds.length} selected post(s)?`)) {\r\n            try {\r\n                await bulkDeletePosts(selectedPostIds);\r\n                setSelectedPostIds([]);\r\n                await fetchAllData();\r\n            } catch (err) {\r\n                setError('Failed to delete the selected posts.');\r\n                console.error(err);\r\n            }\r\n        }\r\n    };\r\n    \r\n    const tableProps = {\r\n        handleDelete,\r\n        handleDuplicate,\r\n        handleOpenShareModal,\r\n        selectedPostIds,\r\n        onSelectOne: handleSelectOne,\r\n        isAddColumnDisabled\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container mx-auto p-6\">\r\n                <div className=\"flex justify-between items-center mb-6\">\r\n                    <h1 className=\"text-3xl font-bold text-gray-800\">Manage Posts</h1>\r\n                    <Link to=\"/dashboard/blog/new\" className=\"bg-sky-600 text-white font-bold py-2 px-4 rounded-lg hover:bg-sky-700 transition flex items-center\">\r\n                        <FaPlus className=\"mr-2\" /> Create New Post\r\n                    </Link>\r\n                </div>\r\n\r\n                {selectedPostIds.length > 0 && (\r\n                    <div className=\"mb-4 p-3 bg-sky-100 border border-sky-200 rounded-lg flex items-center gap-4\">\r\n                        <p className=\"text-sm font-semibold text-sky-800\">{selectedPostIds.length} post(s) selected.</p>\r\n                        <button\r\n                            onClick={handleBulkDelete}\r\n                            className=\"bg-red-600 text-white text-sm font-bold py-1 px-3 rounded-lg hover:bg-red-700 transition flex items-center\"\r\n                        >\r\n                            <FaTrash className=\"mr-2\" /> Delete Selected\r\n                        </button>\r\n                    </div>\r\n                )}\r\n                \r\n                <div className=\"mb-4 border-b border-gray-200\">\r\n                    <nav className=\"flex space-x-4\" aria-label=\"Tabs\">\r\n                        <button onClick={() => setActiveTab('published')} className={`px-3 py-2 font-medium text-sm rounded-t-lg ${activeTab === 'published' ? 'border-b-2 border-sky-600 text-sky-600' : 'text-gray-500 hover:text-gray-700'}`}>\r\n                            Published ({publishedPosts.length})\r\n                        </button>\r\n                        <button onClick={() => setActiveTab('drafts')} className={`px-3 py-2 font-medium text-sm rounded-t-lg ${activeTab === 'drafts' ? 'border-b-2 border-sky-600 text-sky-600' : 'text-gray-500 hover:text-gray-700'}`}>\r\n                            Drafts ({drafts.length})\r\n                        </button>\r\n                        <button onClick={() => setActiveTab('scheduled')} className={`px-3 py-2 font-medium text-sm rounded-t-lg ${activeTab === 'scheduled' ? 'border-b-2 border-sky-600 text-sky-600' : 'text-gray-500 hover:text-gray-700'}`}>\r\n                            Scheduled ({scheduledPosts.length})\r\n                        </button>\r\n                    </nav>\r\n                </div>\r\n                {error && <p className=\"text-red-500 bg-red-100 p-3 rounded mb-4\">{error}</p>}\r\n                <div className=\"bg-white shadow-md rounded-lg overflow-hidden\">\r\n                    {activeTab === 'published' && <PostsTable posts={publishedPosts} {...tableProps} onSelectAll={handleSelectAll} />}\r\n                    {activeTab === 'drafts' && <PostsTable posts={drafts} {...tableProps} onSelectAll={handleSelectAll} isDraft={true} />}\r\n                    {activeTab === 'scheduled' && <PostsTable posts={scheduledPosts} {...tableProps} onSelectAll={handleSelectAll} isScheduled={true} />}\r\n                </div>\r\n            </div>\r\n            {isShareModalOpen && <ShareModal post={selectedPost} onClose={() => setIsShareModalOpen(false)} />}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ManagePostsPage;"],"names":["q","x","t","e","r","length","n","indexOf","f","Math","pow","h","max","min","trunc","M","F","abs","d","Error","constructor","super","this","name","message","C","floor","concat","z","L","l","j","U","m","b","i","u","Array","o","a","substring","c","s","Uint8ClampedArray","y","B","R","w","P","G","cos","PI","T","V","I","E","BlurHashCanvas","_ref","hash","width","height","punch","canvasRef","useRef","useEffect","current","pixels","decode","ctx","getContext","imageData","createImageData","data","set","putImageData","error","console","_jsx","ref","className","_ref2","baseName","alt","sizes","onLoad","eager","blurHash","isLoaded","setIsLoaded","useState","handleImageLoad","style","aspectRatio","match","warn","cleanedBaseName","src","API_URL","srcSet","join","imageProps","fetchPriority","_jsxs","children","LazyLoadImage","_objectSpread","effect","afterLoad","post","onShare","onClose","setMessage","tags","setTags","pageUrl","id","title","htmlFor","value","onChange","target","rows","placeholder","type","onClick","handleShareClick","postId","split","map","tag","trim","filter","Boolean","formatDisplayDate","dateValue","date","Date","isNaN","getTime","toLocaleString","year","month","day","hour","minute","hour12","formatLayoutStyle","startsWith","count","PostsTable","posts","handleDelete","handleDuplicate","handleOpenShareModal","isScheduled","isDraft","selectedPostIds","onSelectOne","onSelectAll","isAddColumnDisabled","navigate","useNavigate","isAllSelected","useMemo","checked","_post$category","includes","ResponsiveAuthImage","thumbnails","imageUrl","category","layoutStyle","scheduledTime","updatedAt","createdAt","FaShareAlt","userFriendlySlug","FaEdit","FaTrash","layoutGroupId","disabled","FaCopy","ManagePostsPage","location","useLocation","allPosts","setAllPosts","drafts","setDrafts","setError","isShareModalOpen","setIsShareModalOpen","selectedPost","setSelectedPost","activeTab","setActiveTab","setSelectedPostIds","fetchAllData","useCallback","async","postsRes","draftsRes","Promise","all","getPosts","getDrafts","err","publishedPosts","scheduledPosts","p","status","layoutGroupCounts","counts","forEach","groupId","limit","parseInt","_unused","currentVisiblePosts","handleSelectAll","postIds","tableProps","window","confirm","deletePost","duplicatePost","prev","_Fragment","Link","to","FaPlus","bulkDeletePosts","ShareModal"],"sourceRoot":""}